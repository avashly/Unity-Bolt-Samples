<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Extensions</name>
  </assembly>
  <members><member name="T:J#Type"><summary>Provides a typing and type-reflection system for ECMAScript (JavaScript) object-oriented programming functionality.</summary></member><member name="M:J#Type.callBaseMethod"><summary>Invokes a base method with specified arguments.</summary><returns>A value of the class that the base method returns. If the base method does not return a value, no value is returned.</returns><param name="instance">The instance whose base method is being called. Usually this.</param><param name="name">A string that represents the name of the base method.</param><param name="baseArguments">(Optional) An array of arguments to pass to the base method. Can be null or an <see cref="T:J#Array" /> object that has a null element.</param><exception cref="M:J#Error.invalidOperation">(Debug) <paramref name="name" /> does not exist for the base class.</exception></member><member name="M:J#Type.getBaseMethod"><summary>Returns the base implementation of a method from the base class of the specified instance.</summary><returns>Returns the base implementation of the <paramref name="name" /> method from the base class of <paramref name="instance" />, or null if the <paramref name="name" /> method does not exist in <paramref name="instance" />.</returns><param name="instance">The instance for which the base method is requested.</param><param name="name">The name of the method to retrieve as a reference.</param><exception cref="M:J#Error.argumentType">(Debug) <paramref name="instance" /> is not an instance of the current type.</exception></member><member name="M:J#Type.getBaseType"><summary>Returns the base class of the instance.</summary><returns>The base class of the instance.</returns></member><member name="M:J#Type.getInterfaces"><summary>Returns an <see cref="T:J#Array" /> object that contains the list of interfaces that the type implements.</summary><returns>An <see cref="T:J#Array" /> object that contains the list of interfaces that the type implements.</returns></member><member name="M:J#Type.getName"><summary>Returns the name of the type of the instance.</summary><returns>A string representing the fully qualified name of the type of the instance.</returns></member><member name="M:J#Type.implementsInterface"><summary>Determines whether a class implements a specified interface type.</summary><returns>true if the class implements <paramref name="interfaceType" />; otherwise, false.</returns><param name="interfaceType">The interface to test.</param></member><member name="M:J#Type.inheritsFrom"><summary>Determines whether an instance inherits from a specified class.</summary><returns>true if the instance inherits from <paramref name="parentType" />; otherwise, false.</returns><param name="parentType">The fully qualified name of the class to test as a base class for the current instance.</param></member><member name="M:J#Type.initializeBase"><summary>Initializes the base class and its members in the context of a given instance, which provides the model for inheritance and for initializing base members.</summary><returns>The instance of the base class.</returns><param name="instance">The instance to initialize the base class for. Usually this.</param><param name="baseArguments">(Optional) The arguments for the base constructor. Can be null.</param><exception cref="M:J#Error.argumentType">(Debug) <paramref name="instance" /> is not of the same type as the current instance.</exception></member><member name="M:J#Type.isImplementedBy"><summary>Determines whether an instance implements an interface.</summary><returns>true if <paramref name="typeInstanceVar" /> implements the interface; false if <paramref name="typeInstanceVar" /> does not implement the interface, or if it is undefined or null.</returns><param name="instance">The instance on which the interface is tested.</param></member><member name="M:J#Type.isInstanceOfType"><summary>Returns a value that indicates whether an object is an instance of a specified class or of one of its derived classes.</summary><returns>true if <paramref name="instance" /> is an instance of the class; false if <paramref name="instance" /> does not implement the interface, or if it is undefined or null.</returns><param name="instance">The object to test.</param></member><member name="M:J#Type.registerClass"><summary>Registers a class as defined by a constructor with an optional base type and interface type.</summary><returns>The registered type.</returns><param name="typeName">A string that represents the fully qualified name of the type.</param><param name="baseType">(Optional) The base type.</param><param name="interfaceTypes">(Optional) An unbounded array of interface type definitions that the type implements.</param><exception cref="M:J#Error.argument">(Debug) <paramref name="typeName" /> cannot be evaluated.-or-(Debug) <paramref name="baseType" /> is not a class.</exception><exception cref="M:J#Error.invalidOperation">(Debug) The class specified by <paramref name="typeName" /> is already registered.</exception></member><member name="M:J#Type.registerInterface"><summary>Registers an interface defined by a constructor.</summary><returns>The registered interface.</returns><param name="typeName">A string that represents the fully qualified name of the class to be registered as an interface.</param><exception cref="M:J#Error.argument">(Debug) <paramref name="typeName" /> cannot be evaluated as a defined type.</exception><exception cref="M:J#Error.invalidOperation">(Debug) The interface specified by <paramref name="typeName" /> is already registered.</exception></member><member name="M:J#Type.resolveInheritance"><summary>Copies members from the base class to the prototype associated with the derived class, and continues this process up the inheritance chain. This enables you to reflect on the inherited members of a derived type.</summary></member><member name="M:J#Type.registerEnum"><summary /><param name="name">TBD</param><param name="flags">TBD</param></member><member name="M:J#Type.createCallback"><summary>Creates a callback method that retains a parameter given the function to callback and the parameter to pass to it.</summary><returns>The callback function.</returns><param name="method">The function for which the callback method will be created.</param><param name="context">The parameter to pass to the function. This parameter can be null, but it cannot be omitted.</param></member><member name="M:J#Type.createDelegate"><summary>Creates a delegate function that keeps the context from its creation. The context defines the object instance to which the this keyword points.</summary><returns>The delegate function.</returns><param name="instance">The object instance that will be the context for the function. This parameter may be null.</param><param name="method">The function from which the delegate is created.</param></member><member name="M:J#Type.emptyMethod"><summary>Does nothing</summary></member><member name="M:J#Type.emptyFunction"><summary>Does nothing.</summary></member><member name="M:J#Type.getRootNamespaces"><summary>Returns an <see cref="T:J#Array" /> object containing references to all the root namespaces of the client application. This method is static and is invoked without creating an instance of the object.</summary><returns>An object containing references to all the root namespaces of the client application.</returns></member><member name="M:J#Type.isClass"><summary>Returns a value that indicates whether the specified type is a class. This method is static and can be invoked without creating an instance of the object.</summary><returns>true if the specified type is a class; otherwise, false.</returns><param name="type">The type to test.</param></member><member name="M:J#Type.isInterface"><summary>Returns a value that indicates whether the specified type is an interface. This is a static member that is invoked directly without creating an instance of the class.</summary><returns>true if the specified type is an interface; otherwise, false.</returns><param name="type">The type to test.</param></member><member name="M:J#Type.isNamespace"><summary>Returns a value that indicates whether the specified object is a namespace. This is a static member that is invoked directly without creating an instance of the class.</summary><returns>true if the specified object is a namespace; otherwise, false.</returns><param name="object">The object to test.</param></member><member name="M:J#Type.parse"><summary>Returns an instance of the type specified by a type name. This is a static member that is invoked directly without creating an instance of its class.</summary><returns>The class represented by <paramref name="typeName" />, or null if a class that matches <paramref name="typeName" /> does not occur in the namespace. </returns><param name="typeName">A string that represents a fully qualified class name. Can be null.</param><param name="ns">(Optional) The namespace that contains the class.</param><exception cref="M:J#Error.argument">(Debug) <paramref name="typeName" /> cannot be evaluated as a class.</exception></member><member name="M:J#Type.registerNamespace"><summary>Creates a namespace. This member is static and can be invoked without creating an instance of the class.</summary><param name="namespacePath">A string that represents the fully qualified namespace to register.</param><exception cref="M:J#Error.argument">(Debug) <paramref name="namespacePath" /> contains invalid characters.</exception><exception cref="M:J#Error.invalidOperation">(Debug) <paramref name="namespacePath" /> is not a valid namespace.</exception></member><member name="M:J#Type.isEnum"><summary /><param name="type">TBD</param></member><member name="M:J#Type.isFlags"><summary /><param name="type">TBD</param></member><member name="T:J#Array"><summary>Provides extensions to the base ECMAScript (JavaScript) Array functionality by adding static methods.</summary></member><member name="M:J#Array.enqueue"><summary>Adds the specified object to the end of an Array object. This function is static and is invoked without creating an instance of the object.</summary><param name="array">The array to add <paramref name="item" /> to.</param><param name="item">The object to add to the end of the array.</param></member><member name="M:J#Array.add"><summary>Adds an element to the end of an <see cref="T:J#Array" /> object. This function is static and is invoked without creating an instance of the object.</summary><param name="array">The array to add the item to.</param><param name="item">The object to add to the array.</param></member><member name="M:J#Array.addRange"><summary>Copies all the elements of a specified <see cref="T:J#Array" /> object to the end of the array. This function is static and can be invoked without creating an instance of the object.</summary><param name="array">The array to add <paramref name="items" /> to.</param><param name="items">The array of items to append.</param></member><member name="M:J#Array.clear"><summary>Removes all elements from an <see cref="T:J#Array" /> instance. This function is static and is invoked without creating an instance of the object.</summary><param name="array">The array to clear.</param></member><member name="M:J#Array.clone"><summary>Creates a shallow copy of an <see cref="T:J#Array" /> object. This function is static and can be invoked without creating an instance of the object.</summary><param name="array">The array to create a shallow copy of.</param></member><member name="M:J#Array.contains"><summary>Determines whether the specified object exists as an element in an <see cref="T:J#Array" /> object. This function is static and can be invoked without creating an instance of the object.</summary><returns>true if the specified object exists as an element in the array; otherwise, false.</returns><param name="array">The array to search.</param><param name="item">The object to find in the array.</param></member><member name="M:J#Array.dequeue"><summary>Removes the first element from the specified <see cref="T:J#Array" /> object and returns it.</summary><returns>The first element of the array.</returns><param name="array">The array to remove the first element from.</param></member><member name="M:J#Array.forEach"><summary>Calls a specified function for each element of an <see cref="T:J#Array" /> object. This function is static and can be invoked without creating an instance of the object.</summary><param name="array">The <see cref="T:J#Array" /> object to enumerate.</param><param name="method">The function to call for each element in the array.</param><param name="instance">The context for calling <paramref name="method" />.</param></member><member name="M:J#Array.indexOf"><summary>Searches for the specified element of an <see cref="T:J#Array" /> object and returns its index. This function is static and can be invoked without creating an instance of the object.</summary><returns>A number that represents the index location of <paramref name="item" /> in the array, if found; otherwise, -1.In Mozilla Firefox, calling <see cref="M:J#Array.indexOf" /> with <paramref name="item" /> not set or set to undefined returns the index of the first item with a value of undefined. All other browsers return -1 in these circumstances.</returns><param name="array">The array to search.</param><param name="item">The object to find in the array.</param><param name="start">(Optional) The index number that specifies the starting element for searching the array.</param></member><member name="M:J#Array.insert"><summary>Inserts a single item into a specified index of an <see cref="T:J#Array" /> object. This function is static and can be invoked without creating an instance of the object.</summary><param name="array">The array to insert the item into.</param><param name="index">The index location where <paramref name="item" /> should be inserted.</param><param name="item">The object to add to the array.</param></member><member name="M:J#Array.parse"><summary>Creates an array from a string representation. This function is static and can be invoked without creating an instance of the object.</summary><returns>The array that results from splitting the input string, or an empty array if <paramref name="value" /> is not supplied.</returns><param name="value">The string to convert to an array.</param><exception cref="M:J#Error.argument">(Debug) <paramref name="value" /> is formatted incorrectly.</exception></member><member name="M:J#Array.remove"><summary>Removes the first occurrence of the specified item from an <see cref="T:J#Array" /> object. This function is static and can be invoked without creating an instance of the object.</summary><returns>true if the specified item exists as element in the array and was removed; otherwise, false.</returns><param name="array">The array to remove <paramref name="item" /> from.</param><param name="item">The object to remove from the array at the first occurrence.</param></member><member name="M:J#Array.removeAt"><summary>Removes an element from of an <see cref="T:J#Array" /> object at a specified index location. This function is static and can be invoked without creating an instance of the object.</summary><param name="array">The array to remove the element from.</param><param name="index">The index of the element to remove from the array.</param></member><member name="T:J#Boolean"><summary>Provides extensions to the base ECMAScript (JavaScript) Boolean object.</summary><exception cref="M:J#Error.argumentOutOfRange">(Debug) <paramref name="value" /> does not contain a string representation of true or false.</exception></member><member name="M:J#Boolean.parse"><summary>Converts a string representation of a logical value to its Boolean object equivalent. This function is static and can be invoked without creating an instance of the object.</summary><returns>A Boolean value (true or false) that corresponds to the <paramref name="value" /> argument.</returns><param name="value">A string representation of either true or false.</param></member><member name="T:J#Date"><summary>Provides extensions to the base ECMAScript (JavaScript) Date object.</summary></member><member name="M:J#Date.format"><summary>Formats a date by using the invariant (culture-independent) culture.</summary><returns>A string that contains the formatted date value.</returns><param name="format">A format string.</param><exception cref="Sys.ArgumentException"><paramref name="format" /> is invalid.</exception></member><member name="M:J#Date.localeFormat"><summary>Formats a date by using the current culture. This function is static and can be invoked without creating an instance of the object.</summary><returns>A string that contains the formatted date value.</returns><param name="format">A format string.</param><exception cref="Sys.ArgumentException">(Debug) <paramref name="formats" /> contains an invalid format.</exception></member><member name="M:J#Date.parseLocale"><summary>Creates a date from a locale-specific string by using the current culture. This function is static and can be invoked without creating an instance of the object.</summary><returns>If <paramref name="value" /> is a valid string representation of a date, an object of type <see cref="T:J#Date" />; otherwise, null.Use the <see cref="M:J#Date.parseLocale" /> function to create an object of type <see cref="T:J#Date" /> from a string. If you provide no custom formats, this function uses the <see cref="F:J#Sys.CultureInfo.CurrentCulture" /> property to determine the culture value.To create a date from a locale-specific string that uses the current culture, set the <see cref="P:System.Web.UI.ScriptManager.EnableScriptGlobalization" /> property of the <see cref="T:System.Web.UI.ScriptManager" /> control to true. You must also modify settings in the Web.config file so that the culture attribute of the &lt;globalization&gt; section is set to auto.</returns><param name="value">A locale-specific string that represents a date.</param><param name="formats">(Optional) An array of custom formats.</param><exception cref="Sys.ArgumentException">(Debug) <paramref name="formats" /> contains an invalid format.</exception></member><member name="M:J#Date.parseInvariant"><summary>Creates a date from a string by using the invariant culture. This function is static and can be invoked without creating an instance of the object.</summary><returns>If <paramref name="value" /> is a valid string representation of a date in the invariant format, an object of type <see cref="T:J#Date" />; otherwise, null.</returns><param name="value">A string that represents a date.</param><param name="formats">(Optional) An array of custom formats.</param><exception cref="Sys.ArgumentException"><paramref name="format" /> was invalid.</exception></member><member name="T:J#Error"><summary>Provides static functions that extend the built-in ECMAScript (JavaScript) Error type by including exception details and support for application-compilation modes (debug or release).</summary></member><member name="F:J#Error.name"><summary /></member><member name="F:J#Error.message"><summary /></member><member name="M:J#Error.popStackFrame"><summary>Updates the fileName and lineNumber properties of an Error instance to indicate where the error was thrown instead of where the error was created. Use this function if you are creating custom error types.</summary></member><member name="M:J#Error.create"><summary>Creates an Error object that can contain additional error information.</summary><returns>An <see cref="T:J#Sys.Net.WebServiceError" /> object.</returns><param name="message">(Optional)An error message string.</param><param name="errorInfo">(Optional) An instance of a JavaScript object that contains extended information about the error. The object must have a <see cref="F:J#Error.name" /> field that contains a string that identifies the error. The object can also contain fields to fully describe the error.</param></member><member name="M:J#Error.argument"><summary>Creates an Error object that represents the <see cref="Sys.ArgumentException" /> exception.</summary><returns>An <see cref="T:J#Sys.Net.WebServiceError" /> object that has <see cref="F:J#Error.name" /> and paramName fields added to the <see cref="T:J#Sys.Net.WebServiceError" /> type definition.</returns><param name="paramName">(Optional) The name of the parameter as a string that caused the exception. The value can be null. </param><param name="message">(Optional) An error message string. If <paramref name="message" /> is null, a default message is used.</param></member><member name="M:J#Error.argumentNull"><summary>Creates an Error object that represents the <see cref="Sys.ArgumentNullException" /> exception.</summary><returns>An <see cref="T:J#Sys.Net.WebServiceError" /> object that has <see cref="F:J#Error.name" /> and paramName fields added to the <see cref="T:J#Sys.Net.WebServiceError" /> type definition.</returns><param name="paramName">(Optional) The name of the parameter as a string that caused the exception. If <paramref name="paramName" /> is null, a default message is used. </param><param name="message">(Optional) An error message string. The value can be null.</param></member><member name="M:J#Error.argumentOutOfRange"><summary>Creates an Error object that represents the Sys.ArgumentOutOfRangeException exception.</summary><returns>An <see cref="T:J#Sys.Net.WebServiceError" /> object that has <see cref="F:J#Error.name" />, paramName, and actualValue fields added to the <see cref="T:J#Sys.Net.WebServiceError" /> type definition.</returns><param name="paramName">(Optional) The name of the parameter that caused the exception. The value can be null.</param><param name="actualValue">(Optional) The value of the parameter that caused the exception. The value can be null.</param><param name="message">(Optional) An error message string. The value can be null. If <paramref name="message" /> is null, a default message is used. </param></member><member name="M:J#Error.argumentType"><summary>Creates an Error object that represents the <see cref="Sys.argumentTypeException" /> exception.</summary><returns>An Error object that has <see cref="F:J#Error.name" />, paramName, actualType, and expectedType fields added to the <see cref="T:J#Sys.Net.WebServiceError" /> type definition.</returns><param name="paramName">(Optional) The name of the parameter that caused the exception. The value can be null.</param><param name="actualType">(Optional) The actual value of the parameter. The value can be null.</param><param name="expectedType">(Optional) The expected fully qualified type of the parameter value.</param><param name="message">(Optional) An error message string. The value can be null.</param></member><member name="M:J#Error.argumentUndefined"><summary>Creates an Error object that represents the <see cref="Sys.argumentTypeUndefined" /> exception.</summary><returns>An <see cref="T:J#Sys.Net.WebServiceError" /> object that has <see cref="F:J#Error.name" /> and paramName fields added to the <see cref="T:J#Sys.Net.WebServiceError" /> type definition.</returns><param name="paramName">(Optional) The name of the parameter as a string that caused the exception. The value can be null. </param><param name="message">(Optional) An error message string. The value can be null. If <paramref name="message" /> is null, a default message is used.</param></member><member name="M:J#Error.format"><summary>Creates an Error object that represents the [Sys.FormatExeception] exception.</summary><returns>An object that represents a <see cref="T:System.FormatException" />.</returns><param name="message">(Optional) An error message string. The value can be null. If <paramref name="message" /> is null, a default message is used.</param></member><member name="M:J#Error.invalidOperation"><summary>Creates an Error object that represents the <see cref="Sys.invalidOperationException" /> exception.</summary><returns>An <see cref="T:J#Sys.Net.WebServiceError" /> object that has a <see cref="F:J#Error.name" /> field added to the <see cref="T:J#Sys.Net.WebServiceError" /> type definition.</returns><param name="message">(Optional) An error message string. The value can be null. If <paramref name="message" /> is null, a default message is used.</param></member><member name="M:J#Error.notImplemented"><summary>Creates an Error object that represents the <see cref="Sys.notImplementedException" /> exception.</summary><returns>An <see cref="T:J#Sys.Net.WebServiceError" /> object.</returns><param name="message">(Optional) An error message string. The value can be null. If <paramref name="message" /> is null, a default message is used.</param></member><member name="M:J#Error.parameterCount"><summary>Creates an Error object that represents the <see cref="Sys.parameterCountException" /> exception.</summary><returns>An <see cref="T:J#Sys.Net.WebServiceError" /> object.</returns><param name="message">(Optional) An error message string. The value can be null. If <paramref name="message" /> is null, a default message is used.</param></member><member name="T:J#Function"><summary /></member><member name="M:J#Function.callBaseMethod"><summary /><param name="instance">TBD</param><param name="name">TBD</param><param name="baseArguments">TBD</param></member><member name="M:J#Function.getBaseMethod"><summary /><param name="instance">TBD</param><param name="name">TBD</param></member><member name="M:J#Function.getBaseType"><summary /></member><member name="M:J#Function.getInterfaces"><summary /></member><member name="M:J#Function.getName"><summary /></member><member name="M:J#Function.implementsInterface"><summary /><param name="interfaceType">TBD</param></member><member name="M:J#Function.inheritsFrom"><summary /><param name="parentType">TBD</param></member><member name="M:J#Function.initializeBase"><summary /><param name="instance">TBD</param><param name="baseArguments">TBD</param></member><member name="M:J#Function.isImplementedBy"><summary /><param name="instance">TBD</param></member><member name="M:J#Function.isInstanceOfType"><summary /><param name="instance">TBD</param></member><member name="M:J#Function.registerClass"><summary /><param name="typeName">TBD</param><param name="baseType">TBD</param><param name="interfaceTypes">TBD</param></member><member name="M:J#Function.registerInterface"><summary /><param name="typeName">TBD</param></member><member name="M:J#Function.resolveInheritance"><summary /></member><member name="M:J#Function.registerEnum"><summary /><param name="name">TBD</param><param name="flags">TBD</param></member><member name="M:J#Function.createCallback"><summary>Creates a callback method that retains a parameter given the function to callback and the parameter to pass to it.</summary><returns>The callback function.</returns><param name="method">The function for which the callback method will be created.</param><param name="context">The parameter to pass to the function. This parameter can be null, but it cannot be omitted.</param></member><member name="M:J#Function.createDelegate"><summary /><param name="instance">TBD</param><param name="method">TBD</param></member><member name="M:J#Function.emptyMethod"><summary>Does nothing.</summary></member><member name="M:J#Function.emptyFunction"><summary>Does nothing.</summary></member><member name="M:J#Function.getRootNamespaces"><summary /></member><member name="M:J#Function.isClass"><summary /><param name="type">TBD</param></member><member name="M:J#Function.isInterface"><summary /><param name="type">TBD</param></member><member name="M:J#Function.isNamespace"><summary /><param name="object">TBD</param></member><member name="M:J#Function.parse"><summary /><param name="typeName">TBD</param><param name="ns">TBD</param></member><member name="M:J#Function.registerNamespace"><summary /><param name="namespacePath">TBD</param></member><member name="M:J#Function.isEnum"><summary /><param name="type">TBD</param></member><member name="M:J#Function.isFlags"><summary /><param name="type">TBD</param></member><member name="T:J#Number"><summary>Extends the base ECMAScript (JavaScript) Number functionality with static and instance methods.</summary><exception cref="Sys.ArgumentException"><paramref name="format" /> is invalid.</exception></member><member name="M:J#Number.format"><summary>Formats a number by using the invariant culture.</summary><returns>A string that contains the formatted number value.</returns><param name="format">A format string.</param></member><member name="M:J#Number.localeFormat"><summary>Formats a number by using the current culture.</summary><returns>A string that contains the formatted number value.</returns><param name="format">A format string.</param><exception cref="Sys.ArgumentException"><paramref name="format" /> is invalid.</exception></member><member name="M:J#Number.parseLocale"><summary>Creates a numeric value from a locale-specific string.</summary><returns>An object of type <see cref="T:J#Number" />.</returns><param name="value">A string that represents a number.</param><exception cref="Sys.ArgumentException">(Debug) <paramref name="value" /> does not represent a number.</exception></member><member name="M:J#Number.parseInvariant"><summary>Returns a numeric value from a string representation of a number. This function is static and can be called without creating an instance of the object.</summary><returns>A floating-point representation of <paramref name="value," /> if <paramref name="value" /> represents a number; otherwise, NaN (not a number). </returns><param name="value">A string that represents a whole or floating-point number.</param></member><member name="T:J#Object"><summary>Provides extended reflection-like functionality to the base ECMAScript (JavaScript) Object object.</summary><exception cref="M:J#Error.argumentUndefined">(Debug) <paramref name="instance" /> is undefined.</exception><exception cref="M:J#Error.argumentNull">(Debug) <paramref name="instance" /> is null.</exception></member><member name="M:J#Object.getType"><summary>Returns the type of a specified object instance.</summary><returns>A type instance that represents the run-time object of <paramref name="instance" />.</returns><param name="instance">The object to return the type for.</param></member><member name="M:J#Object.getTypeName"><summary>Returns a string that identifies the run-time type name of an object.</summary><returns>A string that identifies the run-time type name of <paramref name="instance" />.</returns><param name="instance">The object to return the run-time type name for.</param></member><member name="T:J#RegExp"><summary /></member><member name="T:J#String"><summary>Provides extensions to the base ECMAScript (JavaScript) String object by including static and instance methods.</summary></member><member name="M:J#String.endsWith"><summary>Determines whether the end of a <see cref="T:J#String" /> object matches a specified string.</summary><returns>true if the end of the <see cref="T:J#String" /> object matches <paramref name="suffix" />; otherwise, false.</returns><param name="suffix">The string to match with the end of the <see cref="T:J#String" /> object.</param></member><member name="M:J#String.startsWith"><summary>Determines whether the start of a String object matches a specified string.</summary><returns>true if the start of the <see cref="T:J#String" /> object matches <paramref name="prefix" />; otherwise, false.</returns><param name="prefix">The string to match with the start of the <see cref="T:J#String" /> object.</param></member><member name="M:J#String.trim"><summary>Removes leading and trailing white-space characters from a <see cref="T:J#String" /> object.</summary><returns>A copy of the string with all white-space characters removed from the start and end of the string.</returns></member><member name="M:J#String.trimEnd"><summary>Removes trailing white-space characters from a <see cref="T:J#String" /> object.</summary><returns>A copy of the string with all white-space characters removed from the end of the string.</returns></member><member name="M:J#String.trimStart"><summary>Removes leading white-space characters from a <see cref="T:J#String" /> object.</summary><returns>A copy of the string with all white-space characters removed from the start of the string.</returns></member><member name="M:J#String.format"><summary>Replaces each format item in a String object with the text equivalent of a corresponding object's value. </summary><returns>A copy of the string with the formatting applied.</returns><param name="format">A format string.</param><param name="args">An array of objects to format.</param><exception cref="Sys.ArgumentException">(Debug) <paramref name="format" /> contains a mismatched opening or closing brace.</exception></member><member name="M:J#String.localeFormat"><summary>Replaces the format items in a <see cref="T:J#String" /> object with the text equivalent of a corresponding object's value. The current culture is used to format dates and numbers.</summary><returns>A copy of the string with the formatting applied.</returns><param name="format">A format string.</param><param name="args">An array of objects to format.</param><exception cref="Sys.ArgumentException">(Debug) The <paramref name="format" /> parameter is invalid.</exception></member><member name="T:J#Sys.IDisposable"><summary>Provides a common interface for the application-defined tasks of closing, releasing, or resetting resources held by instances of a registered Microsoft AJAX Library class.</summary></member><member name="M:J#Sys.IDisposable.dispose"><summary>Releases resources held by an object that implements the <see cref="T:J#Sys.IDisposable" /> interface.</summary></member><member name="T:J#Sys.StringBuilder"><summary>Provides a mechanism to concatenate strings.</summary></member><member name="M:J#Sys.StringBuilder.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.StringBuilder" /> class.</summary><param name="initialText">(Optional) The string that is used to initialize the value of the instance. If the value is null, the new <see cref="T:J#Sys.StringBuilder" /> instance will contain an empty string ("").</param></member><member name="M:J#Sys.StringBuilder.append"><summary>Appends a copy of a specified string to the end of the <see cref="T:J#Sys.StringBuilder" /> instance.</summary><param name="text">The string to append to the end of the <see cref="T:J#Sys.StringBuilder" /> instance.</param></member><member name="M:J#Sys.StringBuilder.appendLine"><summary>Appends a string with a line terminator to the end of the <see cref="T:J#Sys.StringBuilder" /> instance.</summary><param name="text">(Optional) The string to append with a line terminator to the end of the <see cref="T:J#Sys.StringBuilder" /> instance.</param></member><member name="M:J#Sys.StringBuilder.clear"><summary>Clears the contents of the <see cref="T:J#Sys.StringBuilder" /> instance.</summary></member><member name="M:J#Sys.StringBuilder.isEmpty"><summary>Determines whether the <see cref="T:J#Sys.StringBuilder" /> object has content.</summary><returns>true if the <see cref="T:J#Sys.StringBuilder" /> instance contains no elements; otherwise, false.</returns></member><member name="T:J#Sys.Debug"><summary>Provides debugging and tracing functionality for client ECMAScript (JavaScript) code. This class is static and can be invoked directly without creating an instance of the class.</summary></member><member name="M:J#Sys.Debug.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.Debug" /> class.</summary></member><member name="M:J#Sys.Debug.assert"><summary>Checks for a condition, and if the condition is false, displays a message and prompts the user to break into the debugger.</summary><param name="condition">true to continue to execute code; false to display <paramref name="message" /> and break into the debugger.</param><param name="message">(Optional) The message to display. The default is an empty string ("").</param><param name="displayCaller">(Optional) true to indicate that the name of the function that is calling <see cref="M:J#Sys.Debug.assert" /> should be displayed in the message. The default is false.</param></member><member name="M:J#Sys.Debug.clearTrace"><summary>Clears all trace messages from the TraceConsole&lt;textarea&gt; element.</summary></member><member name="M:J#Sys.Debug.fail"><summary>Displays a message in the debugger's output window and breaks into the debugger.</summary><param name="message">The message to display.</param></member><member name="M:J#Sys.Debug.trace"><summary>Appends a text line to the debugger console and to the TraceConsole&lt;textarea&gt; element, if available.</summary><param name="text">The text to display.</param></member><member name="M:J#Sys.Debug.traceDump"><summary>Dumps an object to the debugger console and to the TraceConsole&lt;textarea&gt; element, if available.</summary><param name="object">The object to dump.</param><param name="name">(Optional) The name of the object.</param></member><member name="T:J#Sys.EventHandlerList"><summary>Creates a dictionary of client events for a component, with event names as keys and the associated handlers as values.</summary></member><member name="M:J#Sys.EventHandlerList.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.EventHandlerList" /> class.</summary></member><member name="M:J#Sys.EventHandlerList.addHandler"><summary>Attaches a handler to an event in an <see cref="T:J#Sys.EventHandlerList" /> instance and adds the event to the list if it is not already present.</summary><param name="id">A string that specifies the event.</param><param name="handler">The name of the method to handle the event.</param></member><member name="M:J#Sys.EventHandlerList.removeHandler"><summary>Removes an event handler from an event in an <see cref="T:J#Sys.EventHandlerList" /> instance.</summary><param name="id">The ID for the event.</param><param name="handler">The handler to remove from the event.</param></member><member name="M:J#Sys.EventHandlerList.getHandler"><summary>Returns a single method that can be invoked to call all handlers sequentially for the specified event.</summary><returns>A single method that can be invoked to call all handlers sequentially for the specified event.</returns><param name="id">The ID for the specified event.</param></member><member name="T:J#Sys.EventArgs"><summary>Provides a base class for classes that are used by event sources to pass event argument information. </summary></member><member name="M:J#Sys.EventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.EventArgs" /> class.</summary></member><member name="F:J#Sys.EventArgs.Empty"><summary>Returns an empty <see cref="T:J#Sys.EventArgs" /> collection. This member is static and can be invoked without creating an instance of the class.</summary><returns>An empty <see cref="T:J#Sys.EventArgs" /> collection.</returns></member><member name="T:J#Sys.CancelEventArgs"><summary>Provides the base class for events that can be canceled.</summary></member><member name="M:J#Sys.CancelEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.CancelEventArgs" /> class.</summary></member><member name="P:J#Sys.CancelEventArgs.cancel"><summary>Gets or sets a value that specifies whether the event source should cancel the operation that caused the event. </summary><returns>true to request that the event be canceled; otherwise, false. The default is false.</returns></member><member name="T:J#Sys.INotifyPropertyChange"><summary>Defines the <see cref="E:J#Sys.INotifyPropertyChange.propertyChanged" /> event.</summary></member><member name="E:J#Sys.INotifyPropertyChange.propertyChanged"><summary>Occurs when a component property is set to a new value.</summary></member><member name="T:J#Sys.PropertyChangedEventArgs"><summary>Used by the <see cref="E:J#Sys.Component.propertyChanged" /> event to indicate which property has changed.</summary></member><member name="M:J#Sys.PropertyChangedEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.PropertyChangedEventArgs" /> class.</summary><param name="propertyName">The name of the property that changed.</param></member><member name="P:J#Sys.PropertyChangedEventArgs.propertyName"><summary>Gets the name of the property that changed.</summary><returns>A string that contains the name of the property that changed.</returns></member><member name="T:J#Sys.INotifyDisposing"><summary>Indicates that the type that implements the interface provides <see cref="E:J#Sys.INotifyDisposing.disposing" /> notifications.</summary></member><member name="E:J#Sys.INotifyDisposing.disposing"><summary>Occurs when an object's resources are released.</summary></member><member name="T:J#Sys.Component"><summary>Provides the base class for the <see cref="T:J#Sys.UI.Control" /> and <see cref="T:J#Sys.UI.Behavior" /> classes, and for any other object whose lifetime should be managed by the ASP.NET AJAX client library.</summary></member><member name="M:J#Sys.Component.#ctor"><summary>When overridden in a derived class, initializes a new instance of that class and registers it with the application as a disposable object.</summary></member><member name="P:J#Sys.Component.events"><summary>Gets an <see cref="T:J#Sys.EventHandlerList" /> object that contains references to all the event handlers that are mapped to the current component's events.</summary><returns>An <see cref="T:J#Sys.EventHandlerList" /> object that contains references to all the events and handlers for this component.</returns></member><member name="P:J#Sys.Component.id"><summary>Gets or sets the ID of the current <see cref="T:J#Sys.Component" /> object.</summary><returns>The string that is the ID of the component.</returns><param name="value">A string that contains the ID of the component.</param><exception cref="Sys.ArgumentException">(Debug) <paramref name="value" /> is null or an empty string ("").- or -<paramref name="value" /> starts or ends with a space character.</exception></member><member name="P:J#Sys.Component.isInitialized"><summary>Gets a value indicating whether the current <see cref="T:J#Sys.Component" /> object is initialized.</summary><returns>true if the current <see cref="T:J#Sys.Component" /> is initialized; otherwise, false.</returns></member><member name="P:J#Sys.Component.isUpdating"><summary>Gets a value indicating whether the current <see cref="T:J#Sys.Component" /> object is updating.</summary><returns>true if the current <see cref="T:J#Sys.Component" /> object is updating; otherwise, false.</returns></member><member name="E:J#Sys.Component.disposing"><summary>Raised when the <see cref="M:J#Sys.Component.dispose" /> method is called for a component.</summary><param name="handler">The event handler function to add or remove.</param></member><member name="E:J#Sys.Component.propertyChanged"><summary>Raised when the <see cref="M:J#Sys.Component.raisePropertyChanged" /> method of the current <see cref="T:J#Sys.Component" /> object is called.</summary><param name="handler">The event handler function to add or remove.</param></member><member name="M:J#Sys.Component.beginUpdate"><summary>Called by the <see cref="M:J#Sys.Component.create" /> method to indicate that the process of setting properties of a component instance has begun.</summary></member><member name="M:J#Sys.Component.dispose"><summary>Removes the component from the application.</summary></member><member name="M:J#Sys.Component.endUpdate"><summary>Called by the <see cref="M:J#Sys.Component.create" /> method to indicate that the process of setting properties of a component instance has finished.</summary></member><member name="M:J#Sys.Component.initialize"><summary>Initializes the current <see cref="T:J#Sys.Component" /> object.</summary></member><member name="M:J#Sys.Component.raisePropertyChanged"><summary>Raises the <see cref="E:J#Sys.Component.propertyChanged" /> event for the specified property.</summary><param name="propertyName">The name of the property that changed.</param></member><member name="M:J#Sys.Component.updated"><summary>Called by the <see cref="M:J#Sys.Component.endUpdate" /> method as a placeholder for additional logic in derived classes.</summary></member><member name="M:J#Sys.Component.create"><summary>Creates and initializes a component of the specified type. This method is static and can be called without creating an instance of the class.</summary><returns>A new instance of a component that uses the specified parameters.</returns><param name="type">The type of the component to create.</param><param name="properties">(Optional) A JSON object that describes the properties and their values.</param><param name="events">(Optional) A JSON object that describes the events and their handlers.</param><param name="references">(Optional) A JSON object that describes the properties that are references to other components.</param><param name="element">(Optional) The DOM element that the component should be attached to.</param></member><member name="T:J#Sys.IContainer"><summary>Provides a common interface for all components that can contain other components.</summary></member><member name="M:J#Sys.IContainer.addComponent"><summary>Adds a <see cref="T:J#Sys.Component" /> object to the current container.</summary><param name="component">The <see cref="T:J#Sys.Component" /> object to add.</param></member><member name="M:J#Sys.IContainer.removeComponent"><summary>Removes a <see cref="T:J#Sys.Component" /> object from the current container.</summary><param name="component">The <see cref="T:J#Sys.Component" /> object to remove.</param></member><member name="M:J#Sys.IContainer.findComponent"><summary>Returns the specified <see cref="T:J#Sys.Component" /> instance.</summary><returns>The <see cref="T:J#Sys.Component" /> instance with the specified ID<paramref name="." /></returns><param name="id">The ID of the <see cref="T:J#Sys.Component" /> object to search for.</param></member><member name="M:J#Sys.IContainer.getComponents"><summary>Returns an array of all objects in the current container that inherit from <see cref="T:J#Sys.Component" />.</summary><returns>An array of all objects in the current container that inherit from <see cref="T:J#Sys.Component" />.</returns></member><member name="T:J#Sys.ApplicationLoadEventArgs"><summary>Used by the <see cref="T:J#Sys.Application" /> class to hold event arguments for the <see cref="E:J#Sys.Application.load" /> event.</summary></member><member name="M:J#Sys.ApplicationLoadEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.ApplicationLoadEventArgs" /> class.</summary><param name="components">The list of components that were created since the last time the <see cref="E:J#Sys.Application.load" /> event was raised.</param><param name="isPartialLoad">true to indicate that the event is a partial-page update.</param></member><member name="P:J#Sys.ApplicationLoadEventArgs.components"><summary>Gets an array of all the components that were created since the last time the <see cref="E:J#Sys.Application.load" /> event was raised.</summary><returns>An array of all the components that were created since the last time the <see cref="E:J#Sys.Application.load" /> event was raised.</returns></member><member name="P:J#Sys.ApplicationLoadEventArgs.isPartialLoad"><summary>Returns a value that indicates whether the page is engaged in a partial-page update.</summary><returns>true if the page is engaged in a partial-page update; otherwise, false.</returns></member><member name="T:J#Sys.Application"><summary>Provides a run-time object that exposes client events and manages client components that are registered with the application. The members of this object are available globally after the client application has been initialized. The members can be invoked without creating an instance of the class.</summary></member><member name="M:J#Sys.Application.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.Application" /> class.</summary></member><member name="P:J#Sys.Application.isCreatingComponents"><summary>Gets a value that indicates whether the application is in the process of creating components. This member is static and can be invoked without creating an instance of the class.</summary><returns>true if the application is creating components; otherwise, false.</returns></member><member name="E:J#Sys.Application.load"><summary>Raised after all scripts have been loaded and the objects in the application have been created and initialized.</summary></member><member name="E:J#Sys.Application.init"><summary>Raised after all scripts have been loaded but before objects are created.</summary></member><member name="E:J#Sys.Application.unload"><summary>Raised before all objects in the client application are disposed, typically when the DOM window.unload event is raised.</summary></member><member name="M:J#Sys.Application.addComponent"><summary>Registers a component with the application and initializes it if the component is not already initialized. This member is static and can be invoked without creating an instance of the class.</summary><param name="component">An instance of a type derived from the <see cref="T:J#Sys.Component" /> class to register with the client application.</param><exception cref="M:J#Error.invalidOperation">(Debug) <paramref name="component" /> does not contain a valid ID.</exception></member><member name="M:J#Sys.Application.beginCreateComponents"><summary>Instructs the application to start creating components.</summary></member><member name="M:J#Sys.Application.dispose"><summary>Releases resources and dependencies held by the client application. This member is static and can be invoked without creating an instance of the class.</summary></member><member name="M:J#Sys.Application.endCreateComponents"><summary>Instructs the application to finalize component creation.</summary></member><member name="M:J#Sys.Application.findComponent"><summary>Returns the specified <see cref="T:J#Sys.Component" /> object. This member is static and can be invoked without creating an instance of the class.</summary><returns>A <see cref="T:J#Sys.Component" /> object that contains the component requested by ID, if found; otherwise, null.</returns><param name="id">A string that contains the ID of the component to find.</param><param name="parent">(Optional) The component or element that contains the component to find.</param></member><member name="M:J#Sys.Application.getComponents"><summary>Returns an array of all components that have been registered with the application by using the <see cref="M:J#Sys.Application.addComponent" /> method. This member is static and can be invoked without creating an instance of the class.</summary><returns>An array that contains all components that have been registered with the application by using the <see cref="M:J#Sys.Application.addComponent" /> method.</returns></member><member name="M:J#Sys.Application.initialize"><summary>Initializes the application and raises the <see cref="E:J#Sys.Application.load" /> event.</summary></member><member name="M:J#Sys.Application.notifyScriptLoaded"><summary>Called by a referenced script to indicate that it has been loaded.</summary><returns>None.</returns></member><member name="M:J#Sys.Application.registerDisposableObject"><summary>Registers with the application an object that will require disposing.</summary><param name="object">The object that will require disposing.</param></member><member name="M:J#Sys.Application.raiseLoad"><summary>Raises the load event. This member is static and can be invoked without creating an instance of the class.</summary></member><member name="M:J#Sys.Application.removeComponent"><summary>Removes a component from the application.</summary><param name="component">The component object to remove.</param></member><member name="M:J#Sys.Application.unregisterDisposableObject"><summary>Registers with the application an object that will require disposing. This member is static and can be invoked without creating an instance of the class.</summary><param name="object">The object to register.</param></member><member name="P:J#Sys.Application.events"><summary>Gets an eventHandlerList object that contains references to all the event handlers that are mapped to the application.</summary><returns /></member><member name="P:J#Sys.Application.id"><summary>Gets or sets the ID of the current application object.</summary><returns>A string that contains the ID of the application.</returns></member><member name="P:J#Sys.Application.isInitialized"><summary>Gets a value indicating whether the application is initialized.</summary><returns>true if the application is initialized; otherwise, false.</returns></member><member name="P:J#Sys.Application.isUpdating"><summary>Gets a value indicating whether the application is updating.</summary><returns>true if the application is updating; otherwise, false.</returns></member><member name="E:J#Sys.Application.disposing"><summary>Raised when the <see cref="M:J#Sys.Application.dispose" /> method is called for an application.</summary></member><member name="E:J#Sys.Application.propertyChanged"><summary>Raised when the <see cref="M:J#Sys.Application.raisePropertyChanged" /> method is called.</summary></member><member name="M:J#Sys.Application.beginUpdate"><summary>Called by the <see cref="M:J#Sys.Application.beginCreateComponents" /> method to indicate that the process of setting component properties of the application has begun.</summary></member><member name="M:J#Sys.Application.endUpdate"><summary>Called by the <see cref="M:J#Sys.Application.endCreateComponents" /> method to indicate that the process of updating the application has completed.</summary></member><member name="M:J#Sys.Application.raisePropertyChanged"><summary>Raises the PropertyChanged event.</summary><param name="propertyName">The name of the property.</param></member><member name="M:J#Sys.Application.updated"><summary>Called by the endUpdate method as a placeholder for additional logic.</summary></member><member name="T:J#Sys.CultureInfo"><summary>Represents a culture definition that can be applied to objects that accept a culture-related setting.</summary></member><member name="M:J#Sys.CultureInfo.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.CultureInfo" /> class.</summary><param name="name">The culture value (locale) that represents a language and region.</param><param name="numberFormat">A culture-sensitive numeric formatting string.</param><param name="dateTimeFormat">A culture-sensitive date formatting string.</param></member><member name="F:J#Sys.CultureInfo.InvariantCulture"><summary>Gets the globalization values of the invariant culture as sent by the server. This member is static and can be invoked without creating an instance of the class.</summary><returns>A <see cref="T:J#Sys.CultureInfo" /> object.</returns></member><member name="F:J#Sys.CultureInfo.CurrentCulture"><summary>Gets the globalization values of the current culture as sent by the server. This member is static and can be invoked without creating an instance of the class.</summary><returns>A <see cref="T:J#Sys.CultureInfo" /> object.</returns></member><member name="T:J#Sys.Net.WebRequestExecutor"><summary>Provides the abstract base class from which network executors derive.</summary></member><member name="M:J#Sys.Net.WebRequestExecutor.#ctor"><summary>Initializes a <see cref="T:J#Sys.Net.WebRequestExecutor" /> instance when implemented in a derived class.</summary></member><member name="P:J#Sys.Net.WebRequestExecutor.webRequest"><summary>Gets the <see cref="T:J#Sys.Net.WebRequest" /> object associated with the executor.</summary><returns>The <see cref="T:J#Sys.Net.WebRequest" /> object associated with the current executor instance.To get or set property values for client API properties, you must call property accessor methods that are named with the get_ and set_ prefixes. For example, to get or set a value for a property such as <see cref="P:J#Sys.CancelEventArgs.cancel" />, you call the get_cancel or set_cancel methods.</returns></member><member name="P:J#Sys.Net.WebRequestExecutor.started"><summary>Returns a value indicating whether the executor has started processing the request.</summary><returns>true if the executor has started processing the request; otherwise, false.</returns></member><member name="P:J#Sys.Net.WebRequestExecutor.responseAvailable"><summary>Gets a value indicating whether the request completed successfully.</summary><returns>true if the request completed successfully; otherwise, false.</returns></member><member name="P:J#Sys.Net.WebRequestExecutor.timedOut"><summary>Gets a value indicating whether the request timed out.</summary><returns>true if the request timed out; otherwise, false.</returns></member><member name="P:J#Sys.Net.WebRequestExecutor.aborted"><summary>Gets a value indicating whether the request associated with the executor was aborted.</summary><returns>true if the request associated with the executor was aborted; otherwise, false.</returns></member><member name="P:J#Sys.Net.WebRequestExecutor.responseData"><summary>Gets the text representation of the response body.</summary><returns>The text representation of the response body.</returns></member><member name="P:J#Sys.Net.WebRequestExecutor.statusCode"><summary>Gets a success status code. </summary><returns>An integer that represents a status code.</returns></member><member name="P:J#Sys.Net.WebRequestExecutor.statusText"><summary>Gets status information about a request that completed successfully.</summary></member><member name="P:J#Sys.Net.WebRequestExecutor.xml"><summary>Attempts to get the response to the current request as an XMLDOM object.</summary></member><member name="P:J#Sys.Net.WebRequestExecutor.object"><summary>Gets the JSON-evaluated object of the response.</summary><returns>The JSON-evaluated response object.</returns></member><member name="M:J#Sys.Net.WebRequestExecutor.executeRequest"><summary>Instructs the executor to execute a Web request.</summary></member><member name="M:J#Sys.Net.WebRequestExecutor.abort"><summary>Stops the pending network request issued by the executor. </summary><returns /></member><member name="M:J#Sys.Net.WebRequestExecutor.getResponseHeader"><summary>Gets the value of the specified response header.</summary><returns>The value of the response header. If the requested response header does not exist, this method throws Error.notImplented.</returns><param name="header">The requested response header.</param></member><member name="M:J#Sys.Net.WebRequestExecutor.getAllResponseHeaders"><summary>Gets all the response headers for the current request. </summary></member><member name="T:J#Sys.Net.XMLHttpExecutor"><summary>Makes asynchronous network requests by using the browser's XMLHTTP support.</summary></member><member name="M:J#Sys.Net.XMLHttpExecutor.#ctor"><summary>Initializes an <see cref="T:J#Sys.Net.XMLHttpExecutor" /> instance when implemented in a derived class.</summary></member><member name="P:J#Sys.Net.XMLHttpExecutor.timedOut"><summary>Returns a value indicating whether the request timed out; otherwise, returns false.</summary><returns>true if the request timed out; otherwise, false.</returns></member><member name="P:J#Sys.Net.XMLHttpExecutor.started"><summary>Returns a value that indicates whether the executor has forwarded the request to the browser's XMLHTTP object</summary><returns>true if the executor has forwarded the request to the browser's XMLHTTP object; otherwise, false.</returns></member><member name="P:J#Sys.Net.XMLHttpExecutor.responseAvailable"><summary>Returns a value indicating whether the network request returned without being aborted or timing out.</summary><returns>true if the network request returned without being aborted or timing out; otherwise, false.</returns></member><member name="P:J#Sys.Net.XMLHttpExecutor.aborted"><summary>Returns a value that indicates whether the executor was stopped.</summary><returns>true if the executor was aborted; otherwise, false.</returns></member><member name="M:J#Sys.Net.XMLHttpExecutor.executeRequest"><summary>Executes a Web request as specified in the associated <see cref="T:J#Sys.Net.WebRequest" /> instance.</summary><exception cref="Sys.InvalidOperationException">The<see cref="M:J#Sys.Net.XMLHttpExecutor.executeRequest" /> method was called again after the request started.-or-The executor is not associated with an instance of the <see cref="T:J#Sys.Net.WebRequest" /> class.</exception></member><member name="M:J#Sys.Net.XMLHttpExecutor.getResponseHeader"><summary>Gets the value of a specified response header, based on the header's name.</summary><param name="header">TBD</param><exception cref="Sys.InvalidOperationException">The <see cref="M:J#Sys.Net.XMLHttpExecutor.getResponseHeader" /> property was accessed outside the event handler.-or-The <see cref="M:J#Sys.Net.XMLHttpExecutor.getResponseHeader" /> property was accessed after the completed event occurred. </exception></member><member name="M:J#Sys.Net.XMLHttpExecutor.getAllResponseHeaders"><summary>Returns all the response headers.</summary><exception cref="Sys.InvalidOperationException">The <see cref="M:J#Sys.Net.XMLHttpExecutor.getAllResponseHeaders" /> property was accessed outside the event handler.-or-The <see cref="M:J#Sys.Net.XMLHttpExecutor.getAllResponseHeaders" /> property was accessed after the completed event occurred. </exception></member><member name="P:J#Sys.Net.XMLHttpExecutor.responseData"><summary>Gets the text representation of the response body. </summary><returns>The text representation of the response body, if there is one; otherwise, an empty string ("").</returns><exception cref="Sys.InvalidOperationException">The <see cref="P:J#Sys.Net.XMLHttpExecutor.responseData" /> property was accessed outside the event handler.-or-The <see cref="P:J#Sys.Net.XMLHttpExecutor.responseData" /> property was accessed after the completed event occurred.</exception></member><member name="P:J#Sys.Net.XMLHttpExecutor.statusCode"><summary>Gets the status code of the browser's XMLHTTP object.</summary><returns>The status code of the browser's XMLHTTP object as a string (for example, "200 OK.The request has succeeded."). For more information, see About Native XMLHTTPhttp://go.microsoft.com/fwlink/?LinkId=75121. </returns><exception cref="Sys.InvalidOperationException">The <see cref="P:J#Sys.Net.XMLHttpExecutor.statusCode" /> property was accessed outside the event handler.-or-The <see cref="P:J#Sys.Net.XMLHttpExecutor.statusCode" /> property was accessed after the completed event occurred.</exception></member><member name="P:J#Sys.Net.XMLHttpExecutor.statusText"><summary>Gets the status text from the browser's XMLHTTP object.</summary><returns>The status text from the browser's XMLHTTP object as a string (for example, "200 OK. The request has succeeded."). For more information, see About Native XMLHTTPhttp://go.microsoft.com/fwlink/?LinkId=75121. </returns><exception cref="Sys.InvalidOperationException">The <see cref="P:J#Sys.Net.XMLHttpExecutor.statusText" /> property was accessed outside the event handler.-or-The <see cref="P:J#Sys.Net.XMLHttpExecutor.statusText" /> property was accessed after the completed event occurred</exception></member><member name="P:J#Sys.Net.XMLHttpExecutor.xml"><summary>Returns an XMLDOM object that contains the XML response from the browser's XMLHTTP object.</summary><exception cref="Sys.InvalidOperationException">The <see cref="P:J#Sys.Net.XMLHttpExecutor.xml" /> property was accessed outside the event handler.-or-The <see cref="P:J#Sys.Net.XMLHttpExecutor.xml" /> property was accessed after the completed event occurred. </exception></member><member name="M:J#Sys.Net.XMLHttpExecutor.abort"><summary>Stops the pending network call issued by the executor.</summary><exception cref="Sys.InvalidOperationException">The executor was not started and can therefore not be stopped.</exception></member><member name="T:J#Sys.Net.WebRequestManager"><summary>Manages the flow of the Web requests issued by the <see cref="T:J#Sys.Net.WebRequest" /> object to the associated executor object.</summary></member><member name="M:J#Sys.Net.WebRequestManager.#ctor"><summary>Initializes a <see cref="T:J#Sys.Net.WebRequestManager" /> instance when implemented in a derived class.</summary></member><member name="E:J#Sys.Net.WebRequestManager.invokingRequest"><summary>Occurs when a handler function is called for the request. </summary></member><member name="E:J#Sys.Net.WebRequestManager.completedRequest"><summary>Occurs when a request has been handled.</summary></member><member name="P:J#Sys.Net.WebRequestManager.defaultTimeout"><summary>Gets or sets the time-out for the default network executor.</summary><returns>An integer value that indicates the current time-out for the default executor.</returns><param name="v alue">The time in milliseconds that the default executor should wait before timing out a Web request. This value must be 0 or a positive integer.</param><exception cref="Sys.ArgumentOutOfRangeException">An invalid parameter was passed.</exception></member><member name="P:J#Sys.Net.WebRequestManager.defaultExecutorType"><summary>Gets or sets the default network executor type that is used to make network requests. </summary><returns>The object that represents the default Web request executor.</returns><exception cref="Sys.ArgumentException">An invalid parameter was passed.</exception></member><member name="M:J#Sys.Net.WebRequestManager.executeRequest"><summary>Sends Web requests to the default network executor.</summary><param name="webRequest">An instance of the <see cref="T:J#Sys.Net.WebRequest" /> class.</param></member><member name="T:J#Sys.Net.NetworkRequestEventArgs"><summary>Contains information about a Web request that is ready to be sent to the current <see cref="T:J#Sys.Net.WebRequestExecutor" /> instance.</summary></member><member name="M:J#Sys.Net.NetworkRequestEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.Net.NetworkRequestEventArgs" />. class.</summary><param name="webRequest">The current <see cref="T:J#Sys.Net.WebRequest" /> instance.</param></member><member name="P:J#Sys.Net.NetworkRequestEventArgs.webRequest"><summary>Gets the Web request to be routed to the current <see cref="T:J#Sys.Net.WebRequestExecutor" /> instance.</summary></member><member name="T:J#Sys.Net.WebRequest"><summary>Provides client script functionality to make a Web request.</summary></member><member name="M:J#Sys.Net.WebRequest.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.Net.WebRequest" /> class. </summary></member><member name="E:J#Sys.Net.WebRequest.completed"><summary>Raises the completed event for the associated <see cref="T:J#Sys.Net.WebRequest" /> instance.</summary></member><member name="M:J#Sys.Net.WebRequest.completed"><summary>Raises the completed event for the associated <see cref="T:J#Sys.Net.WebRequest" /> instance.</summary><param name="eventArgs">The value to pass to the Web request completed event handler.</param></member><member name="P:J#Sys.Net.WebRequest.url"><summary>Gets or sets the URL of the <see cref="T:J#Sys.Net.WebRequest" /> instance.</summary><returns>The URL that the Web request is directed to. If the URL has not been previously set, returns an empty string ("").</returns><param name="v alue">A string that represents the URL that the Web request is directed to. </param><exception cref="Sys.ArgumentNullException"><paramref name="value" /> cannot be null.</exception></member><member name="P:J#Sys.Net.WebRequest.headers"><summary>Gets the HTTP headers for the <see cref="T:J#Sys.Net.WebRequest" /> instance.</summary><returns>A dictionary of name/value pairs that contains the HTTP headers that are sent with the Web request. </returns></member><member name="P:J#Sys.Net.WebRequest.httpVerb"><summary>Gets or sets the HTTP verb that was used by the <see cref="T:J#Sys.Net.WebRequest" /> class to issue the Web request. </summary><returns>The current Web request verb. </returns><param name="v alue">A string that contains the HTTP verb for the Web request. <paramref name="value" /> must be an HTTP verb that is recognized by the Web server, such as "GET" or "POST". </param><exception cref="Sys.ArgumentException"><paramref name="value" /> cannot be null or an empty string ("").</exception></member><member name="P:J#Sys.Net.WebRequest.body"><summary>Gets or sets the HTTP body of the <see cref="T:J#Sys.Net.WebRequest" /> instance.</summary><returns>The HTTP body of the Web request. If the body of the HTTP request has not been previously set or has been set to null, null is returned.</returns><param name="v alue">The HTTP body to assign to the Web request. </param></member><member name="P:J#Sys.Net.WebRequest.userContext"><summary>Gets or sets the user context associated with the <see cref="T:J#Sys.Net.WebRequest" /> instance.</summary><returns>The current Web request user context. </returns><param name="V alue">The user context information that is associated with the request. <paramref name="value" /> can be null or any primitive type or JavaScript object. </param></member><member name="P:J#Sys.Net.WebRequest.executor"><summary>Gets or sets the executor of the associated <see cref="T:J#Sys.Net.WebRequest" /> instance.</summary><returns>The current <see cref="T:J#Sys.Net.WebRequestExecutor" /> instance.</returns><param name="v alue">An instance of a class that is derived from <see cref="T:J#Sys.Net.WebRequestExecutor" />. </param><exception cref="Sys.ArgumentNullException"><paramref name="value" /> cannot be null.</exception><exception cref="Sys.InvalidOperationException">The executor was set after it was enabled.</exception><exception cref="Sys.ArgumentException"><paramref name="value" /> is not a valid <see cref="T:J#Sys.Net.WebRequestExecutor" /> type.</exception></member><member name="P:J#Sys.Net.WebRequest.timeout"><summary>Gets or sets the time-out value for the <see cref="T:J#Sys.Net.WebRequest" /> instance.</summary><returns>The current Web request time-out value in milliseconds. </returns><param name="v alue">The time interval in milliseconds. </param></member><member name="M:J#Sys.Net.WebRequest.getResolvedUrl"><summary>Gets the resolved URL of the <see cref="T:J#Sys.Net.WebRequest" /> instance. </summary><returns>The resolved URL that the Web request is directed to.</returns><exception cref="Sys.ArgumentNullException"><paramref name="value" /> is null.</exception></member><member name="M:J#Sys.Net.WebRequest.invoke"><summary>Executes a Web request.</summary><exception cref="Sys.InvalidOperationException"><see cref="M:J#Sys.Net.WebRequest.invoke" /> has been called more than one time.</exception></member><member name="T:J#Sys.Net.WebServiceProxy"><summary>Enables calling a method of a specified Web service asynchronously.</summary></member><member name="M:J#Sys.Net.WebServiceProxy.#ctor"><summary>Initializes a <see cref="T:J#Sys.Net.WebServiceProxy" /> instance when implemented in a derived class.</summary></member><member name="P:J#Sys.Net.WebServiceProxy.timeout"><summary>Gets or sets the timeout in milliseconds for the service.</summary><returns>The timeout in milliseconds for the service.</returns></member><member name="P:J#Sys.Net.WebServiceProxy.defaultUserContext"><summary>Gets or sets the default user context for the service.</summary><returns>Reference to the user context for the service.</returns></member><member name="P:J#Sys.Net.WebServiceProxy.defaultSucceededCallback"><summary>Gets or sets the default succeeded callback function for the service.</summary><returns>Reference to the succeeded callback function for the service.</returns></member><member name="P:J#Sys.Net.WebServiceProxy.defaultFailedCallback"><summary>Gets or sets the default failed callback function for the service.</summary><returns>Reference to the failed callback function for the service.</returns></member><member name="P:J#Sys.Net.WebServiceProxy.path"><summary>Gets or sets the path to the service.</summary><returns>The full path to the service.</returns></member><member name="M:J#Sys.Net.WebServiceProxy.invoke"><summary>Invokes the specified Web service method.</summary><returns>The <see cref="T:J#Sys.Net.WebRequest" /> instance that is used to call the method. This instance can be used to stop the call.</returns><param name="servicePath">The Web service URL. <paramref name="path" /> can be set to a fully qualified URL (http://www.mySite.com/myService.asmx), to an absolute URL without the host name or the fully qualified domain name (FQDN) (/myService.asmx), or to a relative URL (../myService.asmx). The <see cref="T:J#Sys.Net.WebRequest" /> class makes sure that the URL is converted into a form usable by network executors. </param><param name="methodName">The name of the Web service method to invoke.</param><param name="useGet">(Optional) false if the Web request HTTP verb is POST; otherwise, true. The default is false.The call to the Web service will fail if the verb defined by <paramref name="useHttpGet" /> does not match the <see cref="T:System.Web.Script.Services.ScriptMethodAttribute" /> setting of the corresponding Web server method. For example, the following code (in C#) requires that the call be made with a GET verb: [ScriptMethod(UseHttpGet=true)]</param><param name="params">(Optional) A JavaScript dictionary that contains named properties (fields) that correspond to the parameters of the method to call, as in this example:{"param1":196610,"param2":"Hello"}The field names in the dictionary must match the names of Web service methods.If the Web server method does not take any parameters, <paramref name="parameters" /> can be left out or can be null or an empty dictionary ({}). Any values that you pass are then ignored.If the dictionary contains key/value pairs that do not correspond to a parameter of the Web server method, they are ignored.</param><param name="onSuccess">(Optional) The function that is invoked as a callback if the Web service method call returns successfully. <paramref name="succeededCallback" /> can be set to null if you do not need it and if you must specify a value for the remaining parameters. If no callback function is provided, no action is taken when the Web service method finishes successfully.</param><param name="onFailure">(Optional) The function that is invoked as a callback if the Web service method call fails. <paramref name="failedCallback" /> can be set to null if you do not need it and if you must specify a value for the remaining parameters. If no callback function is provided, no action is taken if an error occurs during the Web service method call.</param><param name="userContext">(Optional) Any user-specific information. <paramref name="userContext" /> can be any JavaScript primitive type, array, or object. The contents of <paramref name="userContext" /> are passed to the callback functions (if any). If <paramref name="userContext" /> is not provided, null is passed to the callback function.</param><param name="timeout">(Optional) The time in milliseconds that the network executor must wait before timing out the Web request. <paramref name="timeout" /> can be an integer or null. By defining a time-out interval, you can control the time that the application must wait for the callback to finish.</param></member><member name="T:J#Sys.Net.WebServiceError"><summary>Represents the object type returned to the browser when a Web service issues an error.</summary></member><member name="M:J#Sys.Net.WebServiceError.#ctor"><summary>Initializes a <see cref="T:J#Sys.Net.WebServiceError" /> instance when implemented in a derived class.</summary><param name="timedOut">true if the error has timed out; otherwise, false.</param><param name="message">The error message.</param><param name="stackTrace">The stack trace for the error.</param><param name="exceptionType">The server exception type.</param></member><member name="P:J#Sys.Net.WebServiceError.timedOut"><summary>Gets a value that indicates whether the Web service failed because of a time-out.</summary><returns>true if the Web service failed because of a time-out; otherwise, false. </returns></member><member name="P:J#Sys.Net.WebServiceError.statusCode"><summary>Gets the underlying HTTP error status code for the Web request.</summary><returns>The HTTP error status code for the response.</returns></member><member name="P:J#Sys.Net.WebServiceError.message"><summary>Gets the error message.</summary><returns>A string representing the error message.</returns></member><member name="P:J#Sys.Net.WebServiceError.stackTrace"><summary>Gets the error stack trace.</summary><returns>The value of the stack trace, if it exists; otherwise, an empty string.</returns></member><member name="P:J#Sys.Net.WebServiceError.exceptionType"><summary>Gets the error exception type.</summary><returns>A string corresponding to the error exception type.</returns></member><member name="T:J#Sys.Serialization.JavaScriptSerializer"><summary>Serializes ECMAScript (JavaScript) types into JSON-formatted data and deserializes JSON-formatted data into JavaScript types. </summary></member><member name="M:J#Sys.Serialization.JavaScriptSerializer.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.Serialization.JavaScriptSerializer" /> class.</summary></member><member name="M:J#Sys.Serialization.JavaScriptSerializer.serialize"><summary>Converts an ECMAScript (JavaScript) object graph into a JSON string. This member is static and can be invoked without creating an instance of the class.</summary><param name="object">The JavaScript object graph to serialize.</param><exception cref="Sys.ArgumentException"><paramref name="value" /> contains a value that cannot be serialized.</exception></member><member name="M:J#Sys.Serialization.JavaScriptSerializer.deserialize"><summary>Converts a JSON string into an ECMAScript (JavaScript) object graph. This member is static and can be invoked without creating an instance of the class.</summary><param name="data">The JSON string to deserialize.</param><param name="secure">true if the method should perform a JSON compliance check before evaluating; otherwise, false. The default is false.</param></member><member name="T:J#Sys.Services.ProfileService"><summary>Provides the client proxy class for the profile service. </summary></member><member name="M:J#Sys.Services.ProfileService.#ctor"><summary>Contains the loaded profile data.</summary></member><member name="P:J#Sys.Services.ProfileService.defaultLoadCompletedCallback"><summary>Gets or sets the name of the default load-completed callback function.</summary><returns /><param name="v alue">A string that contains the name of the default load-completed callback function.</param></member><member name="P:J#Sys.Services.ProfileService.defaultSaveCompletedCallback"><summary>Gets or sets the name of the default save-completed callback function.</summary><returns /></member><member name="P:J#Sys.Services.ProfileService.path"><summary>Gets or sets the profile service path.</summary><returns /><param name="v alue">A string that contains the name of the default save-completed callback function.</param></member><member name="M:J#Sys.Services.ProfileService.load"><summary>Loads the specified profile properties.</summary><param name="propertyNames">A string array that contains the profile properties to load.</param><param name="loadCompletedCallback">The function that is called when loading has completed. The default is null.</param><param name="failedCallback">The function that is called when loading has failed. The default is null. </param><param name="userContext">User context information passed to the callback functions.</param></member><member name="M:J#Sys.Services.ProfileService.save"><summary>Saves the specified profile properties.</summary><param name="propertyNames">A string array that contains the profile properties to save.</param><param name="saveCompletedCallback">The function that is called when the <see cref="M:J#Sys.Services.ProfileService.save" /> method has finished. The default is null.</param><param name="failedCallback">The function that is called if the <see cref="M:J#Sys.Services.ProfileService.save" /> method has failed. The default is null. </param><param name="userContext">User context information passed to the callback functions.</param></member><member name="P:J#Sys.Services.ProfileService.timeout"><summary>Gets or sets the profile service time-out value.</summary><returns /><param name="value">The time-out value in milliseconds.</param></member><member name="P:J#Sys.Services.ProfileService.defaultUserContext"><summary>Gets or sets the default user context for the service.</summary><returns>Reference to the user context for the service.</returns></member><member name="P:J#Sys.Services.ProfileService.defaultSucceededCallback"><summary>Gets or sets the default succeeded callback function for the service.</summary><returns>Reference to the succeeded callback function for the service.</returns></member><member name="P:J#Sys.Services.ProfileService.defaultFailedCallback"><summary>Gets or sets the name of the default failure callback function.</summary><returns /><param name="v alue">A string that contains the name of the default failure callback function.</param></member><member name="F:J#Sys.Services.ProfileService.DefaultWebServicePath"><summary>Specifies the path to the default profile service.</summary></member><member name="T:J#Sys.Services.ProfileGroup"><summary>Defines a group. </summary></member><member name="M:J#Sys.Services.ProfileGroup.#ctor"><summary>Initializes an instance of the <see cref="T:J#Sys.Services.ProfileGroup" /> class.</summary><param name="properties">(Optional) An object containing the settings for this profile group. This parameter may be null.</param></member><member name="T:J#Sys.Services.AuthenticationService"><summary>Provides the client proxy class for the authentication service. </summary></member><member name="M:J#Sys.Services.AuthenticationService.#ctor"><summary>Initializes an instance of the <see cref="T:J#Sys.Services.AuthenticationService" /> class.</summary></member><member name="P:J#Sys.Services.AuthenticationService.defaultLoginCompletedCallback"><summary>Gets or sets the name of the default login-completed callback function.</summary><param name="v alue">A string that contains the name of the default login-completed callback function.</param></member><member name="P:J#Sys.Services.AuthenticationService.defaultLogoutCompletedCallback"><summary>Gets or sets the name of the default logout-completed callback function.</summary><param name="v alue">A string that contains the name of the default logout-completed callback function.</param></member><member name="P:J#Sys.Services.AuthenticationService.isLoggedIn"><summary>Gets the authentication state of the current user.</summary><returns>true if the current user is logged in; otherwise, false.</returns></member><member name="P:J#Sys.Services.AuthenticationService.path"><summary>Gets or sets the authentication service path.</summary><returns /><param name="value">The authentication service path.</param></member><member name="M:J#Sys.Services.AuthenticationService.login"><summary>Authenticates the user's credentials.</summary><param name="username">(required) The user name to authenticate.</param><param name="password">The user's password. The default is null.</param><param name="isPersistent">true if the issued authentication ticket should be persistent across browser sessions; otherwise, false. The default is false.</param><param name="customInfo">The URL to redirect the browser to on successful authentication. If null, no redirect occurs. The default is null.</param><param name="redirectUrl">Reserved for future use. The default is null.</param><param name="loginCompletedCallback">The function to call when the login has finished successfully. The default is null.</param><param name="failedCallback">The function to call if the login fails. The default is null. </param><param name="userContext">User context information that you are passing to the callback functions.</param><exception cref="Sys.ArgumentNullException"><paramref name="username" /> is null.</exception></member><member name="M:J#Sys.Services.AuthenticationService.logout"><summary>Logs out the currently authenticated user.</summary><param name="redirectUrl">The URL to redirect the browser to on successful logout. The default is null.</param><param name="logoutCompletedCallback">The function that is called when the logout has finished. The default is null.</param><param name="failedCallback">The function that is called if the logout has failed. The default is null. </param><param name="userContext">User context information that you are passing to the callback functions.</param></member><member name="P:J#Sys.Services.AuthenticationService.timeout"><summary>Gets or sets the authentication service time-out value.</summary><returns /><param name="value">The time-out value in milliseconds.</param></member><member name="P:J#Sys.Services.AuthenticationService.defaultUserContext"><summary>Gets or sets the default user context for the service.</summary><returns>Reference to the user context for the service.</returns></member><member name="P:J#Sys.Services.AuthenticationService.defaultSucceededCallback"><summary>Gets or sets the default succeeded callback function for the service.</summary><returns>Reference to the succeeded callback function for the service.</returns></member><member name="P:J#Sys.Services.AuthenticationService.defaultFailedCallback"><summary>Gets or sets the name of the default failure callback function.</summary><returns /><param name="v alue">A string that contains the name of the default failure callback function.</param></member><member name="F:J#Sys.Services.AuthenticationService.DefaultWebServicePath"><summary>Specifies the path to the default authentication service.</summary></member><member name="T:J#Sys.Services.RoleService"><summary>Provides a client proxy class for the ASP.NET role service. </summary></member><member name="M:J#Sys.Services.RoleService.#ctor"><summary>Initializes an instance of the <see cref="T:J#Sys.Services.RoleService" /> class.</summary></member><member name="P:J#Sys.Services.RoleService.defaultLoadCompletedCallback"><summary>Gets or sets the name of the default load-completed callback function.</summary><returns /><param name="value">The name of the default failed callback function.</param></member><member name="P:J#Sys.Services.RoleService.path"><summary>Gets or sets the role service path.</summary><returns /><param name="value">A string that contains the role service path.</param></member><member name="P:J#Sys.Services.RoleService.roles"><summary>Gets the roles for the currently authenticated user.</summary><returns>An<see cref="T:J#Array" /> instance that contains the roles. </returns></member><member name="M:J#Sys.Services.RoleService.isUserInRole"><summary>Checks whether the currently authenticated user is in the specified role.</summary><returns>true if the current user is in the specified role; otherwise, false.</returns><param name="role">The name of the role to check for.</param></member><member name="M:J#Sys.Services.RoleService.load"><summary>Loads the roles for the currently authenticated user into local client memory.</summary><param name="loadCompletedCallback">The function that is called when the load operation has completed. The default is null.</param><param name="failedCallback">The function that is called if loading has failed. The default is null. </param><param name="userContext">User context information passed to the callback functions.</param></member><member name="P:J#Sys.Services.RoleService.timeout"><summary>Gets or sets the role service time-out value.</summary><returns /><param name="value">The time-out value in milliseconds.</param></member><member name="P:J#Sys.Services.RoleService.defaultUserContext"><summary>Gets or sets the default user context for the service.</summary><returns>Reference to the user context for the service.</returns></member><member name="P:J#Sys.Services.RoleService.defaultSucceededCallback"><summary>Gets or sets the default succeeded callback function for the service.</summary><returns>Reference to the succeeded callback function for the service.</returns></member><member name="P:J#Sys.Services.RoleService.defaultFailedCallback"><summary>Gets or sets the name of the default failed callback function.</summary><param name="value">The name of the default failed callback function.</param></member><member name="F:J#Sys.Services.RoleService.DefaultWebServicePath"><summary>Specifies the path to the default authentication service.</summary></member><member name="T:J#Sys.UI.MouseButton"><summary>Describes mouse button locations.</summary></member><member name="F:J#Sys.UI.MouseButton.leftButton"><summary>Represents the left mouse button.</summary></member><member name="F:J#Sys.UI.MouseButton.middleButton"><summary>Represents the wheel button (middle mouse button).</summary></member><member name="F:J#Sys.UI.MouseButton.rightButton"><summary>Represents the right mouse button.</summary></member><member name="M:J#Sys.UI.MouseButton.parse"><summary /></member><member name="T:J#Sys.UI.Key"><summary>Describes key codes.</summary></member><member name="F:J#Sys.UI.Key.backspace"><summary>Represents the BACKSPACE key.</summary></member><member name="F:J#Sys.UI.Key.tab"><summary>Represents the TAB key.</summary></member><member name="F:J#Sys.UI.Key.enter"><summary>Represents the ENTER key.</summary></member><member name="F:J#Sys.UI.Key.esc"><summary>Represents the ESC key.</summary></member><member name="F:J#Sys.UI.Key.space"><summary>Represents the SPACEBAR key.</summary></member><member name="F:J#Sys.UI.Key.pageUp"><summary>Represents the PAGE UP key.</summary></member><member name="F:J#Sys.UI.Key.pageDown"><summary>Represents the PAGE DOWN key.</summary></member><member name="F:J#Sys.UI.Key.end"><summary>Represents the END key.</summary></member><member name="F:J#Sys.UI.Key.home"><summary>Represents the HOME key.</summary></member><member name="F:J#Sys.UI.Key.left"><summary>Represents the LEFT ARROW key.</summary></member><member name="F:J#Sys.UI.Key.up"><summary>Represents the UP ARROW key.</summary></member><member name="F:J#Sys.UI.Key.right"><summary>Represents the RIGHT ARROW key.</summary></member><member name="F:J#Sys.UI.Key.down"><summary>Represents the DOWN ARROW key.</summary></member><member name="F:J#Sys.UI.Key.del"><summary>Represents DELETE key.</summary></member><member name="M:J#Sys.UI.Key.parse"><summary /></member><member name="T:J#Sys.UI.Point"><summary>Creates an object that contains a set of integer coordinates that represent a position.</summary></member><member name="M:J#Sys.UI.Point.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.UI.Point" /> class.</summary><param name="x">The number of pixels between the location and the left edge of the parent frame.</param><param name="y">The number of pixels between the location and the top edge of the parent frame.</param></member><member name="F:J#Sys.UI.Point.x"><summary>Gets the x-coordinate of a <see cref="T:J#Sys.UI.Point" /> object in pixels. This property is read-only.</summary><returns>A number that represents the x-coordinate of the <see cref="T:J#Sys.UI.Point" /> object in pixels. </returns></member><member name="F:J#Sys.UI.Point.y"><summary>Gets the y-coordinate of a <see cref="T:J#Sys.UI.Point" /> object in pixels. This property is read-only.</summary><returns>A number that represents the y-coordinate of the <see cref="T:J#Sys.UI.Point" /> object in pixels.</returns></member><member name="T:J#Sys.UI.Bounds"><summary>Creates an object that contains a set of integer coordinates representing position, width, and height.</summary></member><member name="M:J#Sys.UI.Bounds.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.UI.Bounds" /> class.</summary><param name="x">The number of pixels between the location and the left edge of the parent frame.</param><param name="y">The number of pixels between the location and the top edge of the parent frame.</param><param name="height">The width in pixels.</param><param name="width">The height in pixels.</param></member><member name="F:J#Sys.UI.Bounds.x"><summary>Gets the x-coordinate of a <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</summary><returns>A number that represents the x-coordinate of the <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</returns></member><member name="F:J#Sys.UI.Bounds.y"><summary>Gets the y-coordinate of a <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</summary><returns>A number that represents the y-coordinate of the <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</returns></member><member name="F:J#Sys.UI.Bounds.height"><summary>Gets the height of a <see cref="T:J#Sys.UI.Bounds" /> object in pixels. This property is read-only.</summary><returns>A number that represents the height of the <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</returns></member><member name="F:J#Sys.UI.Bounds.width"><summary>Gets the width of a <see cref="T:J#Sys.UI.Bounds" /> object in pixels. This property is read-only.</summary><returns>A number that represents the width of the <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</returns></member><member name="T:J#Sys.UI.DomEvent"><summary>Provides cross-browser access to fields and methods that are associated with handlers for DOM-element events. </summary></member><member name="M:J#Sys.UI.DomEvent.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.UI.DomEvent" /> class and associates it with the specified <see cref="T:J#Sys.UI.DomElement" /> object.</summary><param name="eventObject">The <see cref="T:J#Sys.UI.DomElement" /> object to associate with the event.</param></member><member name="M:J#Sys.UI.DomEvent.preventDefault"><summary>Prevents the default DOM event action from happening.</summary></member><member name="M:J#Sys.UI.DomEvent.stopPropagation"><summary>Prevents an event from being propagated (bubbled) to parent elements.</summary></member><member name="M:J#Sys.UI.DomEvent.addHandler"><summary>Provides a method to add a DOM event handler to the DOM element that exposes the event. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The element that exposes the event.</param><param name="eventName">The name of the event. </param><param name="handler">The client function that is called when the event occurs.</param></member><member name="M:J#Sys.UI.DomEvent.addHandlers"><summary>Adds a list of DOM event handlers to the DOM element that exposes the events. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The DOM element that exposes the events.</param><param name="events">A dictionary of event handlers.</param><param name="handlerOwner">(Optional) The object instance that is the context for the delegates that should be created from the handlers.</param><exception cref="M:J#Error.invalidOperation">(Debug) One of the handlers specified in <paramref name="events" /> is not a function.</exception></member><member name="M:J#Sys.UI.DomEvent.clearHandlers"><summary>Removes all DOM event handlers from a DOM element that were added through the <see cref="M:J#Sys.UI.DomEvent.addHandler" /> or the <see cref="M:J#Sys.UI.DomEvent.addHandlers" /> methods. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The element that exposes the events.</param></member><member name="M:J#Sys.UI.DomEvent.removeHandler"><summary>Removes a DOM event handler from the DOM element that exposes the event. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The element that exposes the event.</param><param name="eventName">The name of the event. </param><param name="handler">The event handler to remove.</param></member><member name="F:J#Sys.UI.DomEvent.altKey"><summary>Gets a Boolean value that indicates the state of the ALT key when the associated event occurred.</summary><returns>true if the ALT key was pressed when the event occurred; otherwise, false.</returns></member><member name="F:J#Sys.UI.DomEvent.button"><summary>Gets a <see cref="T:J#Sys.UI.MouseButton" /> enumeration value that indicates the button state of the mouse when the related event occurred.</summary><returns>A <see cref="T:J#Sys.UI.MouseButton" /> value.</returns></member><member name="F:J#Sys.UI.DomEvent.charCode"><summary>Gets the character code of the key that raised the associated keyPress event.</summary><returns>An integer value that represents the character code of the key or key combination that was pressed to raise the keyPress event.</returns></member><member name="F:J#Sys.UI.DomEvent.clientX"><summary>Gets the x-coordinate of the mouse pointer's position relative to the client area of the browser window, excluding window scroll bars.</summary><returns>An integer that represents the x-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.clientY"><summary>Gets the y-coordinate of the mouse pointer's position relative to the client area of the browser window, excluding window scroll bars.</summary><returns>An integer that represents the y-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.ctrlKey"><summary>Gets a Boolean value that indicates the state of the CTRL key when the associated event occurred.</summary><returns>true if the CTRL key was pressed when the event occurred; otherwise, false.</returns></member><member name="F:J#Sys.UI.DomEvent.keyCode"><summary>Gets the key code of the key that raised the <see cref="F:J#Sys.UI.Key.up" /> or <see cref="F:J#Sys.UI.Key.down" /> event.</summary><returns>An integer value that represents the key code of the key that was pressed to raise the <see cref="F:J#Sys.UI.Key.up" /> or <see cref="F:J#Sys.UI.Key.down" /> event.</returns></member><member name="F:J#Sys.UI.DomEvent.offsetX"><summary>Gets the x-coordinate of the mouse pointer's position relative to the object that raised the event.</summary><returns>An integer that represents the x-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.offsetY"><summary>Gets the y-coordinate of the mouse pointer's position relative to the object that raised the event.</summary><returns>An integer that represents the y-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.screenX"><summary>Gets the x-coordinate of the mouse pointer's position relative to the user's screen.</summary><returns>An integer that represents the x-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.screenY"><summary>Gets the y-coordinate of the mouse pointer's position relative to the user's screen.</summary><returns>An integer that represents the y-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.shiftKey"><summary>Gets a Boolean value that indicates the state of the SHIFT key when the associated event occurred.</summary><returns>true if the SHIFT key was pressed when the event occurred; otherwise, false.</returns></member><member name="F:J#Sys.UI.DomEvent.target"><summary>Gets the object that the event acted on.</summary><returns>An object that represents the target that the event acted on.</returns></member><member name="F:J#Sys.UI.DomEvent.type"><summary>Gets the name of the event that was raised.</summary><returns>A string that represents the name of the event that was raised.</returns></member><member name="T:J#Sys.UI.DomElement"><summary>Defines static methods and properties that provide helper APIs for manipulating and inspecting DOM elements.</summary></member><member name="M:J#Sys.UI.DomElement.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.UI.DomElement" /> class.</summary></member><member name="M:J#Sys.UI.DomElement.addCssClass"><summary>Adds a CSS class to a DOM element if the class is not already part of the DOM element. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to add the CSS class to.</param><param name="className">The name of the CSS class to add.</param></member><member name="M:J#Sys.UI.DomElement.containsCssClass"><summary>Gets a value that indicates whether the DOM element contains the specified CSS class. This member is static and can be invoked without creating an instance of the class.</summary><returns>true if the element contains the specified CSS class; otherwise, false.</returns><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to test for the CSS class.</param><param name="className">The name of the CSS class to test for.</param></member><member name="M:J#Sys.UI.DomElement.getBounds"><summary>Gets a set of integer coordinates that represent the position, width, and height of a DOM element. This member is static and can be invoked without creating an instance of the class.</summary><returns>An object of the JavaScript type Object that contains the x-coordinate and y-coordinate of the upper-left corner, the width, and the height of the element in pixels.</returns><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> instance to get the coordinates of.</param></member><member name="M:J#Sys.UI.DomElement.getElementById"><summary>Gets a DOM element that has the specified id attribute. This member is static and can be invoked without creating an instance of the class.</summary><returns>The <see cref="T:J#Sys.UI.DomElement" /> object with the specified ID.</returns><param name="id">The ID of the element to find.</param><param name="element">The parent element to search in. The default is the document element.</param></member><member name="M:J#Sys.UI.DomElement.getLocation"><summary>Gets the absolute position of a DOM element relative to the upper-left corner of the owner frame or window. This member is static and can be invoked without creating an instance of the class.</summary><returns>An object of the JavaScript type Object that contains the x-coordinate and y-coordinate of the element in pixels.</returns><param name="element">The target element.</param></member><member name="M:J#Sys.UI.DomElement.removeCssClass"><summary>Removes a CSS class from a DOM element. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to remove the CSS class from.</param><param name="className">The name of the CSS class to remove.</param></member><member name="M:J#Sys.UI.DomElement.setLocation"><summary>Sets the position of a DOM element. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The target element.</param><param name="x">The x-coordinate in pixels.</param><param name="y">The y-coordinate in pixels.</param></member><member name="M:J#Sys.UI.DomElement.toggleCssClass"><summary>Toggles a CSS class in a DOM element. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to toggle.</param><param name="className">The name of the CSS class to toggle.</param></member><member name="M:J#Sys.UI.DomElement.getVisibilityMode"><summary>Returns a value that represents the layout characteristics of a DOM element when it is hidden by invoking the <see cref="M:J#Sys.UI.DomElement.setVisible" /> method. This member is static and can be invoked without creating an instance of the class.</summary><returns>A <see cref="T:J#Sys.UI.VisibilityMode" /> enumeration value that indicates the layout characteristics of <paramref name="element" /> when it is hidden by invoking the <see cref="M:J#Sys.UI.DomElement.setVisible" /> method.</returns><param name="element">The target DOM element.</param></member><member name="M:J#Sys.UI.DomElement.setVisibilityMode"><summary>Sets the layout characteristics of a DOM element when it is hidden by invoking the <see cref="M:J#Sys.UI.DomElement.setVisible" /> method. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The target DOM element.</param><param name="value">A <see cref="T:J#Sys.UI.VisibilityMode" /> enumeration value.</param></member><member name="M:J#Sys.UI.DomElement.getVisible"><summary>Gets a value that indicates whether a DOM element is currently visible on the Web page. This member is static and can be invoked without creating an instance of the class.</summary><returns>true if <paramref name="element" /> is visible on the Web page; otherwise, false</returns><param name="element">The target DOM element.</param></member><member name="M:J#Sys.UI.DomElement.setVisible"><summary>Sets a DOM element to be visible or hidden. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The target DOM element.</param><param name="value">true to make <paramref name="element" /> visible on the Web page; false to hide <paramref name="element" />.</param></member><member name="T:J#Sys.UI.Behavior"><summary>Provides a base class for all AJAX behaviors in ASP.NET.</summary></member><member name="M:J#Sys.UI.Behavior.#ctor"><summary>When overridden in a derived class, initializes a new instance of that class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to associate with the behavior.</param></member><member name="P:J#Sys.UI.Behavior.element"><summary>Gets the HTML Document Object Model (DOM) element that the current <see cref="T:J#Sys.UI.Behavior" /> object is associated with.</summary><returns>The DOM element that the current <see cref="T:J#Sys.UI.Behavior" /> object is associated with.</returns></member><member name="P:J#Sys.UI.Behavior.id"><summary>Gets or sets the identifier for the <see cref="T:J#Sys.UI.Behavior" /> object.</summary><returns>A generated identifier that consists of the ID of the associated <see cref="T:J#Sys.UI.DomElement" />, the "$" character, and the <see cref="P:J#Sys.UI.Behavior.name" /> value of the <see cref="T:J#Sys.UI.Behavior" /> object.</returns><param name="value">The string value to use as the identifier.</param><exception cref="M:J#Error.invalidOperation">In all cases.</exception></member><member name="P:J#Sys.UI.Behavior.name"><summary>Gets or sets the name of the <see cref="T:J#Sys.UI.Behavior" /> object.</summary><returns>The name of the <see cref="T:J#Sys.UI.Behavior" /> object.</returns><param name="value">A string value to use as the name.</param><exception cref="M:J#Error.argument">(Debug) <paramref name="value" /> starts or ends with a space or is an empty string ("").</exception><exception cref="M:J#Error.invalidOperation">(Debug) The specified name already exists in the current <see cref="T:J#Sys.UI.DomElement" /> object.- or -The current <see cref="T:J#Sys.UI.DomElement" /> object has already been initialized.</exception></member><member name="M:J#Sys.UI.Behavior.initialize"><summary>Initializes the current <see cref="T:J#Sys.UI.Behavior" /> object. </summary></member><member name="M:J#Sys.UI.Behavior.dispose"><summary>Removes the current <see cref="T:J#Sys.UI.Behavior" /> object from the application.</summary></member><member name="M:J#Sys.UI.Behavior.getBehaviorByName"><summary>Gets a <see cref="T:J#Sys.UI.Behavior" /> instance with the specified <see cref="P:J#Sys.UI.Behavior.name" /> property from the specified HTML Document Object Model (DOM) element. This member a static member and can be invoked without creating an instance of the class.</summary><returns>The specified <see cref="T:J#Sys.UI.Behavior" /> object, if found; otherwise, null.</returns><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to search.</param><param name="name">The <see cref="P:J#Sys.UI.Behavior.name" /> property of the <see cref="T:J#Sys.UI.Behavior" /> instance to look for.</param></member><member name="M:J#Sys.UI.Behavior.getBehaviors"><summary>Gets the <see cref="T:J#Sys.UI.Behavior" /> objects that are associated with the specified HTML Document Object Model (DOM) element. This member is static and can be invoked without creating an instance of the class.</summary><returns>An array of references to <see cref="T:J#Sys.UI.Behavior" /> objects, or null if no references exist.</returns><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to search.</param></member><member name="M:J#Sys.UI.Behavior.getBehaviorsByType"><summary>Gets an array of <see cref="T:J#Sys.UI.Behavior" /> objects that are of the specified type from the specified HTML Document Object Model (DOM) element. This method is is static and can be invoked without creating an instance of the class.</summary><returns>An array of all <see cref="T:J#Sys.UI.Behavior" /> objects of the specified type that are associated with the specified DOM element, if found; otherwise, an empty array.</returns><param name="element">The DOM element to search.</param><param name="type">The type of the <see cref="T:J#Sys.UI.Behavior" /> objects to find.</param></member><member name="T:J#Sys.UI.VisibilityMode"><summary>Describes the layout of a DOM element in the page when the element's <see cref="P:J#Sys.UI.Control.visible" /> property is set to false.</summary></member><member name="F:J#Sys.UI.VisibilityMode.hide"><summary>The element is not visible, but it occupies space on the page.</summary></member><member name="F:J#Sys.UI.VisibilityMode.collapse"><summary>The element is not visible, and the space it occupies is collapsed.</summary></member><member name="M:J#Sys.UI.VisibilityMode.parse"><summary /></member><member name="T:J#Sys.UI.Control"><summary>Provides the base class for all ASP.NET AJAX client controls.</summary></member><member name="M:J#Sys.UI.Control.#ctor"><summary>When called from a derived class, initializes a new instance of that class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object that the control will be associated with.</param><exception cref="M:J#Error.invalidOperation">(Debug) The control is already defined.</exception></member><member name="P:J#Sys.UI.Control.element"><summary>Gets the HTML Document Object Model (DOM) element that the current <see cref="T:J#Sys.UI.Control" /> instance is associated with.</summary><returns>The DOM element that the current <see cref="T:J#Sys.UI.Control" /> instance is associated with.</returns></member><member name="P:J#Sys.UI.Control.id"><summary>Gets or sets the identifier for the current <see cref="T:J#Sys.UI.Control" /> object.</summary><returns>The identifier for the current <see cref="T:J#Sys.UI.Control" /> object. The default is the <see cref="M:J#Sys.UI.DomElement.getElementById" /> value of the associated <see cref="T:J#Sys.UI.DomElement" /> object.</returns><param name="value">The string to use as the identifier.</param><exception cref="M:J#Error.invalidOperation">An attempt was made to set the value of <see cref="P:J#Sys.UI.Control.id" />.</exception></member><member name="P:J#Sys.UI.Control.parent"><summary>Gets or sets the parent control associated with the current control.</summary><returns>A reference to the parent control of the current control.</returns><param name="value">The parent control to associate with the current control.</param><exception cref="M:J#Error.invalidOperation">(Debug) <paramref name="value" /> represents a control that is lower in the control hierarchy.</exception></member><member name="P:J#Sys.UI.Control.visibilityMode"><summary>Gets or sets the <see cref="T:J#Sys.UI.VisibilityMode" /> value for the current <see cref="T:J#Sys.UI.Control" /> object.</summary><returns>The current <see cref="T:J#Sys.UI.VisibilityMode" /> value associated with the <see cref="T:J#Sys.UI.Control" /> object.</returns><param name="value">A <see cref="T:J#Sys.UI.VisibilityMode" /> enumeration value.</param><exception cref="M:J#Error.invalidOperation">(Debug) An attempt was made to set a <see cref="P:J#Sys.UI.Control.visibilityMode" /> value after the <see cref="T:J#Sys.UI.Control" /> object's <see cref="M:J#Sys.UI.Control.dispose" /> method was invoked.</exception></member><member name="P:J#Sys.UI.Control.visible"><summary>Gets or sets the visibility of the current <see cref="T:J#Sys.UI.Control" /> object.</summary><returns>true if the current element is visible; otherwise, false.</returns><param name="value">true to display the current element on the page, or false to hide the control.</param><exception cref="M:J#Error.invalidOperation">(Debug) An attempt was made to set the <see cref="P:J#Sys.UI.Control.visible" /> property value after the <see cref="T:J#Sys.UI.Control" /> object's <see cref="M:J#Sys.UI.Control.dispose" /> method was invoked.</exception></member><member name="M:J#Sys.UI.Control.addCssClass"><summary>Adds a CSS class to the HTML Document Object Model (DOM) element that the control is attached to.</summary><returns>None.</returns><param name="className">A string that contains the name of the CSS class to add.</param></member><member name="M:J#Sys.UI.Control.dispose"><summary>Removes the current control from the application.</summary></member><member name="M:J#Sys.UI.Control.onBubbleEvent"><summary>Called when an event is raised by the <see cref="M:J#Sys.UI.Control.raiseBubbleEvent" /> method.</summary><returns>false in all cases.</returns><param name="source">The object that triggered the event.</param><param name="args">The event arguments.</param></member><member name="M:J#Sys.UI.Control.raiseBubbleEvent"><summary>Calls the <see cref="M:J#Sys.UI.Control.onBubbleEvent" /> method of the parent control.</summary><param name="source">The object that triggered the event.</param><param name="args">The event arguments.</param></member><member name="M:J#Sys.UI.Control.removeCssClass"><summary>Removes a CSS class from the HTML Document Object Model (DOM) element that the control is attached to.</summary><returns>None.</returns><param name="className">A string that contains the name of the CSS class to remove.</param></member><member name="M:J#Sys.UI.Control.toggleCssClass"><summary>Toggles a CSS class of the HTML Document Object Model (DOM) element that the control is attached to.</summary><returns>None.</returns><param name="className">A string that contains the name of the CSS class to toggle.</param></member><member name="T:J#Sys.WebForms.BeginRequestEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.beginRequest" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to pass argument information to event handlers. The <see cref="E:J#Sys.WebForms.PageRequestManager.beginRequest" /> event is raised just before the postback request is made.</summary></member><member name="M:J#Sys.WebForms.BeginRequestEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.BeginRequestEventArgs" /> class. </summary><param name="request" /><param name="postBackElement" /></member><member name="P:J#Sys.WebForms.BeginRequestEventArgs.postBackElement"><summary>Gets the postback element that initiated the asynchronous postback. This property is read-only. </summary><returns>An HTML DOM element.</returns></member><member name="P:J#Sys.WebForms.BeginRequestEventArgs.request"><summary>Gets the request object that represents the current postback. </summary><returns>An instance of the <see cref="T:J#Sys.Net.WebRequest" /> class.</returns></member><member name="T:J#Sys.WebForms.EndRequestEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.endRequest" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to pass argument information to event handlers. The <see cref="E:J#Sys.WebForms.PageRequestManager.endRequest" /> event is raised just after the postback request has finished processing.</summary></member><member name="M:J#Sys.WebForms.EndRequestEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.EndRequestEventArgs" /> class. </summary><param name="error" /><param name="dataItems" /><param name="response" /></member><member name="P:J#Sys.WebForms.EndRequestEventArgs.dataItems"><summary>Gets a JSON data structure that contains data items that were registered by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class.</summary><returns>A JSON data structure that contains name/value pairs that were registered as data items by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class.</returns></member><member name="P:J#Sys.WebForms.EndRequestEventArgs.error"><summary>Gets the Error object. </summary><returns>A base ECMAScript (JavaScript) <see cref="P:J#Sys.WebForms.EndRequestEventArgs.error" /> object.</returns></member><member name="P:J#Sys.WebForms.EndRequestEventArgs.errorHandled"><summary>Get or sets a value that indicates whether the error has been handled. </summary><returns>true if the error has been handled; otherwise false.</returns><param name="v alue">true or false.</param></member><member name="P:J#Sys.WebForms.EndRequestEventArgs.response"><summary>Gets a response object that is represented by the <see cref="T:J#Sys.Net.WebRequestExecutor" /> class.</summary><returns>A response object that is represented by the <see cref="T:J#Sys.Net.WebRequestExecutor" /> class.</returns></member><member name="T:J#Sys.WebForms.InitializeRequestEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.initializeRequest" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to pass argument information to event handlers.</summary></member><member name="M:J#Sys.WebForms.InitializeRequestEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.InitializeRequestEventArgs" /> class. </summary><param name="R equest" /><param name="postBackElement" /></member><member name="P:J#Sys.WebForms.InitializeRequestEventArgs.postBackElement"><summary>Gets the postback element that initiated the asynchronous postback.</summary><returns>An HTML DOM element.</returns></member><member name="P:J#Sys.WebForms.InitializeRequestEventArgs.request"><summary>Gets the request object that represents the current postback. </summary><returns>A request object that is represented by the <see cref="T:J#Sys.Net.WebRequestExecutor" /> class.</returns></member><member name="T:J#Sys.WebForms.PageLoadedEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.pageLoaded" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to send event data that represents the <see cref="T:System.Web.UI.UpdatePanel" /> controls that were updated and created in the most recent postback.</summary></member><member name="M:J#Sys.WebForms.PageLoadedEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.PageLoadedEventArgs" /> class.</summary><param name="panelsUpdated" /><param name="panelsCreated" /><param name="dataItems" /></member><member name="P:J#Sys.WebForms.PageLoadedEventArgs.dataItems"><summary>Gets a JSON data structure that contains data items that were registered by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class. </summary><returns>A JSON data structure that contains name/value pairs that were registered as data items that use the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class.</returns></member><member name="P:J#Sys.WebForms.PageLoadedEventArgs.panelsCreated"><summary>Gets an array of HTML &lt;div&gt; elements that represent <see cref="T:System.Web.UI.UpdatePanel" /> controls that were created when the DOM was updated during the last asynchronous postback.</summary><returns>An array of &lt;div&gt; elements that were created during the DOM manipulation that was caused by the last asynchronous postback. If no elements were created, the property returns null.</returns></member><member name="P:J#Sys.WebForms.PageLoadedEventArgs.panelsUpdated"><summary>Gets an array of HTML &lt;div&gt; elements that represent <see cref="T:System.Web.UI.UpdatePanel" /> controls that were updated when the DOM was updated during the last asynchronous postback. </summary><returns>An array of &lt;div&gt; elements that were updated during the DOM manipulation that was the result of the last asynchronous postback. If no elements were created, the property returns null.</returns></member><member name="T:J#Sys.WebForms.PageLoadingEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.pageLoading" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to send event data that represents the <see cref="T:System.Web.UI.UpdatePanel" /> controls being updated and deleted as a result of the most recent postback.</summary></member><member name="M:J#Sys.WebForms.PageLoadingEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.PageLoadingEventArgs" /> class.</summary><param name="panelsUpdating" /><param name="panelsDeleting" /><param name="dataItems" /></member><member name="P:J#Sys.WebForms.PageLoadingEventArgs.dataItems"><summary>Gets a JSON data structure that contains data items that were registered by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class. </summary><returns>A JSON data structure that contains name/value pairs that were registered as data items by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class.</returns></member><member name="P:J#Sys.WebForms.PageLoadingEventArgs.panelsDeleting"><summary>Gets an array of HTML &lt;div&gt; elements that represent <see cref="T:System.Web.UI.UpdatePanel" /> controls that will be deleted from the DOM as a result of the current asynchronous postback. </summary><returns>An array of &lt;div&gt; elements that will be deleted from the DOM. If no elements will be deleted, the property returns null.</returns></member><member name="P:J#Sys.WebForms.PageLoadingEventArgs.panelsUpdating"><summary>Gets an array of HTML &lt;div&gt; elements that represent <see cref="T:System.Web.UI.UpdatePanel" /> controls that will be updated in the DOM as a result of the current asynchronous postback.</summary><returns>An array of &lt;div&gt; elements that will be updated in the DOM. If no elements will be updated, the property returns null.</returns></member><member name="T:J#Sys.WebForms.PageRequestManager"><summary>Manages partial-page updates of server <see cref="T:System.Web.UI.UpdatePanel" /> controls in the browser. In addition, defines properties, events, and methods that can be used to customize a Web page by using client script.</summary></member><member name="M:J#Sys.WebForms.PageRequestManager.#ctor"><summary>You do not create a new instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class directly. Instead, an instance is available when partial-page rendering is enabled. Call the <see cref="M:J#Sys.WebForms.PageRequestManager.getInstance" /> method to get the instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class.</summary></member><member name="P:J#Sys.WebForms.PageRequestManager.isInAsyncPostBack"><summary>Returns a value that indicates whether the <see cref="T:J#Sys.WebForms.PageRequestManager" /> object is processing a postback.</summary></member><member name="E:J#Sys.WebForms.PageRequestManager.beginRequest"><summary>Raised before the processing of an asynchronous postback starts and the postback request is sent to the server.</summary><param name="beginRequestHandler">The name of the handler method that will be called.</param></member><member name="E:J#Sys.WebForms.PageRequestManager.endRequest"><summary>Raised after an asynchronous postback is finished and control has been returned to the browser.</summary><param name="endRequestHandler">The name of the handler method that will be called.</param></member><member name="E:J#Sys.WebForms.PageRequestManager.initializeRequest"><summary>Raised during the initialization of the asynchronous postback.</summary><param name="initializeRequestHandler">The name of the handler method that will be called.</param></member><member name="E:J#Sys.WebForms.PageRequestManager.pageLoaded"><summary>Raised after all content on the page is refreshed as a result of either a synchronous or an asynchronous postback.</summary><param name="pageLoadedHandler">The name of the handler method that will be called.</param></member><member name="E:J#Sys.WebForms.PageRequestManager.pageLoading"><summary>Raised after the response from the server to an asynchronous postback is received but before any content on the page is updated.</summary><param name="pageLoadingHandler">The name of the handler function that will be called.</param></member><member name="M:J#Sys.WebForms.PageRequestManager.abortPostBack"><summary>Stops all updates that would occur as a result of an asynchronous postback.</summary></member><member name="M:J#Sys.WebForms.PageRequestManager.dispose"><summary>Releases ECMAScript (JavaScript) resources and detaches events.</summary></member><member name="M:J#Sys.WebForms.PageRequestManager.getInstance"><summary>Returns the instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class for the page. </summary><returns>The current instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class. You do not create a new instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class directly. Instead, an instance is available when partial-page rendering is enabled.</returns></member>
    <member name="T:System.Web.ApplicationServices.ApplicationServicesHostFactory">
      <summary>Provides a factory class that creates instances of the authentication service, role service, and profile service in managed hosting environments.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ApplicationServicesHostFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ApplicationServices.ApplicationServicesHostFactory" /> class. </summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ApplicationServicesHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>Creates an instance of the service class that has the specified base address or addresses.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceHost" /> instance for the type of service that has the specified base address or addresses.</returns>
      <param name="serviceType">The type of service host to create.</param>
      <param name="baseAddresses">An array of base addresses for the service.</param>
    </member>
    <member name="T:System.Web.ApplicationServices.AuthenticatingEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" /> event.</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated">
      <summary>Gets or sets a value that indicates whether the user credentials are valid.</summary>
      <returns>true if the user credentials are valid; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete">
      <summary>Gets or sets a value that indicates whether the user credentials have been authenticated.</summary>
      <returns>true if all the steps for validating the user credentials have been performed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential">
      <summary>Gets additional user values for authentication.</summary>
      <returns>The values required for authentication other than user name and password.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.Password">
      <summary>Gets the password for the user.</summary>
      <returns>The password to validate.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName">
      <summary>Gets the authentication name for the user.</summary>
      <returns>The user name to validate.</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.AuthenticationService">
      <summary>Enables access to ASP.NET forms authentication as a Web service.</summary>
    </member>
    <member name="E:System.Web.ApplicationServices.AuthenticationService.Authenticating">
      <summary>Occurs when user credentials are being validated.</summary>
    </member>
    <member name="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie">
      <summary>Occurs when the authentication cookie is being set.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn">
      <summary>Determines whether the current user is authenticated.</summary>
      <returns>true if the user has been authenticated; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)">
      <summary>Checks user credentials and creates an authentication ticket (cookie) if the credentials are valid.</summary>
      <returns>true if user credentials are valid; otherwise, false.</returns>
      <param name="username">The user name to be validated.</param>
      <param name="password">The password for the specified user.</param>
      <param name="customCredential">The value or values to validate in addition to <paramref name="userName" /> and <paramref name="password" />, if any.</param>
      <param name="isPersistent">A value that indicates whether the authentication ticket remains valid across sessions.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> or <paramref name="password" /> is null.</exception>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.Logout">
      <summary>Clears the authentication ticket (cookie) in the browser.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)">
      <summary>Authenticates user credentials without issuing an authentication ticket.</summary>
      <returns>true if the user credentials are valid; otherwise, false.</returns>
      <param name="username">The user name to be validated.</param>
      <param name="password">The password for the specified user.</param>
      <param name="customCredential">The value or values to validate in addition to <paramref name="userName" /> and <paramref name="password" />, if any.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> or <paramref name="password" /> is null.</exception>
    </member>
    <member name="T:System.Web.ApplicationServices.CreatingCookieEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" /> event.</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.CookieIsSet">
      <summary>Gets or sets a value that indicates whether the authentication cookie has been created.</summary>
      <returns>true if the authentication cookie was created; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential">
      <summary>Gets additional authentication values that are provided by the user.</summary>
      <returns>The custom values required for authentication, other than user name and password.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.IsPersistent">
      <summary>Gets a value that indicates whether the authentication cookie should be retained beyond the current session.</summary>
      <returns>true if the cookie should be retained beyond the current session; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.Password">
      <summary>Gets the password for the user.</summary>
      <returns>The password that is provided by the user for authentication.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.UserName">
      <summary>Gets the name for the user.</summary>
      <returns>The name that is provided by the user for authentication.</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.KnownTypesProvider">
      <summary>Creates an array of <see cref="T:System.Type" /> objects that contain the types of individual profile properties.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.KnownTypesProvider.GetKnownTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Creates an array of <see cref="T:System.Type" /> objects that contain the types of individual profile properties.</summary>
      <returns>An array of types of individual profile properties.</returns>
      <param name="knownTypeAttributeTarget">A provider object.</param>
    </member>
    <member name="T:System.Web.ApplicationServices.ProfilePropertyMetadata">
      <summary>Provides a collection of values that describe a profile property. </summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfilePropertyMetadata.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ApplicationServices.ProfilePropertyMetadata" /> class. </summary>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.AllowAnonymousAccess">
      <summary>Gets or sets a value that indicates whether the property is available to unauthenticated users.</summary>
      <returns>true if the property is available to unauthenticated users; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.DefaultValue">
      <summary>Gets or sets the default value of the property.</summary>
      <returns>A serialized representation of the default value for the property, if a default value is defined in the Web.config file; otherwise the string "(null)".</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.IsReadOnly">
      <summary>Gets or sets a value that indicates whether a profile property is read-only.</summary>
      <returns>true if the profile property is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.PropertyName">
      <summary>Gets or sets the name of the profile property.</summary>
      <returns>The name of the profile property as defined in the Web.config file.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.SerializeAs">
      <summary>Gets or sets a value that indicates how to serialize the property value.</summary>
      <returns>The enumeration value.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.TypeName">
      <summary>Gets or sets the assembly-qualified name of the profile property type. </summary>
      <returns>The assembly-qualified name of the profile property type.</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.ProfileService">
      <summary>Enables access to ASP.NET user profiles through a Web service.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(System.Boolean)">
      <summary>Retrieves all the profile properties and values that are available to the profile service for the current user.</summary>
      <returns>The profile properties and values.</returns>
      <param name="authenticatedUserOnly">A value that indicates whether properties are returned only for users who have been authenticated.</param>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>Retrieves the specified profile properties and values for the current user.</summary>
      <returns>The profile property information and values.</returns>
      <param name="properties">A collection of string values that contains the names of the profile properties to retrieve.</param>
      <param name="authenticatedUserOnly">A value that indicates whether properties are returned only for users who have been authenticated.</param>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata">
      <summary>Retrieves information about the profile properties that are available through the profile service.</summary>
      <returns>An array of <see cref="T:System.Web.ApplicationServices.ProfilePropertyMetadata" /> objects that contain information about the profile properties.</returns>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Sets the values of the specified properties in the user profile.</summary>
      <returns>The properties that were not set for the user profile, if any.</returns>
      <param name="values">A collection that contains names and values of the profile properties to set. </param>
      <param name="authenticatedUserOnly">A value that indicates whether properties are set only for users who have been authenticated. </param>
    </member>
    <member name="E:System.Web.ApplicationServices.ProfileService.ValidatingProperties">
      <summary>Occurs when a user's profile properties are set. </summary>
    </member>
    <member name="T:System.Web.ApplicationServices.RoleService">
      <summary>Enables access to the ASP.NET role provider as a WCF Web service. </summary>
    </member>
    <member name="M:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser">
      <summary>Returns all the roles for the logged-in user.</summary>
      <returns>An array of the names of the roles that the user belongs to.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)">
      <summary>Determines whether the logged-in user belongs to the specified role.</summary>
      <returns>true if the user is in the specified role; otherwise, false.</returns>
      <param name="role">The name of the role to check.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="role" /> is null or the user is not logged in.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="E:System.Web.ApplicationServices.RoleService.SelectingProvider">
      <summary>Occurs when a <see cref="T:System.Web.ApplicationServices.RoleService" /> instance determines which role provider to use for checking the user's roles.</summary>
    </member>
    <member name="T:System.Web.ApplicationServices.SelectingProviderEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ApplicationServices.RoleService.SelectingProvider" /> event.</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.SelectingProviderEventArgs.ProviderName">
      <summary>Gets or sets the role provider to use for retrieving the user's roles.</summary>
      <returns>The name of the role provider that is used to get the user's roles.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.SelectingProviderEventArgs.User">
      <summary>Gets the authenticated user.</summary>
      <returns>An object that contains the authenticated user.</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.ValidatingPropertiesEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ApplicationServices.ProfileService.ValidatingProperties" /> event. </summary>
    </member>
    <member name="P:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties">
      <summary>Gets the collection that contains profile properties that have failed validation. </summary>
      <returns>The profile properties that have failed validation.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.Properties">
      <summary>Gets the collection of names and values of the profile properties to validate.</summary>
      <returns>The names and values of the profile properties to validate.</returns>
    </member>
    <member name="T:System.Web.ClientServices.ClientFormsIdentity">
      <summary>Represents a user identity authenticated for client application services by using forms authentication. </summary>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> class. </summary>
      <param name="name">The name of the authenticated user.</param>
      <param name="password">The password of the authenticated user.</param>
      <param name="provider">The membership provider used to authenticate the user. </param>
      <param name="authenticationType">The type of authentication that is used.</param>
      <param name="isAuthenticated">true if the user has been authenticated; otherwise, false.</param>
      <param name="authenticationCookies">The cookies retrieved from the authentication service. </param>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies">
      <summary>Gets a collection of the cookies retrieved from the authentication service. </summary>
      <returns>The cookies retrieved from the authentication service.</returns>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType">
      <summary>Gets the type of authentication that is used to authenticate the user.</summary>
      <returns>The type of authentication that is used to authenticate the user. </returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />. </summary>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated">
      <summary>Gets a value indicating whether the user has been authenticated. </summary>
      <returns>true if the user has been authenticated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.Name">
      <summary>Gets the name of the user.</summary>
      <returns>The name of the user.</returns>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.Provider">
      <summary>Gets the membership provider that is used to authenticate the user.</summary>
      <returns>The membership provider that is used to authenticate the user. </returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser">
      <summary>Silently authenticates the user by using cached credentials. </summary>
    </member>
    <member name="T:System.Web.ClientServices.ClientRolePrincipal">
      <summary>Represents security information for client application services, which includes role information.</summary>
    </member>
    <member name="M:System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> class. </summary>
      <param name="identity">Represents the current user.</param>
    </member>
    <member name="P:System.Web.ClientServices.ClientRolePrincipal.Identity">
      <summary>Gets the security identity associated with the <see cref="T:System.Web.ClientServices.ClientRolePrincipal" />.</summary>
      <returns>Represents the current user. </returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)">
      <summary>Gets a value indicating whether the user represented by the <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> is in the specified role.</summary>
      <returns>true if the user is in the specified role; false if the user is not in the specified role or is not authenticated.</returns>
      <param name="role">The role to check. </param>
    </member>
    <member name="T:System.Web.ClientServices.ConnectivityStatus">
      <summary>Represents the status of an application's network connection.</summary>
    </member>
    <member name="P:System.Web.ClientServices.ConnectivityStatus.IsOffline">
      <summary>Gets or sets a value indicating whether an application is in offline mode.</summary>
      <returns>true if the application is in offline mode; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials">
      <summary>Represents user login information for forms authentication by using client application services.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials" /> class. </summary>
      <param name="username">The user name.</param>
      <param name="password">The user password.</param>
      <param name="rememberMe">A value indicating whether the user credentials should be saved and reused for subsequent login attempts.</param>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.Password">
      <summary>Gets or sets the user password.</summary>
      <returns>The user password.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.RememberMe">
      <summary>Gets or sets a value indicating whether the user credentials should be saved and reused for subsequent login attempts. </summary>
      <returns>true if the credentials should be saved and reused; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.UserName">
      <summary>Gets or sets the user name. </summary>
      <returns>The user name.</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider">
      <summary>Enables forms authentication with client application services.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" /> class. </summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ApplicationName">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="oldPassword">Not used.</param>
      <param name="newPassword">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="password">Not used.</param>
      <param name="newPasswordQuestion">Not used.</param>
      <param name="newPasswordAnswer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="password">Not used.</param>
      <param name="email">Not used.</param>
      <param name="passwordQuestion">Not used.</param>
      <param name="passwordAnswer">Not used.</param>
      <param name="isApproved">Not used.</param>
      <param name="providerUserKey">Not used.</param>
      <param name="status">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="deleteAllRelatedData">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.EnablePasswordReset">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.EnablePasswordRetrieval">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="emailToMatch">Not used.</param>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="usernameToMatch">Not used.</param>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used. This parameter is passed uninitialized.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used. This parameter is passed uninitialized.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetNumberOfUsersOnline">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetPassword(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="answer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="providerUserKey">Not used.</param>
      <param name="userIsOnline">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="userIsOnline">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetUserNameByEmail(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="email">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the provider.</summary>
      <param name="name">The friendly name of the provider.</param>
      <param name="config">A collection of name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.-or-<paramref name="config" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is empty.-or-<paramref name="config" /> contains an unrecognized value. For more information, see the Remarks section.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" /> has already been initialized.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout">
      <summary>Logs out the user.</summary>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the membership provider is unable to access the authentication service.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.MaxInvalidPasswordAttempts">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary>This property is not used by this class.</summary>
      <returns>Always zero.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.MinRequiredPasswordLength">
      <summary>This property is not used by this class.</summary>
      <returns>Always one.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.PasswordAttemptWindow">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.PasswordFormat">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.PasswordStrengthRegularExpression">
      <summary>This property is not used by this class.</summary>
      <returns>Always "*".</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.RequiresQuestionAndAnswer">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.RequiresUniqueEmail">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ResetPassword(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="answer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ServiceUri">
      <summary>Gets or sets the URI of the authentication service.</summary>
      <returns>The authentication service URI.</returns>
      <exception cref="T:System.ArgumentException">When getting this property, no service URI was found in the application configuration file, and this property has not been previously set. </exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UnlockUser(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>This method is not used by this class.</summary>
      <param name="user">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="E:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UserValidated">
      <summary>Occurs when the user is validated. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ValidateUser(System.String,System.String)">
      <summary>Authenticates a user by using the specified user name and password.</summary>
      <returns>true if the user was authenticated; otherwise, false.</returns>
      <param name="username">The name of the user to authenticate, or <see cref="F:System.String.Empty" /> or null to retrieve credentials from the <see cref="T:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider" /> implementation that this application is configured to use.</param>
      <param name="password">The password of the user to authenticate.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the membership provider is unable to access the authentication service.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ValidateUser(System.String,System.String,System.Boolean)">
      <summary>Authenticates a user by using the specified user name and password, optionally storing a hash of the password in the local data cache.</summary>
      <returns>true if the user was authenticated; otherwise, false.</returns>
      <param name="username">The name of the user to authenticate.</param>
      <param name="password">The password of the user to authenticate.</param>
      <param name="rememberMe">true to store a hash of the password in the local data cache for offline use and for automatic reauthentication when the user authentication cookie expires; false to disable offline login or to require users to reauthenticate when the cookie expires.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the membership provider is unable to access the authentication service.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ValidateUser(System.String,System.String,System.String)">
      <summary>Authenticates a user at the specified service URI by using the specified user name and password.</summary>
      <returns>true if the user was authenticated; otherwise, false.</returns>
      <param name="username">The name of the user to authenticate.</param>
      <param name="password">The password of the user to authenticate.</param>
      <param name="serviceUri">The URI of the authentication service to use.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the membership provider is unable to access the authentication service.</exception>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientRoleProvider">
      <summary>Gets role information for Windows-based applications from an ASP.NET AJAX roles service.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> class. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])">
      <summary>This method is not used by this class.</summary>
      <param name="usernames">Not used.</param>
      <param name="roleNames">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)">
      <summary>This method is not used by this class.</summary>
      <param name="roleName">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception. </returns>
      <param name="roleName">Not used.</param>
      <param name="throwOnPopulatedRole">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception. </returns>
      <param name="roleName">Not used.</param>
      <param name="usernameToMatch">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)">
      <summary>Gets the names of the roles that the specified user belongs to.</summary>
      <returns>The role names that <paramref name="username" /> belongs to or an empty array if the user is not authenticated.</returns>
      <param name="username">The name of the user to retrieve roles for. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is <see cref="F:System.String.Empty" /> or null.-or-<paramref name="username" /> is not the user name of the current, authenticated user. </exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="roleName">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the provider. </summary>
      <param name="name">The friendly name of the provider.</param>
      <param name="config">A collection of name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.-or-<paramref name="config" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is empty.-or-<paramref name="config" /> contains an unrecognized value. For more information, see the Remarks section.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> has already been initialized.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="config" /> contains a cacheTimeout value that is not in the correct format for conversion to an <see cref="T:System.Int32" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="config" /> contains a cacheTimeout value that represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)">
      <summary>Gets a value indicating whether the specified user is in the specified role.</summary>
      <returns>true if the specified user is in the specified role; false if the specified user is not authenticated or is not in the specified role. </returns>
      <param name="username">The name of the user.</param>
      <param name="roleName">The name of the role.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is <see cref="F:System.String.Empty" /> or null.-or-<paramref name="username" /> is not the user name of the current, authenticated user. </exception>
      <exception cref="T:System.Net.WebException">The user is no longer authenticated.-or-The roles service is not available.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
      <summary>This method is not used by this class.</summary>
      <param name="usernames">Not used.</param>
      <param name="roleNames">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache">
      <summary>Clears the cached role information and resets the cache time-out period.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="roleName">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri">
      <summary>Gets or sets the URI of the role service. </summary>
      <returns>The role service URI.</returns>
      <exception cref="T:System.ArgumentException">When getting this property, no service URI was found in the application configuration file, and this property has not been previously set. </exception>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientSettingsProvider">
      <summary>Enables Windows-based applications to retrieve user settings from a Web settings service.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientSettingsProvider" /> class. </summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ApplicationName">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>Gets the previous version of the specified property.</summary>
      <returns>Represents the previous version of the specified property.</returns>
      <param name="context">This parameter is not used by this method.</param>
      <param name="property">Represents the property to get the previous version of.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the Web settings service at the <see cref="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri" /> location is unavailable.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.GetPropertyMetadata(System.String)">
      <summary>Gets a collection of metadata for all properties retrieved from the specified Web settings service.</summary>
      <returns>The property metadata.</returns>
      <param name="serviceUri">The Web settings service to retrieve property metadata from.</param>
      <exception cref="T:System.Net.WebException">The Web settings service at the <see cref="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri" /> location is unavailable.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</returns>
      <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application use.</param>
      <param name="propertyCollection"></param>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the provider.</summary>
      <param name="name">The friendly name of the provider.</param>
      <param name="config">A collection of name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is <see cref="F:System.String.Empty" />.-or-<paramref name="config" /> contains an unrecognized value. For more information, see the Remarks section.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> has already been initialized.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>Resets all user settings to their default values.</summary>
      <param name="context">This parameter is not used by this method.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the Web settings service at the <see cref="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri" /> location is unavailable.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri">
      <summary>Gets or sets the Web settings service location.</summary>
      <returns>The URI of the Web settings service.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
      <param name="propertyValueCollection"></param>
    </member>
    <member name="E:System.Web.ClientServices.Providers.ClientSettingsProvider.SettingsSaved">
      <summary>Occurs after the settings provider attempts to save the property values to the Web settings service.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>This method is not used by this class.</summary>
      <param name="context">Not used.</param>
      <param name="properties">Not used.</param>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider">
      <summary>Enables Windows authentication with client application services.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" /> class. </summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ApplicationName">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="oldPassword">Not used.</param>
      <param name="newPassword">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="password">Not used.</param>
      <param name="newPasswordQuestion">Not used.</param>
      <param name="newPasswordAnswer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="password">Not used.</param>
      <param name="email">Not used.</param>
      <param name="passwordQuestion">Not used.</param>
      <param name="passwordAnswer">Not used.</param>
      <param name="isApproved">Not used.</param>
      <param name="providerUserKey">Not used.</param>
      <param name="status">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="deleteAllRelatedData">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.EnablePasswordReset">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.EnablePasswordRetrieval">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="emailToMatch">Not used.</param>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="usernameToMatch">Not used.</param>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetNumberOfUsersOnline">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetPassword(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="answer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="providerUserKey">Not used.</param>
      <param name="userIsOnline">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="userIsOnline">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetUserNameByEmail(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="email">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.Logout">
      <summary>Logs out the user.</summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.MaxInvalidPasswordAttempts">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary>This property is not used by this class.</summary>
      <returns>Always zero.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.MinRequiredPasswordLength">
      <summary>This property is not used by this class.</summary>
      <returns>Always one.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.PasswordAttemptWindow">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.PasswordFormat">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.PasswordStrengthRegularExpression">
      <summary>This property is not used by this class.</summary>
      <returns>Always "*".</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.RequiresQuestionAndAnswer">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.RequiresUniqueEmail">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ResetPassword(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="answer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.UnlockUser(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>This method is not used by this class.</summary>
      <param name="user">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ValidateUser(System.String,System.String)">
      <summary>Automatically authenticates the current user by using the identity supplied by the operating system.</summary>
      <returns>Always true.</returns>
      <param name="username">Must be <see cref="F:System.String.Empty" /> or null.</param>
      <param name="password">Must be <see cref="F:System.String.Empty" /> or null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is not <see cref="F:System.String.Empty" /> or null.-or-<paramref name="password" /> is not <see cref="F:System.String.Empty" /> or null.</exception>
    </member>
    <member name="T:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider">
      <summary>Defines a method that the <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" /> class calls to retrieve user credentials. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials">
      <summary>Retrieves user credentials.</summary>
      <returns>The user login information.</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.SettingsSavedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ClientServices.Providers.ClientSettingsProvider.SettingsSaved" /> event. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.SettingsSavedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.SettingsSavedEventArgs" /> class. </summary>
      <param name="failedSettingsList">The settings that the settings provider was unable to save.</param>
    </member>
    <member name="P:System.Web.ClientServices.Providers.SettingsSavedEventArgs.FailedSettingsList">
      <summary>Gets the settings that the <see cref="T:System.Web.ClientServices.Providers.ClientSettingsProvider" /> was unable to save to the server. </summary>
      <returns>The settings that were not saved.</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.UserValidatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UserValidated" /> event. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.UserValidatedEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.UserValidatedEventArgs" /> class. </summary>
      <param name="username">The user name of the validated user.</param>
    </member>
    <member name="P:System.Web.ClientServices.Providers.UserValidatedEventArgs.UserName">
      <summary>Gets the user name of the validated user.</summary>
      <returns>The user name of the validated user. </returns>
    </member>
    <member name="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation">
      <summary>Defines the interface to implement to obtain additional context information.</summary>
    </member>
    <member name="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)">
      <summary>Gets additional context information.</summary>
      <param name="serviceReferenceExtensionFileContents">Provides the content of any extension files that are associated with the .svcmap file of a WCF service reference.</param>
      <param name="serviceProvider">A reference to a Visual Studio service provider to be queried for additional information.</param>
    </member>
    <member name="T:System.Web.Compilation.WCFBuildProvider">
      <summary>Generates proxy class code for Windows Communication Foundation (WCF) services </summary>
    </member>
    <member name="M:System.Web.Compilation.WCFBuildProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Compilation.WCFBuildProvider" /> class. </summary>
    </member>
    <member name="M:System.Web.Compilation.WCFBuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)">
      <summary>Generates the service proxy class source code and adds it to the specified assembly builder.</summary>
      <param name="assemblyBuilder">An instance of the <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object that the generated proxy code must be added to. This instance is provided by ASP.NET at run time.</param>
    </member>
    <member name="T:System.Web.Configuration.Converter">
      <summary>Represents a configuration element in a configuration file.</summary>
    </member>
    <member name="M:System.Web.Configuration.Converter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.Converter" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.Converter.Name">
      <summary>Gets or sets the unique identifier for the converter.</summary>
      <returns>The unique identifier for the converter.</returns>
    </member>
    <member name="P:System.Web.Configuration.Converter.Properties">
      <summary>Gets a collection of configuration-element properties.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.Converter.Type">
      <summary>Gets or sets the fully qualified type name of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> object.</summary>
      <returns>The fully qualified type name of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> object.</returns>
    </member>
    <member name="T:System.Web.Configuration.ConvertersCollection">
      <summary>Represents a configuration collection that contains references to <see cref="T:System.Web.Configuration.Converter" /> objects.</summary>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ConvertersCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.Add(System.Web.Configuration.Converter)">
      <summary>Adds a <see cref="T:System.Web.Configuration.Converter" /> object to the <see cref="T:System.Web.Configuration.ConvertersCollection" /> instance.</summary>
      <param name="converter">A string value that specifies the <see cref="T:System.Web.Configuration.Converter" /> reference.</param>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.Converter" /> objects from a <see cref="T:System.Web.Configuration.ConvertersCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.CreateNewElement">
      <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
      <returns>A new <see cref="T:System.Configuration.ConfigurationElement" /> object.</returns>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for the specified <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
      <returns>The object acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" /> instance.</returns>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> object whose key you want to return.</param>
    </member>
    <member name="P:System.Web.Configuration.ConvertersCollection.Item(System.Int32)">
      <summary>Gets or sets an item in the <see cref="T:System.Web.Configuration.ConvertersCollection" /> collection.</summary>
      <returns>The <see cref="T:System.Web.Configuration.Converter" /> object at the specified index.</returns>
      <param name="index">A <see cref="T:System.Web.Configuration.Converter" /> collection index.</param>
    </member>
    <member name="P:System.Web.Configuration.ConvertersCollection.Properties">
      <summary>Gets a collection of configuration-element properties.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> object that contains configuration-element properties.</returns>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.Remove(System.Web.Configuration.Converter)">
      <summary>Removes the specified converter from the <see cref="T:System.Web.Configuration.ConvertersCollection" /> object.</summary>
      <param name="converter">The name of the converter to remove.</param>
    </member>
    <member name="T:System.Web.Configuration.ScriptingAuthenticationServiceSection">
      <summary>Represents the configuration section for authentication service settings. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingAuthenticationServiceSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingAuthenticationServiceSection.Enabled">
      <summary>Gets or sets a value that indicates whether the authentication service is enabled for an application that uses AJAX features of ASP.NET.</summary>
      <returns>true if the authentication service is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingAuthenticationServiceSection.RequireSSL">
      <summary>Gets or sets a value that indicates whether the authentication service requires an SSL-secured connection.</summary>
      <returns>true if the authentication service requires Secure Sockets Layer (SSL); otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingJsonSerializationSection">
      <summary>Represents a jsonSerialization configuration section in the scripting element of the configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingJsonSerializationSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingJsonSerializationSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingJsonSerializationSection.Converters">
      <summary>Gets a <see cref="T:System.Web.Configuration.ConvertersCollection" /> object that contains a collection of <see cref="T:System.Web.Configuration.Converter" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ConvertersCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength">
      <summary>Gets or sets the maximum length that is accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> object for JavaScript Object Notation (JSON) strings.</summary>
      <returns>An integer that represents the maximum length for JSON strings. The default is 102400 characters.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit">
      <summary>Gets or sets the limit for constraining the number of object levels to process.</summary>
      <returns>The number of object levels. The default is 100.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than one.</exception>
    </member>
    <member name="T:System.Web.Configuration.ScriptingProfileServiceSection">
      <summary>Represents the configuration section for profile-service settings. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingProfileServiceSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingProfileServiceSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingProfileServiceSection.Enabled">
      <summary>Gets or sets a value that indicates whether the profile service is available in the AJAX-enabled ASP.NET application.</summary>
      <returns>true if the profile service is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties">
      <summary>Gets or sets the read-access profile properties.</summary>
      <returns>An array that contains the names of the read-access profile properties.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties">
      <summary>Gets or sets the write-access profile properties.</summary>
      <returns>An array that contains the names of the write-access profile properties.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingRoleServiceSection">
      <summary>Represents the configuration section for role-service settings.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingRoleServiceSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingRoleServiceSection" /> class. </summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingRoleServiceSection.Enabled">
      <summary>Gets or sets a value that indicates whether the role service is enabled for an ASP.NET application that uses AJAX features.</summary>
      <returns>true if the role service is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection">
      <summary>Represents a ScriptingScriptResourceHandler configuration section in the &lt;scripting&gt; element of the configuration file. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingScriptResourceHandlerSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching">
      <summary>Gets or sets whether caching is enabled for script files that are embedded as resources in an assembly.</summary>
      <returns>true if caching is enabled for script files that are embedded as resources in an assembly; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression">
      <summary>Gets or sets whether compression is enabled for script files that are embedded as resources in an assembly.</summary>
      <returns>true if compression is enabled for script files that are embedded as resources in an assembly; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingSectionGroup">
      <summary>Represents the configuration section for scripting settings. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingSectionGroup" /> class. </summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingSectionGroup.ScriptResourceHandler">
      <summary>Gets a <see cref="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" /> object that is derived from the current system configuration.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingSectionGroup.WebServices">
      <summary>Gets a <see cref="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" /> object that is derived from the current system configuration.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" /> object.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingWebServicesSectionGroup">
      <summary>Represents a group of related sections in a configuration file.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingWebServicesSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.AuthenticationService">
      <summary>Gets the authenticationService section that is contained in the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.JsonSerialization">
      <summary>Gets the jsonSerialization section that is contained in the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingJsonSerializationSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.ProfileService">
      <summary>Gets the profileService section that is contained in the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingProfileServiceSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.RoleService">
      <summary>Gets the roleService section that is contained in the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingRoleServiceSection" /> object.</returns>
    </member>
    <member name="T:System.Web.Configuration.SystemWebExtensionsSectionGroup">
      <summary>Represents a group of related sections in a configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.SystemWebExtensionsSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SystemWebExtensionsSectionGroup" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.SystemWebExtensionsSectionGroup.Scripting">
      <summary>Gets a <see cref="T:System.Web.Configuration.ScriptingSectionGroup" /> object that is derived from the current system configuration.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingSectionGroup" /> object.</returns>
    </member>
    <member name="T:System.Web.Handlers.ScriptModule">
      <summary>Manages HTTP modules for AJAX functionality in ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Handlers.ScriptModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.Dispose">
      <summary>Releases the resources (other than memory) used by the module.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.Init(System.Web.HttpApplication)">
      <summary>Initializes a module and prepares it to handle requests.</summary>
      <param name="context">An <see cref="T:System.Web.HttpApplication" /> object that provides access to the methods, properties, and events that are common to all applications within an ASP.NET application.</param>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.System#Web#IHttpModule#Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
      <summary>Initializes the module and prepares it to handle requests.</summary>
      <param name="context">An <see cref="T:System.Web.HttpApplication" /> that provides access to the methods, properties, and events common to all application objects within an ASP.NET application.</param>
    </member>
    <member name="T:System.Web.Handlers.ScriptResourceHandler">
      <summary>Provides an HTTP handler for processing requests for script files that are embedded as resources in an assembly. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptResourceHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Handlers.ScriptResourceHandler" /> class.</summary>
    </member>
    <member name="P:System.Web.Handlers.ScriptResourceHandler.IsReusable">
      <summary>When overridden in a derived class, gets a value that indicates whether another request can use the instance of the class.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="M:System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>When overridden in a derived class, processes HTTP Web requests for a script file that is embedded as a resource in an assembly.</summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) that are used to service HTTP requests.</param>
    </member>
    <member name="P:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Gets a value that indicates whether another request can use the <see cref="T:System.Web.IHttpHandler" /> instance.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="M:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Processes HTTP Web requests for a script file that is embedded as a resource in an assembly.</summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) that are used to service HTTP requests.</param>
      <exception cref="T:System.Web.HttpException">The type names for the debug and release versions of the embedded script do not match.</exception>
    </member>
    <member name="T:System.Web.Management.WebServiceErrorEvent">
      <summary>Defines the event that contains information about Web service errors.</summary>
    </member>
    <member name="M:System.Web.Management.WebServiceErrorEvent.#ctor(System.String,System.Object,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebServiceErrorEvent" /> class by using the specified event parameters.</summary>
      <param name="message">The event description.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="exception">The exception that is associated with the error.</param>
    </member>
    <member name="P:System.Web.Management.WebServiceErrorEvent.WebServiceErrorEventCode">
      <summary>Gets the code number that is associated with the current error event.</summary>
      <returns>The code number that is associated with this event. For information about event codes, see <see cref="T:System.Web.Management.WebEventCodes" />.</returns>
    </member>
    <member name="T:System.Web.Query.Dynamic.DynamicClass">
      <summary>Provides functionality to create new classes from values in a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.Query.Dynamic.DynamicClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Query.Dynamic.DynamicClass" /> class. </summary>
    </member>
    <member name="M:System.Web.Query.Dynamic.DynamicClass.ToString">
      <summary>Returns a string representation of the dynamic class.</summary>
      <returns>A string that represents the dynamic class and its properties.</returns>
    </member>
    <member name="T:System.Web.Query.Dynamic.ParseException">
      <summary>Represents errors that occur when a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control parses values to create a query.</summary>
    </member>
    <member name="M:System.Web.Query.Dynamic.ParseException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Query.Dynamic.ParseException" /> class.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="position">The location of the error.</param>
    </member>
    <member name="P:System.Web.Query.Dynamic.ParseException.Position">
      <summary>Gets the location of the error.</summary>
      <returns>The location where the exception occurred. </returns>
    </member>
    <member name="M:System.Web.Query.Dynamic.ParseException.ToString">
      <summary>Returns the error message and the location of the error.</summary>
      <returns>The message and the position of the error. </returns>
    </member>
    <member name="T:System.Web.Script.Serialization.JavaScriptConverter">
      <summary>Provides an abstract base class for a custom type converter.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
      <summary>When overridden in a derived class, converts the provided dictionary into an object of the specified type.</summary>
      <returns>The deserialized object.</returns>
      <param name="dictionary">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</param>
      <param name="type">The type of the resulting object.</param>
      <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</param>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
      <summary>When overridden in a derived class, builds a dictionary of name/value pairs.</summary>
      <returns>An object that contains key/value pairs that represent the object’s data.</returns>
      <param name="obj">The object to serialize.</param>
      <param name="serializer">The object that is responsible for the serialization.</param>
    </member>
    <member name="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
      <summary>When overridden in a derived class, gets a collection of the supported types.</summary>
      <returns>An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</returns>
    </member>
    <member name="T:System.Web.Script.Serialization.JavaScriptSerializer">
      <summary>Provides serialization and deserialization functionality for AJAX-enabled applications.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has no type resolver.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has a custom type resolver.</summary>
      <param name="resolver">The custom type-resolver object.</param>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
      <summary>Converts the given object to the specified type.</summary>
      <returns>The object that has been converted to the target type.</returns>
      <param name="obj">The object to convert.</param>
      <typeparam name="T">The type to which <paramref name="obj" /> will be converted.</typeparam>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.-or- <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.-or- <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).-or- An attempt was made to convert <paramref name="obj" /> to an array-like managed type, which is not supported for use as a deserialization target. -or- It is not possible to convert <paramref name="obj" /> to <paramref name="T" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> is a dictionary type and a non-string key value was encountered. -or- <paramref name="obj" /> includes member definitions that are not available on type <paramref name="T" />. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
      <summary>Converts the specified JSON string to an object of type <paramref name="T" />.</summary>
      <returns>The deserialized object.</returns>
      <param name="input">The JSON string to be deserialized.</param>
      <typeparam name="T">The type of the resulting object.</typeparam>
      <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. -or- <paramref name="input" /> contains an unexpected character sequence. -or- <paramref name="input" /> is a dictionary type and a non-string key value was encountered. -or- <paramref name="input" /> includes member definitions that are not available on type <paramref name="T" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type. -or- <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type. -or- <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract types or an interface). -or- An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target. -or- It is not possible to convert <paramref name="input" /> to <paramref name="T" />. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
      <summary>Converts the specified JSON string to an object graph.</summary>
      <returns>The deserialized object.</returns>
      <param name="input">The JSON string to be deserialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. -or- <paramref name="input" /> contains an unexpected character sequence. -or- <paramref name="input" /> is a dictionary type and a non-string key value was encountered. -or- <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type. -or- <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type. -or- <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).-or- An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target. -or- It is not possible to convert <paramref name="input" /> to the target type. </exception>
    </member>
    <member name="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
      <summary>Gets or sets the maximum length of JSON strings that are accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
      <returns>The maximum length of JSON strings. The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
    </member>
    <member name="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
      <summary>Gets or sets the limit for constraining the number of object levels to process.</summary>
      <returns>The number of object levels. The default is 100.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
      <summary>Registers a custom converter with the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance. </summary>
      <param name="converters">An array that contains the custom converters to be registered.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="converters" /> is null. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
      <summary>Converts an object to a JSON string.</summary>
      <returns>The serialized JSON string.</returns>
      <param name="obj">The object to serialize.</param>
      <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object. </exception>
      <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
      <summary>Serializes an object and writes the resulting JSON string to the specified <see cref="T:System.Text.StringBuilder" /> object.</summary>
      <param name="obj">The object to serialize.</param>
      <param name="output">The <see cref="T:System.Text.StringBuilder" /> object that is used to write the JSON string.</param>
      <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object. </exception>
      <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> is null.</exception>
    </member>
    <member name="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
      <summary>Provides the abstract base class for implementing a custom type resolver.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> class.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)">
      <summary>When overridden in a derived class, returns the <see cref="T:System.Type" /> object that is associated with the specified type name.</summary>
      <returns>The <see cref="T:System.Type" /> object that is associated with the specified type name.</returns>
      <param name="id">The name of the managed type.</param>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)">
      <summary>When overridden in a derived class, returns the type name for the specified <see cref="T:System.Type" /> object.</summary>
      <returns>The name of the specified managed type.</returns>
      <param name="type">The managed type to be resolved.</param>
    </member>
    <member name="T:System.Web.Script.Serialization.ScriptIgnoreAttribute">
      <summary>Specifies that <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> will not serialize the public property or public field. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.ScriptIgnoreAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.Script.Serialization.SimpleTypeResolver">
      <summary>Provides a type resolver for managed types.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.SimpleTypeResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.SimpleTypeResolver" /> class.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)">
      <summary>Returns the <see cref="T:System.Type" /> of the specified name.</summary>
      <returns>A <see cref="T:System.Type" /> object that has the specified name, if found; otherwise, null.</returns>
      <param name="id">The assembly-qualified name of the managed type.</param>
    </member>
    <member name="M:System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)">
      <summary>Returns the assembly-qualified name of the specified <see cref="T:System.Type" />.</summary>
      <returns>A string that contains the assembly-qualified name of the specified type.</returns>
      <param name="type">The type to be resolved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="T:System.Web.Script.Services.GenerateScriptTypeAttribute">
      <summary>Specifies that the server type must be generated in the proxy object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> class for the specified type.</summary>
      <param name="type">The type to include in the proxy class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="P:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId">
      <summary>Gets or sets the type identifier for the type metadata marker.</summary>
      <returns>The type identifier for the type metadata marker on the serialized JavaScript Object Notation (JSON) string. The default value is the assembly-qualified name of the type.</returns>
    </member>
    <member name="P:System.Web.Script.Services.GenerateScriptTypeAttribute.Type">
      <summary>Gets the type that is included in the proxy object.</summary>
      <returns>The type object that is included in the generated proxy object.</returns>
    </member>
    <member name="T:System.Web.Script.Services.ProxyGenerator">
      <summary>Represents a proxy code generator.</summary>
    </member>
    <member name="M:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean)">
      <summary>Retrieves the proxy generation code for the specified type.</summary>
      <returns>The proxy generation code.</returns>
      <param name="type">The type of the object to obtain the script for.</param>
      <param name="path">The location of the endpoint.</param>
      <param name="debug">true to include XML code comments; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> or <paramref name="path" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The specified type is not supported for proxy generation.</exception>
    </member>
    <member name="T:System.Web.Script.Services.ResponseFormat">
      <summary>Specifies how the Web method return-type is serialized.</summary>
    </member>
    <member name="F:System.Web.Script.Services.ResponseFormat.Json">
      <summary>The return type is serialized as JavaScript Object Notation (JSON).</summary>
    </member>
    <member name="F:System.Web.Script.Services.ResponseFormat.Xml">
      <summary>The return type is serialized as XML.</summary>
    </member>
    <member name="T:System.Web.Script.Services.ScriptMethodAttribute">
      <summary>Specifies which HTTP verb is used to invoke a method, and the format of the response. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Script.Services.ScriptMethodAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Services.ScriptMethodAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat">
      <summary>Gets or sets the format of the method response.</summary>
      <returns>One of the <see cref="T:System.Web.Script.Services.ResponseFormat" /> values. The default is Json.</returns>
    </member>
    <member name="P:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet">
      <summary>Gets or sets a value that indicates whether to invoke the method by using HTTP GET.</summary>
      <returns>true if the method is invoked by using the HTTP GET command; false if the method is invoked by using the HTTP POST command. The default is false.</returns>
    </member>
    <member name="P:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString">
      <summary>Gets or sets a value that indicates whether all return types are serialized as XML, which includes string types.</summary>
      <returns>true if all return types are serialized as XML; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Script.Services.ScriptServiceAttribute">
      <summary>Indicates that a Web service can be invoked from script. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Script.Services.ScriptServiceAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Services.ScriptServiceAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.AsyncPostBackErrorEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackErrorEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.AsyncPostBackErrorEventArgs" /> class.</summary>
      <param name="exception">The server exception raised during partial-page rendering.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="exception" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.AsyncPostBackErrorEventArgs.Exception">
      <summary>Gets the <see cref="T:System.Exception" /> raised during partial-page rendering.</summary>
      <returns>An <see cref="T:System.Exception" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.AsyncPostBackTrigger">
      <summary>Defines a control and optional event of the control as an asynchronous postback control trigger that causes an <see cref="T:System.Web.UI.UpdatePanel" /> control to refresh.</summary>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.#ctor">
      <summary>Initializes a new instance of an <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.AsyncPostBackTrigger.ControlID">
      <summary>Gets or sets the name of the control that triggers an asynchronous postback for an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>A server control ID.</returns>
    </member>
    <member name="P:System.Web.UI.AsyncPostBackTrigger.EventName">
      <summary>Gets or sets the postback control event that triggers an <see cref="T:System.Web.UI.UpdatePanel" /> control to be updated.</summary>
      <returns>The event name. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered">
      <summary>Returns a value that indicates whether the trigger was invoked.</summary>
      <returns>true if the trigger was invoked; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.Initialize">
      <summary>Initializes the <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control and determines whether the event that is named in the trigger exists and is valid.</summary>
      <exception cref="T:System.InvalidOperationException">No <see cref="T:System.Web.UI.ScriptManager" /> control was found on the page.- or -The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property is not found for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property.- or -The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property does not match a standard event handler signature. </exception>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)">
      <summary>Raises the event that will trigger a postback and refresh of an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <param name="sender">The event sender.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.ToString">
      <summary>Returns a string representation of the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</summary>
      <returns>A string that represents the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.AuthenticationServiceManager">
      <summary>Configures the location of a custom implementation of the authentication service.</summary>
    </member>
    <member name="M:System.Web.UI.AuthenticationServiceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.AuthenticationServiceManager.Path">
      <summary>Gets or sets the path of the authentication service.</summary>
      <returns>The path of the custom authentication Web service.</returns>
      <exception cref="T:System.ArgumentException">More than one unique path was set in the control hierarchy.</exception>
    </member>
    <member name="T:System.Web.UI.ExtenderControl">
      <summary>Provides an abstract base class for an extender control.</summary>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ExtenderControl" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.GetScriptDescriptors(System.Web.UI.Control)">
      <summary>When overridden in a derived class, registers the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control. </summary>
      <returns>An enumeration of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
      <param name="targetControl">The server control to which the extender is associated.</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.GetScriptReferences">
      <summary>When overridden in a derived class, registers the script libraries for the control.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface and that contains ECMAScript (JavaScript) files that have been registered as embedded resources.</returns>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> event and registers the extender control with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered in the browser window.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.System#Web#UI#IExtenderControl#GetScriptDescriptors(System.Web.UI.Control)">
      <summary>Registers the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control. This method is a private member and cannot be inherited.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface and that contains <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
      <param name="targetControl">The server control that the extender is associated with.</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.System#Web#UI#IExtenderControl#GetScriptReferences">
      <summary>Registers the script libraries for the control. This method is a private member and cannot be inherited.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface and that contains ECMAScript (JavaScript) files that have been registered as embedded resources.</returns>
    </member>
    <member name="P:System.Web.UI.ExtenderControl.TargetControlID">
      <summary>Gets or sets the ID of the control that the extender is associated with.</summary>
      <returns>The ID of the server control that is being extended. </returns>
    </member>
    <member name="P:System.Web.UI.ExtenderControl.Visible">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property to prevent setting this value.</summary>
      <returns>true if the extender control is rendered on the page; otherwise, false. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.IExtenderControl">
      <summary>Defines the behavior for an extender control.</summary>
    </member>
    <member name="M:System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)">
      <summary>Registers the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control and returns an object that contains the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
      <param name="targetControl">The server control that the extender is associated with.</param>
    </member>
    <member name="M:System.Web.UI.IExtenderControl.GetScriptReferences">
      <summary>Registers the script libraries for the control and returns an enumeration of ECMAScript (JavaScript) files that have been registered as embedded resources.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains JavaScript files that have been registered as embedded resources.</returns>
    </member>
    <member name="T:System.Web.UI.IScriptControl">
      <summary>Defines methods that ASP.NET server controls must implement to define ECMAScript (JavaScript) resources in AJAX-enabled applications.</summary>
    </member>
    <member name="M:System.Web.UI.IScriptControl.GetScriptDescriptors">
      <summary>Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.IScriptControl.GetScriptReferences">
      <summary>Gets a collection of <see cref="T:System.Web.UI.ScriptReference" /> objects that define script resources that the control requires.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptReference" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.PostBackTrigger">
      <summary>Defines a control inside a <see cref="T:System.Web.UI.UpdatePanel" /> control as a postback control.</summary>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PostBackTrigger" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.PostBackTrigger.ControlID">
      <summary>Gets or sets the name of the control that is an <see cref="T:System.Web.UI.PostBackTrigger" /> control for an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>A string that represents a server control ID.</returns>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.HasTriggered">
      <summary>Returns a value that indicates whether the trigger was activated.</summary>
      <returns>true if the trigger was activated; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.Initialize">
      <summary>Initializes the <see cref="T:System.Web.UI.PostBackTrigger" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Web.UI.PostBackTrigger" /> object.</summary>
      <returns>A string that represents the current <see cref="T:System.Web.UI.PostBackTrigger" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.ProfileServiceManager">
      <summary>Configures a set of preloaded profile properties and the location of a custom implementation of the profile service.</summary>
    </member>
    <member name="M:System.Web.UI.ProfileServiceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ProfileServiceManager" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.ProfileServiceManager.LoadProperties">
      <summary>Gets or sets an array that contains the profile properties that will be made available to client script.</summary>
      <returns>A string array that contains the names of the profile properties that will be preloaded and made available to client script. The default is an empty array.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.UI.ProfileServiceManager.LoadProperties" /> property includes property names that are not in the current application’s profile schema.</exception>
    </member>
    <member name="P:System.Web.UI.ProfileServiceManager.Path">
      <summary>Gets or sets the path of a custom implementation of the profile Web service.</summary>
      <returns>The path of a custom implementation of the profile Web service.</returns>
      <exception cref="T:System.ArgumentException">More than one unique path was set in the control hierarchy.</exception>
    </member>
    <member name="T:System.Web.UI.RegisteredArrayDeclaration">
      <summary>Provides access to an ECMAScript (JavaScript) array declaration that was previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredArrayDeclaration.Control">
      <summary>Gets the control that registered the array declaration.</summary>
      <returns>A reference to the control that registered the array.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredArrayDeclaration.Name">
      <summary>Gets the name of the array.</summary>
      <returns>The name of the array.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredArrayDeclaration.Value">
      <summary>Gets the value or values of the array members.</summary>
      <returns>The value or values of the array.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredDisposeScript">
      <summary>Provides access to a dispose script for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredDisposeScript.Control">
      <summary>Gets the control that registered the dispose script.</summary>
      <returns>A reference to the control that registered the dispose script.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredDisposeScript.Script">
      <summary>Gets the name of the dispose script.</summary>
      <returns>The name of the dispose script.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredExpandoAttribute">
      <summary>Provides access to the name/value pair of a custom (expando) attribute that was previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Control">
      <summary>Gets the control that registered the custom (expando) attribute.</summary>
      <returns>A reference to the control that registered the custom attribute.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.ControlId">
      <summary>Gets the identifier of the control that registered the custom (expando) attribute.</summary>
      <returns>The identifier of the control that registered the custom attribute.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Encode">
      <summary>Gets a value that indicates whether the custom (expando) attribute is encoded.</summary>
      <returns>true if the custom attribute is encoded; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Name">
      <summary>Gets the name of the custom (expando) attribute.</summary>
      <returns>The name of the custom attribute.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Value">
      <summary>Gets the value of the custom (expando) attribute.</summary>
      <returns>The value of the custom attribute.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredHiddenField">
      <summary>Provides access to a hidden value that was previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredHiddenField.Control">
      <summary>Gets the control that registered the hidden field.</summary>
      <returns>A reference to the control that registered the hidden field.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredHiddenField.InitialValue">
      <summary>Gets the initial value of the hidden field.</summary>
      <returns>The initial value of the hidden field.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredHiddenField.Name">
      <summary>Gets the name of the hidden field.</summary>
      <returns>The name of the hidden field.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredScript">
      <summary>Provides access to a client script that was previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.AddScriptTags">
      <summary>Gets a value that indicates whether the script block should be rendered on the Web page enclosed in &lt;script&gt; tags.</summary>
      <returns>true if the script should be rendered on the Web page enclosed in &lt;script&gt; tags; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Control">
      <summary>Gets the control that registered the script.</summary>
      <returns>A reference to the control that registered the script.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Key">
      <summary>Gets the key that, together with the <see cref="P:System.Web.UI.RegisteredScript.Type" /> value, identifies the script.</summary>
      <returns>The value of the key. This value can be null or empty.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Script">
      <summary>Gets the file name of the script.</summary>
      <returns>The file name of the script. This value can be null or empty.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.ScriptType">
      <summary>Gets the script type that indicates when the script is intended to be executed.</summary>
      <returns>A value defined by the <see cref="T:System.Web.UI.RegisteredScriptType" /> enumeration.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Type">
      <summary>Gets the client script type that, together with the <see cref="P:System.Web.UI.RegisteredScript.Key" /> value, identifies the script.</summary>
      <returns>The type of the script.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Url">
      <summary>Gets the URL of the script file.</summary>
      <returns>The URL of the script file. This value can be null or empty.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredScriptType">
      <summary>Specifies the type of client script block that is represented by a <see cref="T:System.Web.UI.RegisteredScript" /> object.</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.ClientScriptInclude">
      <summary>A client script that executes every time that an asynchronous postback occurs.</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.ClientScriptBlock">
      <summary>A block of client code that executes one time during initial page rendering. A client script block of this type does not execute during partial-page updates.</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.ClientStartupScript">
      <summary>A client script that is associated with a control that executes when the control starts.</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.OnSubmitStatement">
      <summary>A client script that executes when a page is submitted.</summary>
    </member>
    <member name="T:System.Web.UI.RoleServiceManager">
      <summary>Configures the location of a custom implementation of the role service.</summary>
    </member>
    <member name="M:System.Web.UI.RoleServiceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.RoleServiceManager" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.RoleServiceManager.LoadRoles">
      <summary>Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.</summary>
      <returns>true if the list of roles must be retrieved; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.RoleServiceManager.Path">
      <summary>Gets or sets the path of the role service.</summary>
      <returns>The path of the custom role Web service.</returns>
      <exception cref="T:System.ArgumentException">More than one unique path was set in the control hierarchy.</exception>
    </member>
    <member name="T:System.Web.UI.ScriptBehaviorDescriptor">
      <summary>Extends the <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> class to provide a wrapper for defining behaviors that are converted into client script.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptBehaviorDescriptor.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> class.</summary>
      <param name="type">A string representation of the type of the client behavior to describe.</param>
      <param name="elementID">The client ID of the target control.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> or <paramref name="elementID" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.ScriptBehaviorDescriptor.ClientID">
      <summary>Gets the identifier for the current <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> instance.</summary>
      <returns>The ID or a generated value, depending on the conditions described in the following table.The <see cref="P:System.Web.UI.ScriptComponentDescriptor.ID" /> property has been set.The value of the <see cref="P:System.Web.UI.ScriptComponentDescriptor.ID" /> property.The <see cref="P:System.Web.UI.ScriptComponentDescriptor.ID" /> property has not been set.A generated ID that consists of the value of the <see cref="P:System.Web.UI.ScriptBehaviorDescriptor.ElementID" /> property, followed by a dollar sign ($), followed by the value of the <see cref="P:System.Web.UI.ScriptBehaviorDescriptor.Name" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptBehaviorDescriptor.ElementID">
      <summary>Gets the id attribute of the associated element, as set in the constructor.</summary>
      <returns>The client ID of the target control, as set in the constructor.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptBehaviorDescriptor.GetScript">
      <summary>Gets the client script that implements the target control on the page.</summary>
      <returns>The client script that implements the target control on the page.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptBehaviorDescriptor.Name">
      <summary>Gets or sets the name of the current <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> instance.</summary>
      <returns>The name of the current <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> instance, if set; otherwise, a generated name.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptComponentDescriptor">
      <summary>Provides a wrapper for converting server components into client script.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> class.</summary>
      <param name="type">The type of the target client component.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty(System.String,System.String)">
      <summary>Adds the specified property, and associates that property with the specified element.</summary>
      <param name="name">The name of the property.</param>
      <param name="componentID">The ID of the target component.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> or <paramref name="componentID" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddElementProperty(System.String,System.String)">
      <summary>Adds the specified property and associates that property with the specified component.</summary>
      <param name="name">The name of the property.</param>
      <param name="elementID">The ID of the target element.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> or <paramref name="component" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddEvent(System.String,System.String)">
      <summary>Adds the specified event and handler.</summary>
      <param name="name">The name of the event.</param>
      <param name="handler">The name of the handler function for the specified event.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> or <paramref name="handler" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddProperty(System.String,System.Object)">
      <summary>Adds the specified property and value.</summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty(System.String,System.String)">
      <summary>Adds the specified property, and associates the property with the specified script.</summary>
      <param name="name">The name of the property.</param>
      <param name="script">The script that is rendered to the browser.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="script" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.ScriptComponentDescriptor.ClientID">
      <summary>When overridden in a derived class, gets the identifier of the client component.</summary>
      <returns>The ID of the client component.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.GetScript">
      <summary>Gets the client script that implements the target control on the page.</summary>
      <returns>The client script that implements the target control on the page.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptComponentDescriptor.ID">
      <summary>Gets or sets the ID of the current <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> instance.</summary>
      <returns>The ID of the current <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> instance, if set; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.ScriptComponentDescriptor.Type">
      <summary>Gets or sets the type of the target client component.</summary>
      <returns>The type of the target client component.</returns>
      <exception cref="T:System.ArgumentException">An attempt was made to set the property to null.</exception>
    </member>
    <member name="T:System.Web.UI.ScriptControl">
      <summary>Provides an abstract base class for a script control.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptControl" /> class in a derived class.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptControl.GetScriptDescriptors">
      <summary>When overridden in a derived class, returns the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptControl.GetScriptReferences">
      <summary>When overridden in a derived class, returns the script files for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains ECMAScript (JavaScript) files that have been registered as embedded resources.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptControl.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> event and registers the script control with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.ScriptControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.Render(System.EventArgs)" /> event and sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered to the browser.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
    </member>
    <member name="M:System.Web.UI.ScriptControl.System#Web#UI#IScriptControl#GetScriptDescriptors">
      <summary>When overridden in a derived class, registers the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptControl.System#Web#UI#IScriptControl#GetScriptReferences">
      <summary>When overridden in a derived class, registers script files for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains ECMAScript (JavaScript) files that have been registered as embedded resources.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptControlDescriptor">
      <summary>Defines a client control object. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptControlDescriptor.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptControlDescriptor" /> class. </summary>
      <param name="type">The type of the client control object to create.</param>
      <param name="elementID">The ID of the HTML element that represents the control object to create. </param>
    </member>
    <member name="P:System.Web.UI.ScriptControlDescriptor.ClientID">
      <summary>Gets the ID of the client component.</summary>
      <returns>The ID of the client component.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptControlDescriptor.ElementID">
      <summary>Gets the HTML ID of the client control object.</summary>
      <returns>The HTML ID of the client control object.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptControlDescriptor.ID">
      <summary>Gets the ID of the current <see cref="T:System.Web.UI.ScriptControlDescriptor" /> instance.</summary>
      <returns>The ID of the current <see cref="T:System.Web.UI.ScriptControlDescriptor" /> instance, if set; otherwise, an empty string ("").</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set the <see cref="P:System.Web.UI.ScriptControlDescriptor.ID" /> property.</exception>
    </member>
    <member name="T:System.Web.UI.ScriptDescriptor">
      <summary>When overridden in a derived class, defines script that creates an instance of a client class.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptDescriptor" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptDescriptor.GetScript">
      <summary>When overridden in a derived class, returns script to create a client class or object.</summary>
      <returns>The ECMAScript (JavaScript) code for creating a client object.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptManager">
      <summary>Manages ASP.NET AJAX script libraries and script files, partial-page rendering, and client proxy class generation for Web and application services.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptManager" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect">
      <summary>Gets or sets a value that determines whether the custom errors section of the Web.config file is used during an error in an asynchronous postback.</summary>
      <returns>true if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, false. The default is true.</returns>
    </member>
    <member name="E:System.Web.UI.ScriptManager.AsyncPostBackError">
      <summary>Occurs when there is a page error during an asynchronous postback.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage">
      <summary>Gets or sets the error message that is sent to the client when an unhandled server exception occurs during an asynchronous postback.</summary>
      <returns>The error message. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID">
      <summary>Gets the unique ID of the control that caused the asynchronous postback.</summary>
      <returns>The unique ID of a control, if the control has an ID; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AsyncPostBackTimeout">
      <summary>Gets or sets a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received.</summary>
      <returns>An integer that represents the time-out in seconds. The default value is 90 seconds.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AuthenticationService">
      <summary>Gets the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnablePageMethods">
      <summary>Gets or sets a value that indicates whether public static page methods in an ASP.NET page can be called from client script.</summary>
      <returns>true if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnablePartialRendering">
      <summary>Gets or sets a value that enables partial rendering of a page, which in turn enables you to update regions of the page individually by using <see cref="T:System.Web.UI.UpdatePanel" /> controls.</summary>
      <returns>true if partial rendering is enabled and full-page updates are suppressed; otherwise, false. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is set after the page's <see cref="E:System.Web.UI.Control.Init" /> event occurs.</exception>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableScriptGlobalization">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders script that supports parsing and formatting of culture-specific information.</summary>
      <returns>true if culture-specific information can be displayed; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableScriptLocalization">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders localized versions of script files.</summary>
      <returns>true if localized script files will be rendered; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)">
      <summary>Gets the <see cref="T:System.Web.UI.ScriptManager" /> instance for a given <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>The current <see cref="T:System.Web.UI.ScriptManager" /> instance for the selected <see cref="T:System.Web.UI.Page" /> object, or null if no instance is defined.</returns>
      <param name="page">The page instance to retrieve the <see cref="T:System.Web.UI.ScriptManager" /> from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations">
      <summary>Retrieves a read-only collection of ECMAScript (JavaScript) array declarations that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains the array declarations.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks">
      <summary>Retrieves a read-only collection of client script blocks that were previously registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
      <returns>A generic collection that contains client script blocks.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredDisposeScripts">
      <summary>Retrieves a read-only collection of dispose scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains dispose scripts.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes">
      <summary>Retrieves a read-only collection of custom (expando) attributes that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains custom attributes.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredHiddenFields">
      <summary>Retrieves a read-only collection of hidden fields that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains hidden fields.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements">
      <summary>Retrieves a read-only collection of onsubmit statements that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains onsubmit statements.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredStartupScripts">
      <summary>Retrieves a read-only collection of startup scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains startup scripts.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.IsDebuggingEnabled">
      <summary>Gets a value that indicates whether the debug versions of client script libraries will be rendered.</summary>
      <returns>true if the current request is executing in debug mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.IsInAsyncPostBack">
      <summary>Gets a value that indicates whether the current postback is being executed in partial-rendering mode.</summary>
      <returns>true if the current postback is executing in partial-rendering mode; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Reads form data that is posted from the browser to the server, and determines the source of the asynchronous postback.</summary>
      <returns>true if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all the incoming post data.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.LoadScriptsBeforeUI">
      <summary>Gets or sets a value that indicates whether scripts are loaded before or after markup for the page UI is loaded.</summary>
      <returns>true if scripts are loaded before markup for the UI is loaded; false if scripts are loaded after markup for the UI is loaded. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> event.</summary>
      <param name="e">The error event data.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event and makes sure that only one <see cref="T:System.Web.UI.ScriptManager" /> control exists on the page.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">More than one instance of <see cref="T:System.Web.UI.ScriptManager" /> exists on the page.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event, and registers script files and services for partial-page updates. </summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The browser that made the partial-page request does not support at least DOM Level 1.0.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> event for each script reference that is managed by the <see cref="T:System.Web.UI.ScriptManager" /> control</summary>
      <param name="e">An object that represents the current script.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ProfileService">
      <summary>Gets the <see cref="T:System.Web.UI.ProfileServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.ProfileServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent">
      <summary>Raises events for the <see cref="T:System.Web.UI.ScriptManager" /> control when it posts back to the server.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)">
      <summary>Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</summary>
      <param name="control">The control that is registering the array.</param>
      <param name="arrayName">The name of the array to register.</param>
      <param name="arrayValue">The array value or values to register.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayName" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)">
      <summary>Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</summary>
      <param name="page">The page object that is registering the array.</param>
      <param name="arrayName">The name of the array to register.</param>
      <param name="arrayValue">The array value or values to register.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayName" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)">
      <summary>Registers a control as a trigger for asynchronous postbacks.</summary>
      <param name="control">The control to register for asynchronous postbacks.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The page is registered as an asynchronous postback control.</exception>
      <exception cref="T:System.ArgumentException">The registered control does not implement the <see cref="T:System.Web.UI.INamingContainer" />, <see cref="T:System.Web.UI.IPostBackDataHandler" />, or <see cref="T:System.Web.UI.IPostBackEventHandler" /> interfaces.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</summary>
      <param name="control">The control that is registering the client script block.</param>
      <param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script block.</param>
      <param name="script">The script.</param>
      <param name="addScriptTags">true to enclose the script block in &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">The client script block <paramref name="type" /> is null.- or -The control that is registering the script block is null.</exception>
      <exception cref="T:System.ArgumentException">The control that is registering the script block is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</summary>
      <param name="page">The page object that is registering the client script block.</param>
      <param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script block.</param>
      <param name="script">The script.</param>
      <param name="addScriptTags">true to enclose the script block in &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">The script block <paramref name="type" /> is null.- or -The page that is registering the script block is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)">
      <summary>Registers a client script file with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds a script file reference to the page. </summary>
      <param name="control">The control that is registering the client script file.</param>
      <param name="type">The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script file.</param>
      <param name="url">The URL of the script file.</param>
      <exception cref="T:System.ArgumentNullException">The client script file <paramref name="type" /> is null.- or -The control that is registering the script file is null.</exception>
      <exception cref="T:System.ArgumentException">The control that is registering the script file is not in the page's control tree.- or -<paramref name="url" /> is null. - or -<paramref name="url" /> is empty.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)">
      <summary>Registers client script with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that an asynchronous postback occurs, and then adds a script file reference to the page.</summary>
      <param name="page">The page object that is registering the client script file.</param>
      <param name="type">The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script file.</param>
      <param name="url">The URL of the script file.</param>
      <exception cref="T:System.ArgumentNullException">The client script file <paramref name="type" /> is null.- or -The page that is registering the script file is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> is null. - or -<paramref name="url" /> is empty.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)">
      <summary>Registers the client script that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</summary>
      <param name="control">The control that is registering the script.</param>
      <param name="type">The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="resourceName">An identifier for the resource.</param>
      <exception cref="T:System.ArgumentNullException">The client resource <paramref name="type" /> is null.- or -The control that is registering the script is null.</exception>
      <exception cref="T:System.ArgumentException">The control that is registering the script is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)">
      <summary>Registers a client script file that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that a postback occurs.</summary>
      <param name="page">The page object that is registering the script.</param>
      <param name="type">The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="resourceName">An identifier for the resource.</param>
      <exception cref="T:System.ArgumentNullException">The client resource <paramref name="type" /> is null.- or -The page that is registering the script is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)">
      <summary>Sends custom data to a control during partial-page rendering.</summary>
      <param name="control">The control that is receiving the data.</param>
      <param name="dataItem">The data that is sent to the control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataItem" /> is already registered for <paramref name="control" />.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)">
      <summary>Sends custom data to a control during partial-page rendering, and indicates whether the data is in JavaScript Object Notation (JSON) format. </summary>
      <param name="control">The page control that is receiving the data.</param>
      <param name="dataItem">The data that is sent to the control.</param>
      <param name="isJsonSerialized">true to indicate that <paramref name="dataItem" /> is serialized as JSON; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataItem" /> is already registered for <paramref name="control" />.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)">
      <summary>Registers a dispose script for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control. The script is executed when the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated or deleted. </summary>
      <param name="control">The control that the dispose script is for.</param>
      <param name="disposeScript">The dispose script.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.- or -<paramref name="disposeScript" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not found on the page.- or -<paramref name="control" /> is not inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
      <summary>Registers a name/value pair with the <see cref="T:System.Web.UI.ScriptManager" /> control as a custom (expando) attribute of a specified control. </summary>
      <param name="control">The control that is registering the expando attribute.</param>
      <param name="controlId">The control that contains the custom attribute on the page.</param>
      <param name="attributeName">The name of the custom attribute to register.</param>
      <param name="attributeValue">The value of the custom attribute.</param>
      <param name="encode">true to encode the custom attribute that is being registered; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not in the page's control tree.- or -<paramref name="controlId" /> is null. - or -<paramref name="controlId" /> is empty.- or -<paramref name="attributeName" /> is null. - or -<paramref name="attributeName" /> is empty.- or -<paramref name="attributeName" /> is already registered.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)">
      <summary>Registers an extender control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <param name="extenderControl">The extender control to register.</param>
      <param name="targetControl">The script control that the extender control extends.</param>
      <typeparam name="TExtenderControl">A control that implements the <see cref="T:System.Web.UI.IExtenderControl" /> interface.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extenderControl" /> is null.- or - <paramref name="targetControl" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)">
      <summary>Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control. </summary>
      <param name="control">The control that is registering the hidden field.</param>
      <param name="hiddenFieldName">The name of the hidden field to register.</param>
      <param name="hiddenFieldInitialValue">The initial value of the hidden field.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.- or - <paramref name="hiddenFieldName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)">
      <summary>Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control during every asynchronous postback.</summary>
      <param name="page">The page object that is registering the hidden field.</param>
      <param name="hiddenFieldName">The name of the hidden field to register.</param>
      <param name="hiddenFieldInitialValue">The initial value of the hidden field.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> is null.- or - <paramref name="hiddenFieldName" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)">
      <summary>Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted. </summary>
      <param name="control">The control that is registering the onsubmit statement.</param>
      <param name="type">The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script statement.</param>
      <param name="script">The script.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.- or -<paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)">
      <summary>Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted.</summary>
      <param name="page">The page object that is registering the onsubmit statement.</param>
      <param name="type">The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script statement.</param>
      <param name="script">The script.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> is null.- or -<paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)">
      <summary>Registers a control as a trigger for a postback. This method is used to configure postback controls inside an <see cref="T:System.Web.UI.UpdatePanel" /> control that would otherwise perform asynchronous postbacks.</summary>
      <param name="control">The control to register for postback.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)">
      <summary>Registers a script control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <param name="scriptControl">The script control to register.</param>
      <typeparam name="TScriptControl">A control that implements the <see cref="T:System.Web.UI.IScriptControl" /> interface.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scriptControl" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)">
      <summary>Calls back to an <see cref="T:System.Web.UI.ExtenderControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior. </summary>
      <param name="extenderControl">The extender control for which script descriptors will be registered.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)">
      <summary>Calls a <see cref="T:System.Web.UI.ScriptControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.</summary>
      <param name="scriptControl">The script control for which script descriptors will be registered.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers a startup script block for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> by using the <see cref="T:System.Web.UI.ScriptManager" /> control, and adds the script block to the page. </summary>
      <param name="control">The control that is registering the client script block.</param>
      <param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script block.</param>
      <param name="script">The script.</param>
      <param name="addScriptTags">true to enclose the script block with &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.- or -<paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers a startup script block for every asynchronous postback with the <see cref="T:System.Web.UI.ScriptManager" /> control and adds the script block to the page.</summary>
      <param name="page">The page object that is registering the client script block.</param>
      <param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script block.</param>
      <param name="script">The script.</param>
      <param name="addScriptTags">true to enclose the script block with &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.ScriptManager" /> control's content to the browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">An object that receives the content of the control to write to the page. </param>
    </member>
    <member name="E:System.Web.UI.ScriptManager.ResolveScriptReference">
      <summary>Occurs when a member of the <see cref="P:System.Web.UI.ScriptManager.Scripts" /> collection is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptManager.RoleService">
      <summary>Gets the <see cref="T:System.Web.UI.RoleServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.RoleServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ScriptMode">
      <summary>Gets or sets a value that specifies whether debug or release versions of client script libraries are rendered.</summary>
      <returns>The enumeration value that indicates the current mode. The default is <see cref="F:System.Web.UI.ScriptMode.Auto" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> property is not one of the <see cref="T:System.Web.UI.ScriptMode" /> values.</exception>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ScriptPath">
      <summary>Gets or sets the root path of the location that is used to build the paths to ASP.NET AJAX and custom script files.</summary>
      <returns>The location where script files are stored. The default value is an empty string (""), which is interpreted as a relative path.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.Scripts">
      <summary>Gets a <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object that contains the <see cref="T:System.Web.UI.ScriptReference" /> objects, each of which represents a script file rendered to the client.</summary>
      <returns>The <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object of the <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.Services">
      <summary>Gets a <see cref="T:System.Web.UI.ServiceReferenceCollection" /> object that contains a <see cref="T:System.Web.UI.ServiceReference" /> object for each Web service that ASP.NET exposes on the client for AJAX functionality.</summary>
      <returns>The <see cref="T:System.Web.UI.ScriptManager.ServiceReferenceCollection" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.SetFocus(System.String)">
      <summary>Sets the browser focus to the control specified by ID.</summary>
      <param name="clientID">The ID of the control to receive focus.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)">
      <summary>Sets the browser focus to the specified control.</summary>
      <param name="control">The control to receive focus.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.SupportsPartialRendering">
      <summary>Gets a value that indicates whether the client supports partial-page rendering.</summary>
      <returns>true if the client supports partial-page rendering; otherwise, false. The default value is true.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is false and the <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set to true.- or -The <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set after the <see cref="E:System.Web.UI.Control.Init" /> event.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
      <returns>true if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, false.</returns>
      <param name="postDataKey">The key-identifier for the control.</param>
      <param name="postCollection">A collection of all incoming post data.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptManager.Visible">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property that is inherited from the base <see cref="T:System.Web.UI.Control" /> class to prevent setting this value.</summary>
      <returns>true in all cases.</returns>
      <exception cref="T:System.NotImplementedException">A value is assigned to the <see cref="P:System.Web.UI.ScriptManager.Visible" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.ScriptManagerProxy">
      <summary>Enables nested components such as content pages and user controls to add script and service references to pages when a <see cref="T:System.Web.UI.ScriptManager" /> control is already defined in a parent element.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManagerProxy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptManagerProxy" /> class. </summary>
      <exception cref="T:System.InvalidOperationException">There is no <see cref="T:System.Web.UI.ScriptManager" /> for the current page.- or -The current page is null.</exception>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.AuthenticationService">
      <summary>Gets the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManagerProxy.OnInit(System.EventArgs)">
      <summary>Raises the base <see cref="E:System.Web.UI.Control.Init" /> event and registers the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.ProfileService">
      <summary>Gets the <see cref="T:System.Web.UI.ProfileServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.ProfileServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.RoleService">
      <summary>Gets the <see cref="T:System.Web.UI.RoleServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.RoleServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.Scripts">
      <summary>Gets a <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object that contains a <see cref="T:System.Web.UI.ScriptReference" /> object for each script file that is explicitly registered with the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.ScriptReference" /> objects for each script file that the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control sends to the browser.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.Services">
      <summary>Gets a <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object that contains a <see cref="T:System.Web.UI.ServiceReference" /> object for each service that is explicitly registered with the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control.</summary>
      <returns>A collection that contains an <see cref="T:System.Web.UI.ServiceReference" /> object for each service that is registered with the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.Visible">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property inherited from the base <see cref="T:System.Web.UI.Control" /> class to prevent setting this value.</summary>
      <returns>true if the control is rendered on the page; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">A value is assigned to the <see cref="P:System.Web.UI.ScriptManagerProxy.Visible" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.ScriptMode">
      <summary>Specifies whether <see cref="T:System.Web.UI.ScriptManager" /> and <see cref="T:System.Web.UI.ScriptReference" /> objects refer to the debug or release version of client scripts.</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Auto">
      <summary>In the <see cref="T:System.Web.UI.ScriptManager" /> control, the version of client scripts to use is determined at run time based on the application-level &lt;compilation&gt; element of the Web.config file, unless it is overridden in an instance of the <see cref="T:System.Web.UI.ScriptReference" /> control. In the <see cref="T:System.Web.UI.ScriptReference" /> control, when applied to a standalone script file, <see cref="F:System.Web.UI.ScriptMode.Auto" /> is equivalent to <see cref="F:System.Web.UI.ScriptMode.Release" />. When applied to a script reference in an assembly, <see cref="F:System.Web.UI.ScriptMode.Auto" /> is equivalent to <see cref="F:System.Web.UI.ScriptMode.Inherit" />.</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Inherit">
      <summary>In the <see cref="T:System.Web.UI.ScriptManager" /> control, <see cref="F:System.Web.UI.ScriptMode.Inherit" /> is equivalent to <see cref="F:System.Web.UI.ScriptMode.Auto" />. In the <see cref="T:System.Web.UI.ScriptReference" /> control, the <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> value from <see cref="T:System.Web.UI.ScriptManager" /> determines which version of the client script to use.</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Debug">
      <summary>In the <see cref="T:System.Web.UI.ScriptManager" /> control, the debug version of the client script is used on the Web page unless overridden in an instance of the <see cref="T:System.Web.UI.ScriptReference" /> control. In the <see cref="T:System.Web.UI.ScriptReference" /> control, the debug version of the client script is used on the Web page.</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Release">
      <summary>In the <see cref="T:System.Web.UI.ScriptManager" /> control, the release version of the client script is used on the Web page unless overridden by setting the <see cref="P:System.Web.UI.ScriptReference.ScriptMode" /> property of a <see cref="T:System.Web.UI.ScriptReference" /> instance to <see cref="F:System.Web.UI.ScriptMode.Debug" />. In the <see cref="T:System.Web.UI.ScriptReference" /> control, the release version of the client script is used on the Web page.</summary>
    </member>
    <member name="T:System.Web.UI.ScriptReference">
      <summary>Registers an ECMAScript (JavaScript) file for use on an ASP.NET Web page. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class by using a specified path.</summary>
      <param name="path">The path of the client script file relative to the Web page.</param>
    </member>
    <member name="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class by using a specified name and assembly.</summary>
      <param name="name">The name of the script file that is embedded in the assembly.</param>
      <param name="assembly">The name of the assembly that contains the client script file as an embedded resource.</param>
    </member>
    <member name="P:System.Web.UI.ScriptReference.Assembly">
      <summary>Gets or sets the name of the assembly that contains the client script file as an embedded resource.</summary>
      <returns>The fully qualified or partially qualified name of the assembly that contains a client script file as an embedded resource.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReference.IgnoreScriptPath">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> property is included in the URL when you register a client script file from a resource.</summary>
      <returns>true if the script path is not used when you register the client script; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReference.Name">
      <summary>Gets or sets the name of the embedded resource that contains the client script file. </summary>
      <returns>The name of the client script file that is embedded as a resource in an assembly.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReference.NotifyScriptLoaded"></member>
    <member name="P:System.Web.UI.ScriptReference.Path"></member>
    <member name="P:System.Web.UI.ScriptReference.ResourceUICultures"></member>
    <member name="P:System.Web.UI.ScriptReference.ScriptMode"></member>
    <member name="M:System.Web.UI.ScriptReference.ToString">
      <summary>Returns a string that represents the value of the <see cref="P:System.Web.UI.ScriptReference.Name" /> property, the <see cref="P:System.Web.UI.ScriptReference.Path" /> property, or the type name.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.ScriptReference.Name" /> property if it is defined, or the value of the <see cref="P:System.Web.UI.ScriptReference.Path" /> property if it is defined; otherwise, the value of the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptReferenceCollection">
      <summary>Represents a collection of script references.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReferenceCollection" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.ScriptReferenceEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceEventArgs.#ctor(System.Web.UI.ScriptReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReferenceEventArgs" /> class. </summary>
      <param name="script">A <see cref="T:System.Web.UI.ScriptReference" /> object that contains the client script referenced on the Web page.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="script" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceEventArgs.Script">
      <summary>Gets the <see cref="T:System.Web.UI.ScriptReference" /> object that contains the script library.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptReference" /> object that contains the client script referenced on the Web page.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptResourceAttribute">
      <summary>Defines a resource in an assembly to be used from a client script file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptResourceAttribute" /> class. </summary>
      <param name="scriptName">The name of the script library.</param>
      <param name="scriptResourceName">The name of the resource file for the script library.</param>
      <param name="typeName">The name of the type to create for the values in the resource file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="scriptName" />, <paramref name="scriptResourceName" />, or <paramref name="typeName" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.ScriptName">
      <summary>Gets the name of the script library.</summary>
      <returns>The name of the script library.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.ScriptResourceName">
      <summary>Gets the name of the resource file for the script library.</summary>
      <returns>The name of the resource file for the script library.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.TypeName">
      <summary>Gets the name that is used when retrieving the values in the resource file.</summary>
      <returns>The name that is used in client script when retrieving the values in the resource file.</returns>
    </member>
    <member name="T:System.Web.UI.ServiceReference">
      <summary>Registers a Web service for use in a Web page.</summary>
    </member>
    <member name="M:System.Web.UI.ServiceReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ServiceReference" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ServiceReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ServiceReference" /> class with a specified path.</summary>
      <param name="path">The location of the Web service. </param>
    </member>
    <member name="P:System.Web.UI.ServiceReference.InlineScript">
      <summary>Gets or sets a value that indicates whether the proxy generation script is included in the page as an inline script block or is obtained by a separate request.</summary>
      <returns>true if the proxy generation script is included as an inline script block in the page; false if the proxy generation script is obtained by a separate request. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.ServiceReference.Path">
      <summary>Gets or sets the path of the referenced Web service.</summary>
      <returns>The path of the referenced Web service.</returns>
    </member>
    <member name="M:System.Web.UI.ServiceReference.ToString">
      <summary>Returns a string that represents the value of the <see cref="P:System.Web.UI.ServiceReference.Path" /> property or the type name.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.ServiceReference.Path" /> property, if it is defined; otherwise, the value of the <see cref="P:System.Reflection.MemberInfo.Name" /> property for the class.</returns>
    </member>
    <member name="T:System.Web.UI.ServiceReferenceCollection">
      <summary>Contains a set of <see cref="T:System.Web.UI.ServiceReference" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.ServiceReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ServiceReferenceCollection" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.TargetControlTypeAttribute">
      <summary>Extends the <see cref="T:System.Attribute" /> class to indicate the type of server control that an extender control can be applied to.</summary>
    </member>
    <member name="M:System.Web.UI.TargetControlTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.TargetControlTypeAttribute" /> class.</summary>
      <param name="targetControlType">The type of the target control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetControlType" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.TargetControlTypeAttribute.TargetControlType">
      <summary>Gets the type of the target control, as specified in the constructor.</summary>
      <returns>The type of the target control.</returns>
    </member>
    <member name="P:System.Web.UI.TargetControlTypeAttribute.TypeId">
      <summary>Gets a unique identifier for this <see cref="T:System.Web.UI.TargetControlTypeAttribute" />.</summary>
      <returns>The unique identifier for this attribute.</returns>
    </member>
    <member name="T:System.Web.UI.Timer">
      <summary>Performs asynchronous or synchronous Web page postbacks at a defined interval.</summary>
    </member>
    <member name="M:System.Web.UI.Timer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Timer" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Timer.Enabled">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.Timer" /> control initiates a postback to the server after the number of milliseconds specified in the <see cref="P:System.Web.UI.Timer.Interval" /> property has elapsed.</summary>
      <returns>true if <see cref="T:System.Web.UI.Timer" /> will initiate a postback; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.UI.Timer.GetScriptDescriptors">
      <summary>Retrieves properties from a <see cref="T:System.Web.UI.Timer" /> object that are passed to the client component that implements timer logic in the browser.</summary>
      <returns>An array of type <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Timer.GetScriptReferences">
      <summary>Retrieves the client script for the <see cref="T:System.Web.UI.Timer" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptReference" /> object that contains client script for the <see cref="T:System.Web.UI.Timer" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.Timer.Interval">
      <summary>Gets or sets the number of milliseconds to wait before initiating a postback.</summary>
      <returns>The number of milliseconds to wait before initiating a postback. The default value is 60,000 (60 seconds).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value is less than or equal to zero.</exception>
    </member>
    <member name="M:System.Web.UI.Timer.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event of the <see cref="T:System.Web.UI.Timer" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Timer.OnTick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Timer.Tick" /> event of the <see cref="T:System.Web.UI.Timer" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Timer.RaisePostBackEvent(System.String)">
      <summary>Enables a <see cref="T:System.Web.UI.Timer" /> control to raise the <see cref="E:System.Web.UI.Timer.Tick" /> event when a page is posted to the server.</summary>
      <param name="eventArgument">A string with an optional argument to be passed to the event handler.</param>
    </member>
    <member name="M:System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.Timer" /> control content to the browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object. </summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that is used to render the <see cref="T:System.Web.UI.Timer" /> control content to the browser.</param>
    </member>
    <member name="M:System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Raises the <see cref="E:System.Web.UI.Timer.Tick" /> event when a page is posted to the server.</summary>
      <param name="eventArgument">A string with an optional argument to be passed to the event handler.</param>
    </member>
    <member name="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors">
      <summary>Retrieves properties from a <see cref="T:System.Web.UI.Timer" /> object that are passed to the client component.</summary>
      <returns>An array of type <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences">
      <summary>Retrieves the client script for the <see cref="T:System.Web.UI.Timer" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptReference" /> object that contains client script for the <see cref="T:System.Web.UI.Timer" /> control.</returns>
    </member>
    <member name="E:System.Web.UI.Timer.Tick">
      <summary>Occurs when the number of milliseconds specified in the <see cref="P:System.Web.UI.Timer.Interval" /> property has elapsed and the page is posted to the server.</summary>
    </member>
    <member name="P:System.Web.UI.Timer.Visible">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property of the <see cref="T:System.Web.UI.Control" /> class to prevent this value from being set.</summary>
      <returns>true if the control is rendered on the page; otherwise, false. </returns>
      <exception cref="T:System.NotImplementedException">A value is assigned to the Visible property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.UpdatePanel">
      <summary>Enables sections of a page to be partially rendered without a postback.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanel" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers">
      <summary>Gets or sets a value that indicates whether postbacks from immediate child controls of an <see cref="T:System.Web.UI.UpdatePanel" /> control update the panel's content.</summary>
      <returns>true if postbacks from immediate child controls of the <see cref="T:System.Web.UI.UpdatePanel" /> control update the panel's content; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.ContentTemplate">
      <summary>Gets or sets the template that defines the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance that defines the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> property of the <see cref="T:System.Web.UI.UpdatePanel" /> control is set after an instance of the template is created or after the content template container is created. </exception>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.ContentTemplateContainer">
      <summary>Gets a control object to which you can programmatically add child controls.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> object that defines the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.Controls">
      <summary>Gets the <see cref="T:System.Web.UI.ControlCollection" /> object that contains the child controls for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>The collection of child controls for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />, or <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> method of the <see cref="T:System.Web.UI.ControlCollection" /> class has been called. To change the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control, modify the child controls of the <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer">
      <summary>Creates a <see cref="T:System.Web.UI.Control" /> object that acts as a container for child controls that define the <see cref="T:System.Web.UI.UpdatePanel" /> control's content.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> container for the <see cref="T:System.Web.UI.UpdatePanel" /> control's content.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.CreateControlCollection">
      <summary>Returns the collection of all controls that are contained in the <see cref="T:System.Web.UI.UpdatePanel" /> control. </summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object that consists of all controls that define the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.Initialize">
      <summary>Initializes the <see cref="T:System.Web.UI.UpdatePanel" /> control trigger collection if partial-page rendering is enabled.</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.IsInPartialRendering">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.UpdatePanel" /> control is being updated as a result of an asynchronous postback.</summary>
      <returns>true if the current <see cref="T:System.Web.UI.UpdatePanel" /> control is being updated as a result of an asynchronous postback; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> property is being defined when the <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property has already been created.</exception>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event for the <see cref="T:System.Web.UI.UpdatePanel" /> control and invokes the <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> method when partial-page rendering is not enabled. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> property is set to false, and the <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> property is set to <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</exception>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)">
      <summary>Raises the base <see cref="E:System.Web.UI.Control.Unload" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains event data.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> event.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream for rendering HTML content.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>Raises the <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" /> event.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream for rendering HTML content.</param>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.RenderMode">
      <summary>Gets or sets a value that indicates whether an <see cref="T:System.Web.UI.UpdatePanel" /> control's content is enclosed in an HTML &lt;div&gt; or &lt;span&gt; element.</summary>
      <returns>One of the <see cref="T:System.Web.UI.UpdatePanelRenderMode" /> values. The default is <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" /> so that the content of the panel is enclosed in an HTML &lt;div&gt; element.</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.RequiresUpdate">
      <summary>Gets a value that indicates whether the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control will be updated.</summary>
      <returns>true if the <see cref="T:System.Web.UI.UpdatePanel" /> control's content will be updated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.Triggers">
      <summary>Gets an <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> object that contains <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> and <see cref="T:System.Web.UI.PostBackTrigger" /> objects that were registered declaratively for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>A collection of objects of type <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> and <see cref="T:System.Web.UI.PostBackTrigger" />.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.Update">
      <summary>Causes an update of the content of an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> property is set to <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.- or –The <see cref="M:System.Web.UI.UpdatePanel.Update" /> method is called during or after the page's <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />  event.</exception>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.UpdateMode">
      <summary>Gets or sets a value that indicates when an <see cref="T:System.Web.UI.UpdatePanel" /> control's content is updated.</summary>
      <returns>One of the <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> values. The default is <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified type is not one of the <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> values.</exception>
    </member>
    <member name="T:System.Web.UI.UpdatePanelControlTrigger">
      <summary>Provides a common base class for controls that can be triggers for <see cref="T:System.Web.UI.UpdatePanel" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelControlTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanelControlTrigger" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanelControlTrigger.ControlID">
      <summary>Gets or sets a string that represents the <see cref="P:System.Web.UI.Control.ID" /> of the control that is a trigger for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>A string that contains the <see cref="P:System.Web.UI.Control.ID" /> of the control. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)">
      <summary>Searches for the control specified in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property.</summary>
      <returns>A control that has the ID matching the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property.</returns>
      <param name="searchNamingContainers">A Boolean value that indicates whether to search for the control recursively in naming containers that contain the current <see cref="T:System.Web.UI.UpdatePanel" /> control.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property of the <see cref="T:System.Web.UI.UpdatePanelControlTrigger" /> is null or empty.- or -The control with the specified  <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> was not found.</exception>
    </member>
    <member name="T:System.Web.UI.UpdatePanelRenderMode">
      <summary>Represents the possible layout rendering options for the content of an <see cref="T:System.Web.UI.UpdatePanel" /> control on a page.</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelRenderMode.Block">
      <summary>Specifies that the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is rendered inside an HTML &lt;div&gt; element.</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelRenderMode.Inline">
      <summary>Specifies that the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is rendered inside an HTML &lt;span&gt; element.</summary>
    </member>
    <member name="T:System.Web.UI.UpdatePanelTrigger">
      <summary>Provides a common base class for objects that can be triggers for <see cref="T:System.Web.UI.UpdatePanel" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanelTrigger" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTrigger.HasTriggered">
      <summary>Returns a value that indicates whether the trigger was invoked.</summary>
      <returns>true if the trigger was invoked; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTrigger.Initialize">
      <summary>When overridden in a derived class, enables a trigger to initialize itself.</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanelTrigger.Owner">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.UpdatePanel" /> control that the <see cref="T:System.Web.UI.UpdatePanelTrigger" /> targets.</summary>
      <returns>An <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.UpdatePanelTriggerCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.UpdatePanelTrigger" /> objects for an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.#ctor(System.Web.UI.UpdatePanel)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanelTrigger" /> collection class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.UpdatePanel" /> control that the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> belongs to.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.ClearItems">
      <summary>Removes all elements from the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" />.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.InsertItem(System.Int32,System.Web.UI.UpdatePanelTrigger)">
      <summary>Inserts an <see cref="T:System.Web.UI.UpdatePanelTrigger" /> object into the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> object at the specified index. </summary>
      <param name="index">The zero-based index at which the trigger should be inserted.</param>
      <param name="item">The trigger to insert. The value can be null for reference types.</param>
    </member>
    <member name="P:System.Web.UI.UpdatePanelTriggerCollection.Owner">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.UpdatePanel" /> control that the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> belongs to.</summary>
      <returns>An <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.RemoveItem(System.Int32)">
      <summary>Removes the element at the specified index of the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" />.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.SetItem(System.Int32,System.Web.UI.UpdatePanelTrigger)">
      <summary>Replaces the trigger at the specified index in the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> object.</summary>
      <param name="index">The zero-based index of the trigger to replace.</param>
      <param name="item">The new value for the trigger at the specified index. The value can be null for reference types.</param>
    </member>
    <member name="T:System.Web.UI.UpdatePanelUpdateMode">
      <summary>Represents the possible update modes for the content in an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelUpdateMode.Always">
      <summary>The content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated for all postbacks that originate from the page. This includes asynchronous postbacks.</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelUpdateMode.Conditional">
      <summary>The content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated under the following conditions:</summary>
    </member>
    <member name="T:System.Web.UI.UpdateProgress">
      <summary>Provides visual feedback in the browser when the contents of one or more <see cref="T:System.Web.UI.UpdatePanel" /> controls are updated.</summary>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdateProgress" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID">
      <summary>Gets or sets the ID of the <see cref="T:System.Web.UI.UpdatePanel" /> control that the <see cref="T:System.Web.UI.UpdateProgress" /> control displays status for.</summary>
      <returns>The ID of the associated <see cref="T:System.Web.UI.UpdatePanel" /> control. The default value is an empty string.</returns>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.DisplayAfter">
      <summary>Gets or sets the value in milliseconds before the <see cref="T:System.Web.UI.UpdateProgress" /> control is displayed.</summary>
      <returns>An integer that represents the number of milliseconds before the <see cref="T:System.Web.UI.UpdateProgress" /> control's progress template is displayed. The default is 500 milliseconds (.5 seconds).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.UpdateProgress.DisplayAfter" /> property is less than zero.</exception>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.DynamicLayout">
      <summary>Gets or sets a value that determines whether the progress template is rendered dynamically.</summary>
      <returns>true if the progress template is rendered dynamically; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.GetScriptDescriptors">
      <summary>Returns a list of components, behaviors, and client controls that are required for the <see cref="T:System.Web.UI.UpdateProgress" /> control's client functionality.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.GetScriptReferences">
      <summary>Returns a list of client script library dependencies for the <see cref="T:System.Web.UI.UpdateProgress" /> control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains <see cref="T:System.Web.UI.ScriptReference" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.ProgressTemplate">
      <summary>Gets or sets the template that defines the content of the <see cref="T:System.Web.UI.UpdateProgress" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance that defines the content of the <see cref="T:System.Web.UI.UpdateProgress" /> control. The default is null.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Writes the rendered content of the <see cref="T:System.Web.UI.UpdateProgress" /> control to the browser by using the supplied <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">An object that represents the output stream for rendering HTML content.</param>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptDescriptors">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IScriptControl.GetScriptDescriptors" />.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptReferences">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IScriptControl.GetScriptReferences" />.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.ScriptReference" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.CompositeScriptReference">
      <summary>Represents a collection of script references to combine into a single composite script.</summary>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.CompositeScriptReference" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)">
      <summary>Returns the URL that is rendered as the value of the src attribute of the script element.</summary>
      <param name="scriptManager">The ScriptManager control on the target Web page.</param>
      <param name="zip">true to compress the script; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.IsFromSystemWebExtensions">
      <summary>Indicates whether the composite script contains a reference to an ASP.NET AJAX framework script.</summary>
    </member>
    <member name="P:System.Web.UI.CompositeScriptReference.Scripts">
      <summary>Gets a collection of script references that are contained in the composite script object.</summary>
      <returns>A collection of script references that are contained in the composite script object.</returns>
    </member>
    <member name="T:System.Web.UI.CompositeScriptReferenceEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReferenceEventArgs.#ctor(System.Web.UI.CompositeScriptReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.CompositeScriptReferenceEventArgs" /> class.</summary>
      <param name="compositeScript">The composite script reference.</param>
    </member>
    <member name="P:System.Web.UI.CompositeScriptReferenceEventArgs.CompositeScript">
      <summary>Gets the composite script reference for the event.</summary>
      <returns>The composite script reference.</returns>
    </member>
    <member name="T:System.Web.UI.HistoryEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.ScriptManager.Navigate" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.HistoryEventArgs.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HistoryEventArgs" /> class.</summary>
      <param name="state">A collection of name/value pairs that represent the state of the Web page.</param>
    </member>
    <member name="P:System.Web.UI.HistoryEventArgs.State">
      <summary>Gets a collection of name/value pairs that represent the state of a Web page.</summary>
      <returns>A collection that represents the state of a Web page.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)">
      <summary>Creates a history point and adds it to the browser's history stack, using the specified state data collection and state title.</summary>
      <param name="state">A collection of key/value pairs that contain the data for the state.</param>
      <param name="title">The text that will be added to the browser's history stack as the title for this state.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)">
      <summary>Creates a history point and adds it to the browser's history stack, using the specified state key and state value.</summary>
      <param name="key">The key part of the key/value pair that identifies the state of the Web page.</param>
      <param name="value">The value part of the key/value pair that identifies the state of the Web page.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)">
      <summary>Creates a history point and adds it to the browser's history stack, using the specified state key, state value, and state title.</summary>
      <param name="key">The key part of the key/value pair that identifies the state of the Web page.</param>
      <param name="value">The value part of the key/value pair that identifies the state of the Web page.</param>
      <param name="title">The text that will be added to the browser's history stack as the title for this state.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ClientNavigateHandler">
      <summary>Gets or sets the name of the method that handles the Sys.Application.navigate event on the client.</summary>
      <returns>Name of the method that handles the Sys.Application.navigate event on the client.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.CompositeScript">
      <summary>Gets a reference to the composite script that supports the Web page.</summary>
      <returns>A reference to the composite script.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EmptyPageUrl">
      <summary>Gets or sets a URL to use if the target Web page is empty.</summary>
      <returns>The URL to use if the target Web page is empty.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableHistory">
      <summary>Gets or sets a value that indicates whether the Web page supports history point management.</summary>
      <returns>true if the Web page supports adding history points to the browser's history stack; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableSecureHistoryState">
      <summary>Gets or sets a value that indicates whether to encrypt the history state string.</summary>
      <returns>true if the history state string should be encrypted; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetStateString">
      <summary>Retrieves a string that contains key/value pairs that represent the state of the Web page.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptManager.IsNavigating">
      <summary>Gets a value that indicates whether a <see cref="E:System.Web.UI.ScriptManager.Navigate" /> event is currently being handled.</summary>
      <returns>true if the <see cref="E:System.Web.UI.ScriptManager.Navigate" /> is being handled; otherwise, false.</returns>
    </member>
    <member name="E:System.Web.UI.ScriptManager.Navigate">
      <summary>Occurs when the user clicks the browser's Back or Forward button.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> event.</summary>
      <param name="e">An object that represents the composite script reference.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)">
      <summary>Enables the <see cref="T:System.Web.UI.ScriptManager" /> control to process a postback event and load the history state of the Web page.</summary>
      <param name="eventArgument">A string of key/value pairs that represent the history state of the Web page.</param>
    </member>
    <member name="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference">
      <summary>Occurs when a composite script is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</summary>
      <param name="eventArgument">An optional event argument to be passed to the event handler.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.CompositeScript">
      <summary>Gets a reference to the composite script that supports the content page.</summary>
      <returns>A reference to the composite script.</returns>
    </member>
    <member name="E:System.Web.UI.ScriptManagerProxy.Navigate">
      <summary>Occurs when the user clicks the browser's Back or Forward button.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)">
      <summary>Retrieves the URL that is rendered as the value of the src attribute of the script element.</summary>
      <param name="scriptManager">The ScriptManager control on the target Web page.</param>
      <param name="zip">true if the script should be compressed; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions">
      <summary>Indicates whether the composite script contains a reference to an ASP.NET AJAX framework script.</summary>
    </member>
    <member name="T:System.Web.UI.ScriptReferenceBase">
      <summary>The base class for all script reference classes.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReferenceBase" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.GetUrl(System.Web.UI.ScriptManager,System.Boolean)">
      <summary>Retrieves the URL that is rendered as the value of the src attribute of the script element.</summary>
      <param name="scriptManager">The ScriptManager control on the target Web page.</param>
      <param name="zip">true to compress the script; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.IsFromSystemWebExtensions">
      <summary>Indicates whether the composite script contains a reference to an ASP.NET AJAX framework script.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.Handlers.ScriptResourceHandler" /> object automatically adds code at the end of the ECMAScript (JavaScript) file to call the client <see cref="P:System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded" /> method of the Sys.Application class.</summary>
      <returns>true if the Sys.Application.notifyScriptLoaded method is automatically called at the end of a JavaScript file, or false if user code calls the Sys.Application.notifyScriptLoaded method that is already in the JavaScript file. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.Path">
      <summary>Gets or sets the path of the referenced client script file, relative to the Web page.</summary>
      <returns>The path of the referenced client script</returns>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.ReplaceExtension(System.String)">
      <summary>Replaces the file-name extension in the specified script path to designate a debug script.</summary>
      <param name="pathOrName">The full path of the script to rename. The path must end with ".js".</param>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.ResourceUICultures">
      <summary>Gets or sets a comma-delimited list of UI cultures that are supported by the <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> property.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.ScriptMode">
      <summary>Gets or sets the version of the client script file (release or debug) to use.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptMode" /> value that indicates which version of the client script file to reference. The default is <see cref="F:System.Web.UI.ScriptMode.Auto" />.</returns>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls of the <see cref="T:System.Web.UI.UpdateProgress" /> control.</summary>
      <returns>The collection of child controls for the <see cref="T:System.Web.UI.UpdateProgress" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.CreateChildControls">
      <summary>Called to create any child controls that the <see cref="T:System.Web.UI.UpdateProgress" /> control contains in preparation for posting back or rendering.</summary>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.DataBind">
      <summary>Binds a data source to the <see cref="T:System.Web.UI.UpdateProgress" /> control and all its child controls.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPager">
      <summary>Provides paging functionality for data-bound controls that implement the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface, such as the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPager" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Adds HTML attributes and styles to be rendered in the browser to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">An object that represents the output stream to render HTML content to the browser.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.Attributes">
      <summary>Gets a collection of custom attribute name/value pairs for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>A collection of custom attribute name/value pairs.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.ConnectToEvents(System.Web.UI.WebControls.IPageableItemContainer)">
      <summary>Connects events to event handler methods in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <param name="container">The data-bound control that raises the <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control in the UI hierarchy.</summary>
      <returns>The collection of child controls for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.CreatePagerFields">
      <summary>Creates the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> objects that are contained by the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> property of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.DataBind">
      <summary>Binds the <see cref="T:System.Web.UI.WebControls.DataPager" /> control and all its child controls to a data source.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.Fields">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.DataPagerField" /> objects that represent the pager fields that are specified in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>A collection object that contains all the pager fields that are specified in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.FindPageableItemContainer">
      <summary>Retrieves the data-bound control that is associated with the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>The data-bound control that is associated with the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</returns>
      <exception cref="T:System.InvalidOperationException">A control that implements the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface was not found on the page.-or-The control specified by the <see cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" /> property does not implement the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface.-or-The <see cref="T:System.Web.UI.WebControls.DataPager" /> control does not have a naming container.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.LoadControlState(System.Object)">
      <summary>Loads the state information for the properties in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control that must be persisted between postbacks, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</summary>
      <param name="savedState">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</param>
      <exception cref="T:System.InvalidOperationException">There is no data-bound control associated with the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.LoadViewState(System.Object)">
      <summary>Restores view-state information for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control that was saved by the <see cref="M:System.Web.UI.WebControls.DataPager.SaveViewState" /> method during a previous page request.</summary>
      <param name="savedState">An object that represents the state to be restored.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.MaximumRows">
      <summary>Gets the maximum number of records that are displayed for each page of data.</summary>
      <returns>The maximum number of records that are displayed for each page of data. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether an event for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control is passed up the page's user interface (UI) server control hierarchy</summary>
      <returns>true if the event has been sent to the parent control; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">A container control that implements the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface was not found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnTotalRowCountAvailable(System.Object,System.Web.UI.WebControls.PageEventArgs)">
      <summary>Handles the <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.PagedControlID">
      <summary>Gets or sets the <see cref="P:System.Web.UI.Control.ID" /> of the control that contains the data that will be paged by the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>The <see cref="P:System.Web.UI.Control.ID" /> of the control that contains the data that will be paged by the <see cref="T:System.Web.UI.WebControls.DataPager" /> control. The default is an empty string, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.PageSize">
      <summary>Gets or sets the number of records that are displayed for each page of data.</summary>
      <returns>The number of records that are displayed for each page of data. The default is 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.DataPager.PageSize" /> property is set to a value less than 1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.QueryStringField">
      <summary>Gets or sets the name of the query string field.</summary>
      <returns>The name of the query string field. The default is an empty string, which indicates that the <see cref="T:System.Web.UI.WebControls.DataPager" /> control will use a HTTP POST command to navigate through the pages.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.RecreateChildControls">
      <summary>Creates child controls of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Sends the <see cref="T:System.Web.UI.WebControls.DataPager" /> control content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered to the browser.</summary>
      <param name="writer">The object that receives the <see cref="T:System.Web.UI.WebControls.DataPager" /> control content.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the HTML opening tag of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control to the specified writer. </summary>
      <param name="writer">An object that represents the output stream to render HTML content to the browser.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the contents of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control to the specified writer.</summary>
      <param name="writer">An object that represents the output stream to render HTML content to the browser.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.SaveControlState">
      <summary>Saves the state of the properties in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control that must be persisted between postbacks, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</summary>
      <returns>Returns the current view state of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control. If there is no view state associated with the control, this method returns null. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.SaveViewState">
      <summary>Saves any changes to an <see cref="T:System.Web.UI.WebControls.DataPager" /> control's view-state that have occurred since the time the page was posted back to the server.</summary>
      <returns>Returns the <see cref="T:System.Web.UI.WebControls.DataPager" /> control's current view state. If there is no view state associated with the control, this method returns null. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the page-related properties in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <param name="startRowIndex">The index of the first record on the page of data.</param>
      <param name="maximumRows">The maximum number of items on a single page of data.</param>
      <param name="databind">true to rebind the control after the properties are set; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">There is no data-bound control associated with the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.StartRowIndex">
      <summary>Gets the index of the first record that is displayed on a page of data .</summary>
      <returns>The index of the first record that is displayed on a page of data.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>Retrieves the attribute value with the specified name from the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>The value of the attribute.</returns>
      <param name="name">The name of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>Sets an attribute of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control with the specified name and value.</summary>
      <param name="name">The name of the attribute to set.</param>
      <param name="value">The value of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls">
      <summary>Creates the child controls of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control at design time.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.TagKey">
      <summary>Gets the HTML element that is used to render the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>Always <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.TotalRowCount">
      <summary>Gets the total number of records that are retrieved by the underlying data source object that is referenced by the associated data-bound control.</summary>
      <returns>The total number of records that are retrieved by the underlying data source object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.TrackViewState">
      <summary>Tracks view-state changes to the <see cref="T:System.Web.UI.WebControls.DataPager" /> control so that they can be stored in the control's <see cref="T:System.Web.UI.StateBag" /> object. This object can be accessed through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerCommandEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand" /> event of the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerCommandEventArgs.#ctor(System.Web.UI.WebControls.DataPagerField,System.Int32,System.Web.UI.WebControls.CommandEventArgs,System.Web.UI.WebControls.DataPagerFieldItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerCommandEventArgs" /> class. </summary>
      <param name="pagerField">The object that contains the command button that was clicked.</param>
      <param name="totalRowCount">The total number of records.</param>
      <param name="originalArgs">The command name and command argument of the button that was clicked.</param>
      <param name="item">The object that contains the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object and its container <see cref="T:System.Web.UI.WebControls.DataPager" /> object.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.Item">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that contains the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object and the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object's container <see cref="T:System.Web.UI.WebControls.DataPager" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that contains the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object and the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object's container <see cref="T:System.Web.UI.WebControls.DataPager" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.NewMaximumRows">
      <summary>Gets or sets the maximum number of records to display on each page of data.</summary>
      <returns>The maximum number of records to display on each page of data. The default is -1, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.NewStartRowIndex">
      <summary>Gets or sets the index of the first record to display on a page of data.</summary>
      <returns>The index of the first record that will be displayed on a page of data. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.PagerField">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object that contains the button that was clicked.</summary>
      <returns>The object that contains the button that was clicked.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.TotalRowCount">
      <summary>Gets the total number of records to display.</summary>
      <returns>The total number of records to display.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerField">
      <summary>Serves as the base class for data pager field types, which represent a navigation control for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CloneField">
      <summary>Creates a copy of the current object that is derived from <see cref="T:System.Web.UI.WebControls.DataPagerField" />.</summary>
      <returns>A copy of the current <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>Copies the properties of the current object derived from <see cref="T:System.Web.UI.WebControls.DataPagerField" /> to the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="newField">The object to copy the properties of the current <see cref="T:System.Web.UI.WebControls.DataControlField" />. object to.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>When overridden in a derived class, creates the user interface (UI) controls for the data pager field object and adds them to the specified container.</summary>
      <param name="container">The container that is used to store the controls.</param>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="totalRowCount">The total number of items.</param>
      <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CreateField">
      <summary>When overridden in a derived class, creates an empty object that is derived <see cref="T:System.Web.UI.WebControls.DataPagerField" />.</summary>
      <returns>An empty object that is derived from <see cref="T:System.Web.UI.WebControls.DataPagerField" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.DataPager">
      <summary>Gets a reference to the data pager that the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is associated with. </summary>
      <returns>The object that contains the data pager field. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.GetQueryStringNavigateUrl(System.Int32)">
      <summary>Creates a URL that contains a query string field that has the specified page number.</summary>
      <returns>The target URL.</returns>
      <param name="pageNumber">The target page number.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>When overridden in a derived class, handles events that occur in the data pager field object.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.IsTrackingViewState">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is tracking its view-state changes.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is tracking its view-state changes; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.LoadViewState(System.Object)">
      <summary>Restores view-state information that was saved previously. </summary>
      <param name="savedState">The saved view-state values for the control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.OnFieldChanged">
      <summary>Raises the FieldChanged event.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.QueryStringHandled">
      <summary>Gets or sets a value that indicates whether the query string field has been evaluated.</summary>
      <returns>true if the query string field has been evaluated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.QueryStringValue">
      <summary>Gets the value of the query string field from the URL of the request.</summary>
      <returns>The value of the query string field.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.SaveViewState">
      <summary>Saves the changes that were made to the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object's view state.</summary>
      <returns>The view-state changes for the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is tracking its view-state changes.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is tracking its view-state changes; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>Restores view-state information that was saved previously. </summary>
      <param name="state">The saved view-state values for the control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#SaveViewState">
      <summary>Saves the changes that were made to the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object's view state.</summary>
      <returns>The view-state changes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#TrackViewState">
      <summary>Causes the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to track changes to its view state so that they can be stored in the control's <see cref="P:System.Web.UI.WebControls.DataPagerField.ViewState" /> property and persisted across requests for the same page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.TrackViewState">
      <summary>Causes the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to track changes to its view state so that they can be stored in the control's <see cref="P:System.Web.UI.WebControls.DataPagerField.ViewState" /> property and persisted across requests for the same page.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.ViewState">
      <summary>Gets a dictionary of state information that enables you to save and restore the view state of a <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object across multiple requests for the same page.</summary>
      <returns>An object that contains the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> view-state information.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.Visible">
      <summary>Gets or sets a value that indicates whether a data pager field is rendered.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> is rendered; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerFieldCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.DataPagerField" /> objects that are used by the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.#ctor(System.Web.UI.WebControls.DataPager)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> class.</summary>
      <param name="dataPager">The control that will contain the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Add(System.Web.UI.WebControls.DataPagerField)">
      <summary>Appends the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to the collection.</summary>
      <param name="field">The object to append to the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.CloneFields(System.Web.UI.WebControls.DataPager)">
      <summary>Creates a copy of the current collection.</summary>
      <returns>An object that contains a copy of each <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object that is in the current collection.</returns>
      <param name="pager">The object that contains the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Contains(System.Web.UI.WebControls.DataPagerField)">
      <summary>Determines whether the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection contains the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection contains the specified field; otherwise, false.</returns>
      <param name="field">The object to locate in the <see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.CopyTo(System.Web.UI.WebControls.DataPagerField[],System.Int32)">
      <summary>Copies the complete <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection. The array object must use zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying starts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.CreateKnownType(System.Int32)">
      <summary>Creates a default instance of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> type that is identified by the provided index.</summary>
      <returns>An object that represents an instance of a class that is derived from the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> class, according to the index provided.</returns>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> type to create from the ordered list of types that are returned by the <see cref="M:System.Web.UI.WebControls.DataPagerFieldCollection.GetKnownTypes" /> method.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is not in the recognized range.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.DataPagerFieldCollection.FieldsChanged">
      <summary>Occurs when the fields in the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection change.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.GetKnownTypes">
      <summary>Gets an array of <see cref="T:System.Web.UI.WebControls.DataPagerField" /> types that the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection can contain.</summary>
      <returns>An array of type objects that identify the types of <see cref="T:System.Web.UI.WebControls.DataPagerField" /> objects that the collection can contain.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.IndexOf(System.Web.UI.WebControls.DataPagerField)">
      <summary>Gets the index of a specific <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object in the collection.</summary>
      <returns>The index of the <paramref name="field" /> parameter, if it is found in the collection; otherwise, -1.</returns>
      <param name="field">The object to locate in the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataPagerField)">
      <summary>Inserts the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object into the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection at the specified index.</summary>
      <param name="index">The zero-based index at which the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object will be inserted.</param>
      <param name="field">The object to insert.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object that is at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object that is at the specified index in the collection.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to retrieve from the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnClearComplete">
      <summary>Performs additional processing after all items are removed from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional processing after an item is added to the collection.</summary>
      <param name="index">The index in the collection that the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object was inserted at.</param>
      <param name="value">The object that was inserted into the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional processing after an item is removed from the collection.</summary>
      <param name="index">The index in the collection that the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object was removed from.</param>
      <param name="value">The object that was removed from the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnValidate(System.Object)">
      <summary>Verifies that the specified object is a <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="o">The object to validate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="o" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> is not an instance of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> class or of one of its derived classes.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Remove(System.Web.UI.WebControls.DataPagerField)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object from the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</summary>
      <param name="field">The object to remove from the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object at the specified index from the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</summary>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to remove.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.SetDirtyObject(System.Object)">
      <summary>Instructs the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to record its complete state to view state, instead of recording only changed information.</summary>
      <param name="o">The object to mark as changed since the last time that view state was loaded or saved.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs">
      <summary>Provides data for the Command event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs.#ctor(System.Web.UI.WebControls.DataPagerFieldItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs" /> class. </summary>
      <param name="item">A <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that generated the event.</param>
      <param name="commandSource">The source of the event.</param>
      <param name="originalArgs">The original event data that contains the <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" /> and <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> properties.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs.CommandSource">
      <summary>Gets the control that raised the event.</summary>
      <returns>The control that raised the event.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs.Item">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that contains the control that raised the event.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that contains the control that raised the event.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerFieldItem">
      <summary>Represents a pager field item in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldItem.#ctor(System.Web.UI.WebControls.DataPagerField,System.Web.UI.WebControls.DataPager)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> class. </summary>
      <param name="field">The pager field object.</param>
      <param name="pager">The pager control that contains the pager field object.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldItem.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether the event for the server control is passed up the page's UI server control hierarchy.</summary>
      <returns>true if the event was sent to the parent control; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldItem.Pager">
      <summary>Gets the pager control that contains the pager field object.</summary>
      <returns>The pager control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldItem.PagerField">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <returns>The pager field object.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.InsertItemPosition">
      <summary>Specifies the location of the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template when it is rendered as part of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.InsertItemPosition.None">
      <summary>The <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template is not rendered.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.InsertItemPosition.FirstItem">
      <summary>The <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template is rendered as the first item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.InsertItemPosition.LastItem">
      <summary>The <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template is rendered as the last item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.IPageableItemContainer">
      <summary>Defines members that a data-bound control must implement in order to have paging functionality provided by the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows">
      <summary>Gets the maximum number of items to display on a single page of data.</summary>
      <returns>The maximum number of items to display on a single page of data.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the properties of a page of data.</summary>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="databind">true to rebind the control after the properties are set; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex">
      <summary>Gets the index of the first record that is displayed on a page of data.</summary>
      <returns>The index of the first record that is displayed on a page of data.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable">
      <summary>Occurs when the data from the data source is made available to the control.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSource">
      <summary>Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates an Order By clause based on values in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> collection.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control creates the Order By clause; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates a Where clause based on values defined in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> collection.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control will create the Where clause; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports navigation through sections of the data at run time.</summary>
      <returns>true if the user can page through the data; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports sorting the data at run time.</summary>
      <returns>true if the user can sort the data; otherwise, false. The default value is true.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
      <summary>Occurs after an instance of the context type object is created.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
      <summary>Occurs before an instance of the context type object is created.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing">
      <summary>Occurs before disposing the context type object.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
      <summary>Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</summary>
      <returns>The name of the class to retrieve data from.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation.</summary>
      <returns>The number of records affected by the delete operation.</returns>
      <param name="keys">The row key values for the records to be deleted.</param>
      <param name="oldValues">The row values that are evaluated to detect data conflicts.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
      <summary>Occurs when a delete operation has finished.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters">
      <summary>This property is not used by the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</summary>
      <returns>A collection of parameters.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
      <summary>Occurs before a delete operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
      <summary>Gets or sets a value that indicates whether data records can be deleted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
      <returns>true if automatic delete operations are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
      <summary>Gets or sets a value that indicates whether data records can be inserted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
      <returns>true if automatic insert operations are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
      <summary>Gets or sets a value that indicates whether data records can be updated through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
      <returns>true if automatic update operations are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.GetView(System.String)">
      <summary>Returns the data source view that is associated with the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> object.</summary>
      <returns>The data source view that is associated with the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> object.</returns>
      <param name="viewName">The name of the view to retrieve, which must be "DefaultView".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewName" /> is null or something other than "DefaultView".</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.GetViewNames">
      <summary>Returns a collection of names that represents the list of view objects that are associated with the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
      <returns>A collection with one element that contains the name "DefaultView".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
      <summary>Gets or sets a value that specifies which properties are used for grouping the retrieved data.</summary>
      <returns>A string that is used to create the Group By clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
      <summary>Gets the collection of parameters that are used to create the Group By clause.</summary>
      <returns>The parameters that are used to create the Group By clause.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
      <summary>Performs an insert operation.</summary>
      <returns>The number of rows affected by the insert operation.</returns>
      <param name="values">The row values to be inserted into the data source.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
      <summary>Occurs when an insert operation has finished.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
      <summary>Occurs before an insert operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
      <summary>Gets the collection of parameters that are used during an insert operation.</summary>
      <returns>The parameters that are used during an insert operation.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.LoadViewState(System.Object)">
      <summary>Loads the state of the values in the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control that must be persisted.</summary>
      <param name="savedState">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)">
      <summary>Initializes the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> object.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
      <summary>Gets or sets a value that specifies which fields are used for ordering the retrieved data.</summary>
      <returns>A string that is used to create the Order By clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
      <summary>Gets the collection of parameters that are used to create the Order By clause.</summary>
      <returns>The parameters that are used for creating the Order By clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
      <summary>Gets or sets the fields that are used for ordering grouped data.</summary>
      <returns>A string that is used to create the Order Groups By clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
      <summary>Gets the collection of parameters that are used to create the Order Groups By clause.</summary>
      <returns>The parameters that are used to create the Order Groups By clause.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.SaveViewState">
      <summary>Saves the current view state of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
      <returns>An object that contains the saved state of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.Select">
      <summary>Gets or sets the properties and calculated values that are included in the retrieved data.</summary>
      <returns>A string that is used to create the Select clause.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Selected">
      <summary>Occurs when a data retrieval operation has finished.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
      <summary>Occurs before a data-retrieval operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
      <summary>Gets the collection of parameters that are used during a data-retrieval operation.</summary>
      <returns>The parameters that are used to create the Select clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
      <summary>Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</summary>
      <returns>true if the values will be stored in view state; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.TableName">
      <summary>Gets or sets the name of the property or field in the data context class that represents a data collection.</summary>
      <returns>A string that contains the name of the property that contains the data collection.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.TrackViewState">
      <summary>Tracks view state changes to the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation.</summary>
      <returns>The number of records affected by the update operation.</returns>
      <param name="keys">The row key values for the records to be updated.</param>
      <param name="values">The row values to be updated in the data source.</param>
      <param name="oldValues">The row values that are evaluated to detect data conflicts.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Updated">
      <summary>Occurs when an update operation has finished.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters">
      <summary>This collection is not used by the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</summary>
      <returns>A collection of parameters.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Updating">
      <summary>Occurs before an update operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.Where">
      <summary>Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</summary>
      <returns>A string that is used to create the Where clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
      <summary>Gets the collection of parameters that is used to create the Where clause.</summary>
      <returns>A collection of the parameters that are used to create the Where clause in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> property.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance">
      <summary>Gets or sets the data context object to create.</summary>
      <returns>The data context object that you have set to the <see cref="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance" /> property; otherwise, null. The default is null. </returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class. </summary>
      <param name="originalObject">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class with the specified exception. </summary>
      <param name="exception">The exception that occurred when validating the data to delete.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception">
      <summary>Gets the exception that was thrown while the data was being validated before the delete operation.</summary>
      <returns>The exception, if an error occurred; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</summary>
      <returns>true if the exception was handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject">
      <summary>Gets the object that represents the data to delete.</summary>
      <returns>An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs" /> class. </summary>
      <param name="instance">The data context object to dispose.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs.ObjectInstance">
      <summary>Gets the data context object to dispose.</summary>
      <returns>An object that represents the data context.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class. </summary>
      <param name="newObject">An object that contains the data to insert.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception. </summary>
      <param name="exception">The exception that occurred when the data to insert was being validated.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception">
      <summary>Gets the exception that was thrown while the data was being validated before the insert operation.</summary>
      <returns>The exception, if an error occurred; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</summary>
      <returns>true if the exception was handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
      <summary>Gets the object that contains the data to insert.</summary>
      <returns>An object that contains the data to insert.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selecting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs" /> class.</summary>
      <param name="arguments">The values that are passed from the data-bound control that determine how the data is paged and sorted. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments" /> property.</param>
      <param name="whereParameters">The collection of parameters that is used to create the Where clause. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters" /> property.</param>
      <param name="orderByParameters">The collection of parameters that is used to create the Order By clause. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters" /> property.</param>
      <param name="groupByParameters">The collection of parameters that is used to create the Group By clause. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters" /> property.</param>
      <param name="orderGroupsByParameters">The collection of parameter that is used to create the clause that is used for sorting grouped data. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters" /> property.</param>
      <param name="selectParameters">The collection of parameters that is used to create the Select clause. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters" /> property.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments">
      <summary>Gets values that determine how the data is returned.</summary>
      <returns>An object that contains values for determining how the data is returned.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters">
      <summary>Gets the collection of parameters that is used to create the GroupBy clause.</summary>
      <returns>An object that contains the parameters for the GroupBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters">
      <summary>Gets the collection of parameters that is used to create the OrderBy clause.</summary>
      <returns>An object that contains the parameters for the OrderBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters">
      <summary>Gets the collection of parameters that are used to create the clause that specifies how grouped data is sorted.</summary>
      <returns>An object that contains the parameters for the clause that specifies how grouped data is sorted.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result">
      <summary>Gets or sets the data object that is used in the data query.</summary>
      <returns>An object that represents the data for the query.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters">
      <summary>Gets the collection of parameters that is used to create the Select clause.</summary>
      <returns>An object that contains the parameters for the Select clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters">
      <summary>Gets the collection of parameters that is used to create the Where clause.</summary>
      <returns>An object that contains the parameters for the Where clause.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" />, and <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> events.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class by using an exception that occurred as a result of the data operation. </summary>
      <param name="exception">The error that occurred during the data operation.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class by using an object that contains the data from the data operation. </summary>
      <param name="result">An object that contains the data that results from a data operation.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception">
      <summary>Gets the exception that was thrown during the data operation.</summary>
      <returns>An <see cref="T:System.Exception" /> object that represents the exception, if an error occurred; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</summary>
      <returns>true if the exception was handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result">
      <summary>Gets the object that represents the result of a data operation.</summary>
      <returns>An object that contains the data from the data operation.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class. </summary>
      <param name="originalObject">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the initial values that were retrieved from the data source.</param>
      <param name="newObject">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the values that will be saved in the data source.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class with the specified exception. </summary>
      <param name="exception">The exception that occurred when validating the data to update.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
      <summary>Gets the exception that was thrown while the data was being validated before the update operation.</summary>
      <returns>The exception, if an error occurred; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</summary>
      <returns>true if the exception was handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
      <summary>Gets the object that contains the values that will be saved in the data source.</summary>
      <returns>An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to save.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
      <summary>Gets the object that contains the values that were originally retrieved from the data source.</summary>
      <returns>An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data that was retrieved from the data source.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
      <summary>Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">Context information about the source or destination. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error, and a collection of references to inner exceptions.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerExceptions">The collection of validation exceptions.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified error message and a reference to the inner exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="info">The object that holds the serialized object data for the exception that is being thrown. </param>
      <param name="context">Context information about the source or destination. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
      <summary>Gets one or more exceptions that occurred when new or modified data was being validated.</summary>
      <returns>A collection that contains the exceptions.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceView">
      <summary>Supports the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control and provides an interface for data-bound controls to perform LINQ data operations.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> class, setting the specified <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control as the owner of the current view.</summary>
      <param name="owner">The data source control that the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object is associated with. </param>
      <param name="name">A unique name for the data source view within the scope of the data source control that owns it. </param>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> instance.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.AutoGenerateOrderByClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports dynamic creation of an OrderBy clause.</summary>
      <returns>true if the clause generation is supported; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.AutoGenerateWhereClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports dynamic creation of a Where clause.</summary>
      <returns>true if the clause generation is supported; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.AutoPage">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports automatic paging.</summary>
      <returns>true if automatic paging is supported; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.AutoSort">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports automatic sorting.</summary>
      <returns>true if automatic sorting is supported; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports the delete operation.</summary>
      <returns>true if the operation is supported; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports the insert operation.</summary>
      <returns>true if the operation is supported; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanPage">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports paging of retrieved data.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports retrieving the total number of data rows, in addition to retrieving the data.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanSort">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports a sorted view of the retrieved data.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanUpdate">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports the update operation.</summary>
      <returns>true if the operation is supported; otherwise, false.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated">
      <summary>Occurs after an instance of the context type object has been created.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating">
      <summary>Occurs before an instance of the context type object is created.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing">
      <summary>Occurs before disposing the context type object.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.ContextType">
      <summary>Gets the type of the data context class.</summary>
      <returns>The type that is associated with the data context class specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName">
      <summary>Gets or sets the name of the data context class that contains the field or property specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> property.</summary>
      <returns>The name of the data context class.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)">
      <summary>Creates an instance of the data context type.</summary>
      <returns>An instance of the data context type.</returns>
      <param name="contextType">The type of the data context to create.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation.</summary>
      <returns>The number of rows that were deleted from the data source.</returns>
      <param name="keys">The row key values for the records to delete.</param>
      <param name="oldValues">The row values that are evaluated to detect data conflicts.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control cannot establish a connection to the underlying data source. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete" /> property is false. </exception>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted">
      <summary>Occurs when a delete operation has finished.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)">
      <summary>Deletes a data object from a table.</summary>
      <param name="dataContext">The data context of the object to delete.</param>
      <param name="table">The table that contains the object to delete.</param>
      <param name="oldDataObject">The object to delete.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.DeleteParameters">
      <summary>Gets the parameters collection that contains the parameters that are used during a delete operation.</summary>
      <returns>A collection that contains the parameters that are used by the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting">
      <summary>Occurs before a delete operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete">
      <summary>Gets or sets a value that indicates whether the data source view supports deleting rows.</summary>
      <returns>true if the data source view supports deleting rows; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert">
      <summary>Gets or sets a value that indicates whether the data source view supports adding new rows.</summary>
      <returns>true if the view supports inserting rows; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate">
      <summary>Gets or sets a value that indicates whether the data source view supports updating rows.</summary>
      <returns>true if the view supports updating rows; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation by using the specified keys and old values.</summary>
      <returns>The number of objects or rows that were deleted from the underlying data source.</returns>
      <param name="keys">The row key values for the records to be deleted.</param>
      <param name="oldValues">The row values that are evaluated to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
      <summary>Performs an insert operation by using the values specified in a collection.</summary>
      <returns>The number of objects or rows that were inserted into the data source.</returns>
      <param name="values">The row values to insert into the data source.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
      <summary>Performs a data retrieval operation.</summary>
      <returns>A list of data objects or rows.</returns>
      <param name="arguments">An object that is used to request operations on the data beyond basic data retrieval.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation.</summary>
      <returns>The number of rows that were updated in the data source.</returns>
      <param name="keys">The row key values for the records to update.</param>
      <param name="values">The row values to update in the data source.</param>
      <param name="oldValues">The row values that are evaluated in order to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.GetDataObjectType(System.Type)">
      <summary>Gets the data object type to use for delete, insert, and update operations.</summary>
      <returns>The data object type.</returns>
      <param name="tableType">The table type.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)">
      <summary>Retrieves metadata about the data collection.</summary>
      <returns>An object that contains type metadata for the data collection. </returns>
      <param name="contextType">An object that represents the data context class.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.GroupBy">
      <summary>Gets or sets the name or names of the properties to use during the select operation for grouping data.</summary>
      <returns>A value that is used to create the GroupBy expression.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.GroupByParameters">
      <summary>Gets a collection of parameters whose values are used to create the GroupBy clause during the select operation.</summary>
      <returns>A collection of the parameters that are used to create the GroupBy clause.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.Insert(System.Collections.IDictionary)">
      <summary>Performs an insert operation.</summary>
      <returns>The number of rows that were inserted into the data source.</returns>
      <param name="values">A dictionary that specifies the data to insert.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control cannot create the data classes. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert" /> property is false. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)">
      <summary>Inserts a data object into a table.</summary>
      <param name="dataContext">The data context of the object.</param>
      <param name="table">The table into which the data is inserted.</param>
      <param name="newDataObject">The object to insert.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted">
      <summary>Occurs when an insert operation has finished.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting">
      <summary>Occurs before an insert operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.InsertParameters">
      <summary>Gets a collection of parameters that are used during the insert operation.</summary>
      <returns>A collection that contains the parameters that are used during the insert operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.IsTrackingViewState">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object is saving changes to its view state.</summary>
      <returns>true if the data source view is marked to save its state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.LoadViewState(System.Object)">
      <summary>Restores the previously saved view state for the data source view.</summary>
      <param name="savedState">The <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> control state to restore.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated" /> event</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" /> event after the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control has completed an insert operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" /> event after the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control has completed a data retrieval operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" /> event before the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control performs a data-retrieval operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" /> event after the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control has completed an update operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" /> event before the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control performs an update operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.OrderBy">
      <summary>Gets or sets the name or names of the properties to use during the select operation for sorting data.</summary>
      <returns>A value that is used to create the OrderBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.OrderByParameters">
      <summary>Gets a collection of parameters that are used to create the OrderBy clause.</summary>
      <returns>The parameters that are used to create the OrderBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.OrderGroupsBy">
      <summary>Gets or sets the names of the properties to use during the select operation for sorting grouped data.</summary>
      <returns>A value that is used to create the OrderGroupsBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.OrderGroupsByParameters">
      <summary>Gets a collection of parameters that are used to create the OrderGroupsBy clause.</summary>
      <returns>The parameters that are used to create the OrderGroupsBy clause.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)">
      <summary>Resets the object that contains data to its original state.</summary>
      <param name="table">The table that contains data.</param>
      <param name="dataObject">The entity that contains the original state of the data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.SaveViewState">
      <summary>Saves the changes to view state for the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> control since the time that the page was posted back to the server.</summary>
      <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> control's view state, or null if there is no view state associated with the object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
      <summary>Retrieves data from the data source.</summary>
      <returns>A list of data rows.</returns>
      <param name="arguments">An object that is used to request operations on the data beyond basic data retrieval.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Selected">
      <summary>Occurs when a data-retrieval operation has completed.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting">
      <summary>Occurs before a data-retrieval operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNew">
      <summary>Gets or sets the properties and calculated values that are included in the retrieved data.</summary>
      <returns>A value that is used to create the Select clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNewParameters">
      <summary>Gets the collection of parameters that are used during a data-retrieval operation.</summary>
      <returns>The parameters that are used to create the Select clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState">
      <summary>Gets or sets a value that indicates that original values from the select operation will be stored in view state when delete or update operations are enabled.</summary>
      <returns>true if original values are saved in view state; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>For a description of this member, see the <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" /> property.</summary>
      <returns>true if the data source view is marked to save its state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</summary>
      <param name="savedState">An object that represents the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> state to restore.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.System#Web#UI#IStateManager#SaveViewState">
      <summary>For a description of this member, see the <see cref="M:System.Web.UI.IStateManager.SaveViewState" /> method.</summary>
      <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> view state, or null if there is no view state associated with the object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.System#Web#UI#IStateManager#TrackViewState">
      <summary>For a description of this member, see the <see cref="P:System.Web.UI.IStateManager.TrackViewState" /> method.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.TableName">
      <summary>Gets or sets the name of a property or field of the data context class that contains the data collection.</summary>
      <returns>The name of the property that represents the data collection.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.TrackViewState">
      <summary>Tracks view state changes.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation.</summary>
      <returns>The number of rows that were updated in the data source.</returns>
      <param name="keys">The row key values for the records to update.</param>
      <param name="values">The row values to update in the data source.</param>
      <param name="oldValues">The row values that are evaluated to detect data conflicts.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Updated">
      <summary>Occurs when an update operation has finished.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)">
      <summary>Updates a data object.</summary>
      <param name="dataContext">The data context class to update.</param>
      <param name="table">The data collection that contains the object to update.</param>
      <param name="oldDataObject">The object to be updated.</param>
      <param name="newDataObject">The updated object.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.UpdateParameters">
      <summary>Gets the collection of parameters that are used during an update operation.</summary>
      <returns>A collection of the parameters that are used during an update operation.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Updating">
      <summary>Occurs before an update operation.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)">
      <summary>Checks whether the data context class derives from <see cref="T:System.Data.Linq.DataContext" />.</summary>
      <param name="contextType">The type of the data context class to validate.</param>
      <param name="selecting">Specifies whether the method has been called when a select operation starts.</param>
      <exception cref="T:System.InvalidOperationException">An insert, update, or delete operation is being performed and the data context class does not derive from <see cref="T:System.Data.Linq.DataContext" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Validates that the conditions exist to perform a delete operation.</summary>
      <param name="keys">A dictionary of key values for the data records to delete.</param>
      <param name="oldValues">A dictionary that contains row values to delete.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.GroupBy" /> or <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNew" /> property contains a value.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete" /> is false.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)">
      <summary>Validates that the conditions exist to perform an insert operation.</summary>
      <param name="values">A dictionary that contains row values to insert.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.GroupBy" /> or <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNew" /> property contains a value or the <paramref name="values" /> parameter does not contain any items.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert" /> is false.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateOrderByParameter(System.String,System.String)">
      <summary>Validates that the OrderBy parameter value is a valid field name for the automatically generated OrderBy clause.</summary>
      <param name="name">The name of the parameter to validate.</param>
      <param name="value">The value of the parameter to validate.</param>
      <exception cref="T:System.InvalidOperationException">The parameter name is not valid.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateParameterName(System.String)">
      <summary>Verifies that the provided parameter name is valid.</summary>
      <param name="name">The parameter name to verify.</param>
      <exception cref="T:System.InvalidOperationException">The parameter name is not valid.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)">
      <summary>Checks whether the type of the class that represents the data table is a generic type.</summary>
      <param name="tableType">The table type to validate.</param>
      <param name="selecting">Specifies whether the method has been called when a select operation starts.</param>
      <exception cref="T:System.InvalidOperationException">The type of the table is not generic.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Validates that the conditions exist to perform an update operation.</summary>
      <param name="keys">A dictionary of key values for the data records to update.</param>
      <param name="values">A dictionary that contains new row values for the update operation.</param>
      <param name="oldValues">A dictionary that contains the old row values for the update operation.</param>
      <exception cref="T:System.NotSupportedException">The update operation is not supported.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.Where">
      <summary>Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</summary>
      <returns>A string that is used to create the Where clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.WhereParameters">
      <summary>Gets a collection of parameters that are used to create the Where clause.</summary>
      <returns>A collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.Where" /> property.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListView">
      <summary>Displays the values of a data source by using user-defined templates. The <see cref="T:System.Web.UI.WebControls.ListView" /> control enables users to select, sort, delete, edit, and insert records. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListView" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.AccessKey">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.AccessKey" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.AccessKey" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.AddControlToContainer(System.Web.UI.Control,System.Web.UI.Control,System.Int32)">
      <summary>Adds the specified control to the specified container.</summary>
      <param name="control">An object that contains the controls to be added to the container.</param>
      <param name="container">The container that is used to store the child controls.</param>
      <param name="addLocation">The location in the controls collection at which to add the child control.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate">
      <summary>Gets or sets the custom content for the alternating data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the alternating data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BackColor">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.BackColor" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Drawing.Color.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.BackColor" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BorderColor">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Drawing.Color.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.BorderColor" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BorderStyle">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.BorderStyle.NotSet" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.BorderStyle" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BorderWidth">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that this property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.BorderWidth" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The collection of child controls for the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ConvertEmptyStringToNull">
      <summary>Gets or sets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</summary>
      <returns>true if empty string values are automatically converted to null values; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateChildControls">
      <summary>Creates the control hierarchy that is used to render the <see cref="T:System.Web.UI.WebControls.ListView" /> control, based on the values that are stored in view state.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)">
      <summary>Creates the control hierarchy that is used to render the <see cref="T:System.Web.UI.WebControls.ListView" /> control by using the specified data source.</summary>
      <returns>The number of items that are created.</returns>
      <param name="dataSource">An object that contains the data source for the <see cref="T:System.Web.UI.WebControls.ListView" /> control. </param>
      <param name="dataBinding">true to indicate that the child controls are bound to data; false to indicate that the control will re-create itself from view state during a postback. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="dataSource" /> returns null for <see cref="T:System.Web.UI.DataSourceView" />.-or-<paramref name="dataSource" /> does not implement the <see cref="T:System.Collections.ICollection" /> interface and cannot return a <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" /> value.-or-<paramref name="dataSource" /> does not implement the <see cref="T:System.Collections.ICollection" /> interface and <paramref name="dataBinding" /> is set to false.-or-The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have a group placeholder specified. -or-The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an item placeholder specified.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateControlStyle">
      <summary>Creates the default style for the control.</summary>
      <returns>The style for the <see cref="T:System.Web.UI.WebControls.ListView" /> control. </returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to invoke the <see cref="M:System.Web.UI.WebControls.ListView.CreateControlStyle" /> method.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateDataItem(System.Int32,System.Int32)">
      <summary>Creates a data item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>A data item that is created by using the specified parameters.</returns>
      <param name="dataItemIndex">The index of the data item in the underlying data source object.</param>
      <param name="displayIndex">The display index of the data item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments">
      <summary>Creates the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that contains the arguments that are passed to the data source.</summary>
      <returns>The arguments that are passed to the data source.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateEmptyDataItem">
      <summary>Creates the <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> template in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateEmptyItem">
      <summary>Creates an empty item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The empty item that was created.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateInsertItem">
      <summary>Creates an insert item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The insert item that was created.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template specified. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)">
      <summary>Creates a <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object with the specified type.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object with the specified type.</returns>
      <param name="itemType">One of the <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> values.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)">
      <summary>Creates the <see cref="T:System.Web.UI.WebControls.ListView" /> control hierarchy in groups. </summary>
      <returns>An object that contains all the data items of the current page of data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
      <param name="dataSource">The data source.</param>
      <param name="dataBinding">true to indicate that the <see cref="T:System.Web.UI.WebControls.ListView" /> control is bound to data; otherwise, false.</param>
      <param name="insertPosition">One of the <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> values.</param>
      <param name="keyArray">An array that represents the data-key value of each item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an item placeholder specified.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)">
      <summary>Creates the <see cref="T:System.Web.UI.WebControls.ListView" /> control hierarchy without groups.</summary>
      <returns>An object that contains all the data items of the current page of data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
      <param name="dataSource">The data source.</param>
      <param name="dataBinding">true to indicate that the <see cref="T:System.Web.UI.WebControls.ListView" /> control is bound to data; otherwise, false.</param>
      <param name="insertPosition">One of the <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> values.</param>
      <param name="keyArray">An array that represents the data-key value of each item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate">
      <summary>Creates the root container in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.CssClass">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.CssClass" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.CssClass" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.DataKeyNames">
      <summary>Gets or sets an array that contains the names of the primary key fields for the items displayed in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An array that contains the names of the primary key fields for the items displayed in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.DataKeys">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.DataKey" /> objects that represent the data-key value for each item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the data key for each item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)">
      <summary>Deletes the record at the specified index from the data source.</summary>
      <param name="itemIndex">The index of the item to delete.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="itemIndex" /> is less than 0.-or-The <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.ListView" /> control is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EditIndex">
      <summary>Gets or sets the index of the item being edited.</summary>
      <returns>The zero-based index of the item being edited. The default is -1, which indicates that no item is being edited.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.ListView.EditIndex" /> property is set to a value less than -1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EditItem">
      <summary>Gets the item that is in edit mode in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The item that is in edit mode in a <see cref="T:System.Web.UI.WebControls.ListView" /> control, or null if no item is in edit mode.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EditItemTemplate">
      <summary>Gets or sets the custom content for the item in edit mode.</summary>
      <returns>An object that contains the custom content for the item in edit mode. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate">
      <summary>Gets or sets the user-defined content for the empty template that is rendered when a <see cref="T:System.Web.UI.WebControls.ListView" /> control is bound to a data source that does not contain any records.</summary>
      <returns>An object that contains the custom content for the empty template. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate">
      <summary>Gets or sets the user-defined content for the empty item that is rendered in a <see cref="T:System.Web.UI.WebControls.ListView" /> control when there are no more data items to display in the last row of the current data page.</summary>
      <returns>An object that contains the custom content for the empty item. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate">
      <summary>Ensures that the <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> content is correctly created in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.ExtractItemValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.ListViewItem,System.Boolean)">
      <summary>Retrieves the values of each field that is declared in the specified item, and stores them in the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object.</summary>
      <param name="itemValues">A dictionary object that is used to store the field values.</param>
      <param name="item">The <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object from which to retrieve the field values.</param>
      <param name="includePrimaryKey">true to include the primary key field or fields; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemValues" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="item" /> is not a <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> object.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.FindPlaceholder(System.String,System.Web.UI.Control)">
      <summary>Searches the specified container for a control that has the specified identifier.</summary>
      <returns>The specified control, or null if the specified control cannot be found.</returns>
      <param name="containerID">The identifier for the control to be found.</param>
      <param name="container">The container to be searched.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Font">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.Font" /> property. This property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>This property is not supported, and throws a <see cref="T:System.NotSupportedException" /> error.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to access the <see cref="P:System.Web.UI.WebControls.ListView.Font" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ForeColor">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Drawing.Color.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.ForeColor" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupItemCount">
      <summary>Gets or sets the number of items to display per group in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The number of items to display per group in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is 1, which indicates that the <see cref="T:System.Web.UI.WebControls.ListView" /> control will display one item per group. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" /> property is set to a value less than 1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID">
      <summary>Gets or sets the ID for the group placeholder in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The ID for the group placeholder in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is "groupPlaceholder".</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified ID is null or an empty string.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate">
      <summary>Gets or sets the user-defined content for the separator between groups in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the group separator. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupTemplate">
      <summary>Gets or sets the user-defined content for the group container in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the group container in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Height">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.Height" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.Height" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertItem">
      <summary>Gets the insert item of a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that represents the insert item of a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertItemPosition">
      <summary>Gets or sets the location of the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template when it is rendered as part of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> values. The default is <see cref="F:System.Web.UI.WebControls.InsertItemPosition.None" />, which indicates that the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> content will not be rendered by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertItemTemplate">
      <summary>Gets or sets the custom content for an insert item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object  that contains the custom content for the insert item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)">
      <summary>Inserts the current record in the data source.</summary>
      <param name="causesValidation">true to perform page validation when this method is called; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an insert item.-or-The <see cref="T:System.Web.UI.DataSourceView" /> object associated with the <see cref="T:System.Web.UI.WebControls.ListView" /> control is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateEmptyDataTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateEmptyItemTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateGroupSeparatorTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateGroupTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> template.</summary>
      <param name="container">A container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateInsertItemTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateItemSeparatorTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateItemTemplate(System.Web.UI.Control,System.Int32)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using child controls from one of the <see cref="T:System.Web.UI.WebControls.ListView" /> control templates.</summary>
      <param name="container">The container that is used to store the child controls.</param>
      <param name="displayIndex">The display index of the item that is being instantiated.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an <see cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" /> template specified.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemCanceling">
      <summary>Occurs when a cancel operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control cancels the insert or edit operation.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemCommand">
      <summary>Occurs when a button in a <see cref="T:System.Web.UI.WebControls.ListView" /> control is clicked.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemCreated">
      <summary>Occurs when an item is created in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemDataBound">
      <summary>Occurs when a data item is bound to data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemDeleted">
      <summary>Occurs when a delete operation is requested, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control deletes the item.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemDeleting">
      <summary>Occurs when a delete operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control deletes the item.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemEditing">
      <summary>Occurs when an edit operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> item is put in edit mode.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemInserted">
      <summary>Occurs when an insert operation is requested, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control has inserted the item in the data source.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemInserting">
      <summary>Occurs when an insert operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control performs the insert.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID">
      <summary>Gets or sets the ID for the item placeholder in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The ID for the item placeholder in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is "itemPlaceholder".</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified ID is null or an empty string.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Items">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> objects that represent the data items of the current page of data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains all the data items of the current page of data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate">
      <summary>Gets or sets the custom content for the separator between the items in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the separator between the items of the <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ItemTemplate">
      <summary>Gets or sets the custom content for the data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemUpdated">
      <summary>Occurs when an update operation is requested, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control updates the item.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemUpdating">
      <summary>Occurs when an update operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control updates the item.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.LayoutCreated">
      <summary>Occurs when the <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> template is created in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.LayoutTemplate">
      <summary>Gets or sets the custom content for the root container in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the root container in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.LoadControlState(System.Object)">
      <summary>Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.ListView" /> control that must be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</summary>
      <param name="savedState">An object that contains the saved control state values for the control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.LoadViewState(System.Object)">
      <summary>Loads the previously saved view state of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <param name="savedState">An object that contains the saved view state values for the control.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.MaximumRows">
      <summary>Gets the maximum number of items to display on a single page of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The maximum number of items to display on a single page of the <see cref="T:System.Web.UI.WebControls.ListView" /> control. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether an event for the <see cref="T:System.Web.UI.WebControls.ListView" /> control should be handled.</summary>
      <returns>true if the event should be handled; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">There is no handler for the <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> event.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">There is no handler for the <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> event.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.Sorted" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged">
      <summary>Occurs when the page properties change, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control sets the new values.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging">
      <summary>Occurs when the page properties change, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control sets the new values.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)">
      <summary>Binds the <see cref="T:System.Web.UI.WebControls.ListView" /> control to the specified data source.</summary>
      <param name="data">An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface and that contains the data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.PerformSelect">
      <summary>Retrieves data from the associated data source.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.RemoveItems">
      <summary>Deletes all child controls in an item or group container of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the Web server control content to the client's browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The object that is used to render the server control content on the client's browser.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SaveControlState">
      <summary>Saves the state of the properties in the <see cref="T:System.Web.UI.WebControls.ListView" /> control that must be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</summary>
      <returns>Returns the server control's current view state. If there is no view state associated with the control, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SaveViewState">
      <summary>Saves the current view state of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the saved view state values for the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedDataKey">
      <summary>Gets the data-key value for the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The data key for the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that no item is currently selected. </returns>
      <exception cref="T:System.InvalidOperationException">No data keys are specified in the <see cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedIndex">
      <summary>Gets or sets the index of the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The zero-based index of the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is -1, which indicates that no item is currently selected. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" /> property is set to a value less than -1. </exception>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged">
      <summary>Occurs when an item's Select button is clicked, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control handles the select operation.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging">
      <summary>Occurs when an item's Select button is clicked, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control handles the select operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate">
      <summary>Gets or sets the custom content for the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedValue">
      <summary>Gets the data-key value of the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The data-key value of the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the properties of a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="databind">true to rebind the control after the properties are set; otherwise, false.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumRows" /> is less than 1.-or-<paramref name="startRowIndex" /> is less than 0.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.Sort(System.String,System.Web.UI.WebControls.SortDirection)">
      <summary>Sorts the <see cref="T:System.Web.UI.WebControls.ListView" /> control, depending on the specified sort expression and direction.</summary>
      <param name="sortExpression">The sort expression to sort the <see cref="T:System.Web.UI.WebControls.ListView" /> control with.</param>
      <param name="sortDirection">One of the <see cref="T:System.Web.UI.WebControls.SortDirection" /> values.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is bound to a data source control, but the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the data source is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SortDirection">
      <summary>Gets the sort direction of the field or fields that are being sorted.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SortDirection" /> values. The default is SortDirection.Ascending.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.Sorted">
      <summary>Occurs when a sort operation is requested, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control handles the sort operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SortExpression">
      <summary>Gets the sort expression that is associated with the field or fields that are being sorted.</summary>
      <returns>The sort expression that is associated with the field or fields that are being sorted.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.Sorting">
      <summary>Occurs when a sort operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control handles the sort operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.StartRowIndex">
      <summary>Gets the index of the first record that is displayed on a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The index of the first record that is displayed on a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#MaximumRows">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />.</summary>
      <returns>The maximum number of items to display on a single page of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />.</summary>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="databind">true to rebind the control after the properties are set; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#StartRowIndex">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />.</summary>
      <returns>The index of the first record that is displayed on a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" />.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.TabIndex">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.TabIndex" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>0, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.TabIndex" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ToolTip">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.ToolTip" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.ToolTip" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)">
      <summary>Updates the record at the specified index in the data source.</summary>
      <param name="itemIndex">The index of the item to update.</param>
      <param name="causesValidation">true to perform page validation when this method is called; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="itemIndex" /> is less than 0.-or-The <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.ListView" /> control is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Width">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.Width" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.Width" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewCancelEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewCancelEventArgs.#ctor(System.Int32,System.Web.UI.WebControls.ListViewCancelMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewCancelEventArgs" /> class.</summary>
      <param name="itemIndex">The index of the item that contains the Cancel button that raised the event.</param>
      <param name="cancelMode">One of the <see cref="T:System.Web.UI.WebControls.ListViewCancelMode" /> values that indicates which operation the user canceled.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCancelEventArgs.CancelMode">
      <summary>Gets the data-entry mode that the <see cref="T:System.Web.UI.WebControls.ListView" /> control was in when the Cancel button was clicked.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ListViewCancelMode" /> values.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCancelEventArgs.ItemIndex">
      <summary>Gets the index of the item that contains the Cancel button that raised the event.</summary>
      <returns>The zero-based index of the item that contains the Cancel button that raised the event.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewCancelMode">
      <summary>Determines the type of operation that the user was performing when the Cancel button was clicked in a <see cref="T:System.Web.UI.WebControls.ListView" /> item.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewCancelMode.CancelingEdit">
      <summary>The user canceled an edit operation.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewCancelMode.CancelingInsert">
      <summary>The user canceled an insert operation.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewCommandEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewCommandEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewCommandEventArgs" /> class by using the specified source of the command and event arguments.</summary>
      <param name="item">The item from the <see cref="T:System.Web.UI.WebControls.ListView" /> control for which the command was issued.</param>
      <param name="commandSource">The source of the command.</param>
      <param name="originalArgs">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource">
      <summary>Gets the source of the command.</summary>
      <returns>The source of the command.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCommandEventArgs.Item">
      <summary>Gets the data item for which the command was issued.</summary>
      <returns>The data item from the <see cref="T:System.Web.UI.WebControls.ListView" /> control for which the command was issued.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewDataItem">
      <summary>Represents an individual data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDataItem.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> class.</summary>
      <param name="dataItemIndex">The index of the <see cref="P:System.Web.UI.WebControls.ListViewDataItem.DataItem" /> in the underlying data source object.</param>
      <param name="displayIndex">The position of the data item as displayed in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDataItem.DataItem">
      <summary>Gets or sets the underlying data object that the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object is bound to.</summary>
      <returns>The underlying data object that the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object is bound to.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDataItem.DataItemIndex">
      <summary>Gets the index of the <see cref="P:System.Web.UI.WebControls.ListViewDataItem.DataItem" /> in the underlying data source object.</summary>
      <returns>The zero-based index of the <see cref="P:System.Web.UI.WebControls.ListViewDataItem.DataItem" /> in the underlying data source object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex">
      <summary>Gets the position of the data item as displayed in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The zero-based position of the data item as displayed in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDataItem.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether to pass an event up the page's ASP.NET server control hierarchy.</summary>
      <returns>true if the event has been sent to the parent control; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewDeletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDeletedEventArgs.#ctor(System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewDeletedEventArgs" /> class.</summary>
      <param name="affectedRows">The number of rows that were affected by the delete operation.</param>
      <param name="exception">The exception that was raised when the delete operation was performed, if any. If no exception was raised, use null.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.AffectedRows">
      <summary>Gets the number of rows that were affected by the delete operation.</summary>
      <returns>The number of rows that were affected by the delete operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.Exception">
      <summary>Gets the exception, if any, that was raised during the delete operation.</summary>
      <returns>The exception that was raised during the delete operation, if any; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether an exception that was raised during the delete operation was handled in the event handler.</summary>
      <returns>true if the exception was handled in the event handler; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.Keys">
      <summary>Gets the key or keys for the deleted item.</summary>
      <returns>The key or keys for the deleted item.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.Values">
      <summary>Gets the non-key field values for the deleted item.</summary>
      <returns>The non-key field values for the deleted item.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewDeleteEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDeleteEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" /> class.</summary>
      <param name="itemIndex">The index of the item that contains the Delete button that raised the event. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeleteEventArgs.ItemIndex">
      <summary>Gets the index of the item being deleted.</summary>
      <returns>The zero-based index of the item being deleted.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys">
      <summary>Gets a dictionary of field name/value pairs that represent the primary key or keys of the item to delete.</summary>
      <returns>An object that contains the name/value pairs that represent the primary key or keys of the item to delete.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeleteEventArgs.Values">
      <summary>Gets a dictionary of the non-key field name/value pairs in the item to delete.</summary>
      <returns>An object that contains the non-key field name/value pairs of the item to delete.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewEditEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewEditEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" /> class.</summary>
      <param name="newEditIndex">The index of the item to edit. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewEditEventArgs.NewEditIndex">
      <summary>Gets the index of the item that is being edited.</summary>
      <returns>The index of the item that is being edited.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewInsertedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" /> class.</summary>
      <param name="affectedRows">The number of rows affected by the insert operation.</param>
      <param name="exception">The exception that is raised when the insert operation was performed, if any. If no exception was raised, use null for this parameter.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows">
      <summary>Gets the number of rows affected by the insert operation.</summary>
      <returns>The number of rows affected by the insert operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception">
      <summary>Gets the exception (if any) that was raised during the insert operation.</summary>
      <returns>The exception that was raised during the insert operation, or null if no exception was raised.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled">
      <summary>Gets or sets a that indicates whether an exception that was raised during the insert operation was handled in the event handler.</summary>
      <returns>true if the exception was handled in the event handler; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode">
      <summary>Gets or sets a value that indicates whether the user's input values are preserved for the controls inside the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template.</summary>
      <returns>true if the user's input values are preserved for the controls inside the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template; false if the user's input values are replaced with the default values for the controls. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values">
      <summary>Gets field name/value pairs for the inserted record.</summary>
      <returns>The field name/value pairs for the inserted record.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewInsertEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewInsertEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" /> class.</summary>
      <param name="item">The data item that is being inserted into the data source.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Item">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object that represents the data item to be inserted.</summary>
      <returns>The data item to be inserted.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Values">
      <summary>Gets the values for the record to insert.</summary>
      <returns>The values for the record to insert.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewItem">
      <summary>Represents an individual item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewItem.#ctor(System.Web.UI.WebControls.ListViewItemType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> class.</summary>
      <param name="itemType">One of the <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> enumeration values.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItem.ItemType">
      <summary>Gets the item type of the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> values.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewItem.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether to pass an event up the page's ASP.NET server control hierarchy.</summary>
      <returns>true if the event has been canceled; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewItemEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> and <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> events.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewItemEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" /> class.</summary>
      <param name="item">The item being created or data-bound.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItemEventArgs.Item">
      <summary>Gets the item that is being created or bound to data.</summary>
      <returns>The item that is being created or bound to data.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewItemType">
      <summary>Specifies the function of an item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewItemType.DataItem">
      <summary>A data item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewItemType.InsertItem">
      <summary>An insert item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewItemType.EmptyItem">
      <summary>An empty item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control. The empty item is displayed when the <see cref="T:System.Web.UI.WebControls.ListView" /> control has no records to display, or when a group in the <see cref="T:System.Web.UI.WebControls.ListView" /> control has no more records to display.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewPagedDataSource">
      <summary>Encapsulates the paging-related properties of a <see cref="T:System.Web.UI.WebControls.ListView" /> control. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewPagedDataSource" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging">
      <summary>Gets or sets a value that indicates whether server-based paging is enabled.</summary>
      <returns>true if server-based paging is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the items from the data source to the specified <see cref="T:System.Array" /> object, starting at the specified index in <see cref="T:System.Array" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> object that receives the copied items from the data source.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> object to receive the copied contents.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.Count">
      <summary>Gets the number of items that will be used from the data source for the current page.</summary>
      <returns>The number of items that will be used from the data source for the current page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource">
      <summary>Gets or sets the data source.</summary>
      <returns>An object that implements <see cref="T:System.Collections.IEnumerable" /> that represents the data source.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount">
      <summary>Gets the number of items in the data source.</summary>
      <returns>The number of items in the data source.</returns>
      <exception cref="T:System.InvalidOperationException">The data source object does not implement the <see cref="T:System.Collections.ICollection" /> interface.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator">
      <summary>Returns an object that implements <see cref="T:System.Collections.IEnumerator" /> and that contains all items in the data source.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that contains all items in the data source.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that represents the properties that are used to bind data.</summary>
      <returns>The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that represents the properties that are used to bind data.</returns>
      <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the collection as bindable. This can be null.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Returns the name of the list. This method does not apply to this class.</summary>
      <returns>An empty string in all cases.</returns>
      <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that this list name is returned for. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.ListViewPagedDataSource" /> object is read-only.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled">
      <summary>Gets a value that indicates whether server-based paging is enabled.</summary>
      <returns>true if server-based paging is indicated by using the <see cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging" /> property; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized">
      <summary>Gets a value that indicates whether access to the data source is synchronized (thread-safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows">
      <summary>Gets or sets the maximum number of items to display on a single page.</summary>
      <returns>The maximum number of items to display on a single page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex">
      <summary>Gets or sets the index of the first record displayed on the page.</summary>
      <returns>The index of the first record displayed on the page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount">
      <summary>Gets or sets the total number of items in the data source when server-based paging is being used.</summary>
      <returns>The total number of items in the data source when server-based paging is being used.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewSelectEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewSelectEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewSelectEventArgs" /> class.</summary>
      <param name="newSelectedIndex">The index of the new item to select in the <see cref="T:System.Web.UI.WebControls.ListView" /> control. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewSelectEventArgs.NewSelectedIndex">
      <summary>Gets or sets the index of the new item to select in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The index of the new item to select in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewSortEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewSortEventArgs.#ctor(System.String,System.Web.UI.WebControls.SortDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewSortEventArgs" /> class.</summary>
      <param name="sortExpression">The sort expression that is used to sort the items in the control.</param>
      <param name="sortDirection">A <see cref="T:System.Web.UI.WebControls.SortDirection" /> value that indicates the direction in which to sort the items in the control.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewSortEventArgs.SortDirection">
      <summary>Gets or sets the direction in which to sort the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SortDirection" /> values.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewSortEventArgs.SortExpression">
      <summary>Gets or sets the expression that is used to sort the items in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The expression that is used to sort the items in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" /> class.</summary>
      <param name="affectedRows">The number of rows that were affected by the update operation.</param>
      <param name="exception">The exception that was raised when the update operation was performed, if any. If no exception is raised, use null.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows">
      <summary>Gets the number of rows that were affected by the update operation.</summary>
      <returns>The number of rows that were affected by the update operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception">
      <summary>Gets the exception, if any, that was raised during the update operation.</summary>
      <returns>The exception that was raised during the update operation, if any; if no exception was raised, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether an exception that was raised during the update operation was handled during the event.</summary>
      <returns>true if the exception was handled in the event handler; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.ListView" /> control should remain in edit mode after an update operation.</summary>
      <returns>true if the control should remain in edit mode after an update operation; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues">
      <summary>Gets a dictionary that contains the new values for the updated item.</summary>
      <returns>The new values for the updated item.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues">
      <summary>Gets a dictionary that contains the original values for the updated item.</summary>
      <returns>The original values for the updated item.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewUpdateEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewUpdateEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" /> class.</summary>
      <param name="itemIndex">The index of the item being updated.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex">
      <summary>Gets the index of the data item that is being updated.</summary>
      <returns>The index of the data item that is being updated.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys">
      <summary>Gets a dictionary of field name/value pairs that represent the key or keys of the item to update.</summary>
      <returns>The field name/value pairs that represent the key or keys of the item to update.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues">
      <summary>Gets a dictionary that contains the revised values of the item to update.</summary>
      <returns>The revised values of the item to update.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues">
      <summary>Gets a dictionary that contains the original values of the item to update.</summary>
      <returns>The original values of the item to update.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.NextPreviousPagerField">
      <summary>Represents a field that displays navigation controls in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control enable users to page through data.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonCssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class that is used to render the buttons of the pager field on the browser.</summary>
      <returns>The CSS class used to render the buttons of the pager field on the client. The default is an empty string, which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonCssClass" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonType">
      <summary>Gets or sets the button type to display in the pager field.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is ButtonType.Link.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonType" /> property is not one of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataPagerField" /> to copy the properties of the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> to.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates the user interface (UI) controls for the pager field object and adds them to the specified container.</summary>
      <param name="container">The container that is used to store the controls.</param>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="totalRowCount">The total number of items.</param>
      <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.CreateField">
      <summary>Creates and returns a new instance of the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> class.</summary>
      <returns>A new instance of the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> class.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false.</returns>
      <param name="o">The object to compare with the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> instance.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.FirstPageImageUrl">
      <summary>Gets or sets the URL to an image that is displayed for the first-page button.</summary>
      <returns>The URL to an image that is displayed for the first-page button. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.FirstPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.FirstPageText">
      <summary>Gets or sets the text that is displayed for the first-page button.</summary>
      <returns>The text that is displayed for the first-page button. The default is "First".</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> class.</summary>
      <returns>A hash code for the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Handles events that occur in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> control and performs the appropriate action.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.LastPageImageUrl">
      <summary>Gets or sets the URL to an image that is displayed for the last-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>The URL to an image that is displayed for the last-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.LastPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.LastPageText">
      <summary>Gets or sets the text that is displayed for the last-page button.</summary>
      <returns>The text that is displayed for the last-page button. The default is "Last".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.NextPageImageUrl">
      <summary>Gets or sets the URL to an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>The URL to an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.NextPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.NextPageText">
      <summary>Gets or sets the text that is displayed for the next-page button.</summary>
      <returns>The text that is displayed for the next-page button. The default is "Next".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.PreviousPageImageUrl">
      <summary>Gets or sets the URL to an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>The URL to an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.PreviousPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.PreviousPageText">
      <summary>Gets or sets the text that is displayed for the previous-page button.</summary>
      <returns>The text that is displayed for the previous-page button. The default is "Previous".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.RenderDisabledButtonsAsLabels">
      <summary>Gets or sets a value that indicates whether disabled buttons are rendered as <see cref="T:System.Web.UI.WebControls.Label" /> controls by the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if disabled buttons are rendered as <see cref="T:System.Web.UI.WebControls.Label" /> controls; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.RenderNonBreakingSpacesBetweenControls">
      <summary>Gets or sets a value that indicates whether non-breaking spaces are rendered between controls.</summary>
      <returns>true if non-breaking spaces are rendered between controls; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowFirstPageButton">
      <summary>Gets or sets a value that indicates whether the first-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the first-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowLastPageButton">
      <summary>Gets or sets a value that indicates whether the last-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the last-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowNextPageButton">
      <summary>Gets or sets a value that indicates whether the next-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the next-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowPreviousPageButton">
      <summary>Gets or sets a value that indicates whether the previous-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the previous-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.NumericPagerField">
      <summary>Represents a <see cref="T:System.Web.UI.WebControls.DataPager" /> field that enables users to select a page by page number.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.ButtonCount">
      <summary>Gets or sets the number of buttons to display in a <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
      <returns>The number of buttons to display in a <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. The default is 5.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.NumericPagerField.ButtonCount" /> property is set to a value less than 1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.ButtonType">
      <summary>Gets or sets the button type to display in the pager field.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is <see cref="F:System.Web.UI.WebControls.ButtonType.Link" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for the <see cref="P:System.Web.UI.WebControls.NumericPagerField.ButtonType" /> property is not one of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to copy the properties of the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object to.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates the user interface (UI) controls for the pager field object and adds them to the specified container.</summary>
      <param name="container">The container that is used to store the controls.</param>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="totalRowCount">The total number of items.</param>
      <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.CreateField">
      <summary>Creates and returns a new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</summary>
      <returns>A new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.CurrentPageLabelCssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class that is used to style the current page number.</summary>
      <returns>The CSS class that is used to style the current page number in the browser. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.CurrentPageLabelCssClass" /> property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. </summary>
      <returns>true if the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object; otherwise, false.</returns>
      <param name="o">The object to compare with the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> instance.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</summary>
      <returns>A hash code for the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. For more information, see the <see cref="M:System.Object.GetHashCode" /> class.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Handles events that occur in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object and performs the appropriate action.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl">
      <summary>Gets or sets the URL of an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
      <returns>The URL of an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NextPageText">
      <summary>Gets or sets the text that is displayed for the next-page button.</summary>
      <returns>The text that is displayed for the next-page button. The default is "…".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NextPreviousButtonCssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class that is used to style the next-page and previous-page buttons of the pager field.</summary>
      <returns>The CSS class that is used to style the next-page and previous-page buttons of the pager field. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.NextPreviousButtonCssClass" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NumericButtonCssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class that is used to style the page-number buttons of the pager field.</summary>
      <returns>The CSS class that is used to style the page-number buttons of the pager field. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.NumericButtonCssClass" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.PreviousPageImageUrl">
      <summary>Gets or sets the URL of an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
      <returns>The URL to an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.PreviousPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.PreviousPageText">
      <summary>Gets or sets the text that is displayed for the previous-page button.</summary>
      <returns>The text that is displayed for the previous-page button. The default is "…".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.RenderNonBreakingSpacesBetweenControls">
      <summary>Gets or sets a value that indicates whether non-breaking spaces will be rendered between controls.</summary>
      <returns>true if non-breaking spaces will be rendered between controls; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.PageEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> event of a class that implements the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.PageEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.PageEventArgs" /> class. </summary>
      <param name="startRowIndex">The index of the first record on a page of data.</param>
      <param name="maximumRows">The maximum number of items to display on each page of data.</param>
      <param name="totalRowCount">The total number of records.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.PageEventArgs.MaximumRows">
      <summary>Gets the maximum number of records to display on each page.</summary>
      <returns>The maximum number of records to display on each page. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.PageEventArgs.StartRowIndex">
      <summary>Gets the index of the first record on a page.</summary>
      <returns>The index of the first record on a page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.PageEventArgs.TotalRowCount">
      <summary>Gets the total number of records in the underlying data source.</summary>
      <returns>The total number of records of the underlying data source.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.PagePropertiesChangingEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.PagePropertiesChangingEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.PagePropertiesChangingEventArgs" /> class. </summary>
      <param name="startRowIndex">The index of the first item of the page. </param>
      <param name="maximumRows">The maximum number of items to display on each page of data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.PagePropertiesChangingEventArgs.MaximumRows">
      <summary>Gets the maximum number of items to display on each page of data.</summary>
      <returns>The maximum number of items to display in a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.PagePropertiesChangingEventArgs.StartRowIndex">
      <summary>Gets the index of the first item of the page. </summary>
      <returns>The index of the first item to display in a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TemplatePagerField">
      <summary>Represents a <see cref="T:System.Web.UI.WebControls.DataPager" /> field that enables you to create a custom paging UI.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="newField">The object to which the properties of the current <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> instance will be copied.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates the user interface (UI) controls for the pager field object and adds them to the specified container.</summary>
      <param name="container">The container that is used to store the controls.</param>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="totalRowCount">The total number of items.</param>
      <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.CreateField">
      <summary>Creates and returns a new instance of the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> class.</summary>
      <returns>A new instance of the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> class.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Handles events that occur in the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> object and performs the appropriate action.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.OnPagerCommand(System.Web.UI.WebControls.DataPagerCommandEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand" /> event. </summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">There is no handler for the <see cref="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand" /> event.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand">
      <summary>Occurs when a button is clicked in a <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplatePagerField.PagerTemplate">
      <summary>Gets or sets the custom content for the pager field in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>A template object that contains the custom content for the pager field in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> class that is associated with this control.</summary>
      <returns>An object that acts as the interface for data-bound controls.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
      <summary>Gets or sets the value that indicates whether changes to the data context object are tracked.</summary>
      <returns>true if the data context object is tracked for changes; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
      <summary>For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</summary>
      <returns>The type that is associated with the class.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
      <summary>For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</summary>
      <returns>The name of the entity.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#Exception">
      <summary>For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" /> class for the specified data operation. </summary>
      <param name="operation">The data operation that is being performed.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation">
      <summary>Gets the data operation that is being performed.</summary>
      <returns>A value that represents the type of data operation that is being performed.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class with an object that contains the data from the data operation and the number of rows returned.</summary>
      <param name="result">An object that contains the data that results from a data operation.</param>
      <param name="totalRowCount">The number of rows that were returned from a data retrieval operation.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount">
      <summary>Gets the total number of rows in a data set from a data-retrieval operation.</summary>
      <returns>The total number of rows in a data set from the data retrieval operation; -1 if the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> object was created during a data modification operation; -1 if you enabled customized paging by setting <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> to true and by setting <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> to false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking">
      <summary>Gets or sets a value that indicates whether changes to the data-context object are tracked.</summary>
      <returns>true if the data-context object is tracked for changes; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)">
      <summary>Raises the <see cref="E:System.Web.DynamicData.IDynamicDataSource.Exception" /> event when a data operation fails.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EnableModelValidation">
      <summary>Gets or sets a value that indicates whether a validator control will handle exceptions that occur during insert or update operations. </summary>
      <returns>true if a validator control will handle exceptions that occur during insert or update operations; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedPersistedDataKey">
      <summary>Gets or sets the data-key value for the persisted selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The data key for the persisted selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that no item is currently selected.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPersistedSelector#DataKey">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.WebControls.IPersistedSelector.DataKey" />.</summary>
      <returns>The data-key value for the selected record in a data-bound control.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataSourceOperation">
      <summary>Describes the type of operation that is being performed by the data source object.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Delete">
      <summary>The data source object is performing a delete operation.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Insert">
      <summary>The data source object is performing an insert operation.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Select">
      <summary>The data source object is performing a select operation.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Update">
      <summary>The data source object is performing an update operation.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.ContextCreate">
      <summary>The data source object is creating the data context object.</summary>
    </member>
    <member name="T:System.Web.DynamicData.DynamicValidatorEventArgs">
      <summary>Base class for <see cref="T:System.Web.DynamicData.DynamicValidator" /> classes that contain event data.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> class, using the exception that occurred and the data source operation that caused the exception.</summary>
      <param name="exception">The exception that occurred.</param>
      <param name="operation">The data source operation that caused the exception.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception">
      <summary>Gets the exception that occurs during a data source operation event.</summary>
      <returns>The exception that occurred during the data source operation event.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation">
      <summary>Gets the data source operation that caused an exception in the <see cref="T:System.Web.DynamicData.DynamicValidator" /> class.</summary>
      <returns>The data source operation that caused the exception.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IDynamicDataSource">
      <summary>Represents a data source for a Dynamic Data control.</summary>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> control dynamically creates a Where clause that is based on values defined in the <see cref="P:System.Web.DynamicData.IDynamicDataSource.WhereParameters" /> collection.</summary>
      <returns>true if the data source control creates the Where clause dynamically; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.ContextType">
      <summary>Gets the type of the <see cref="T:System.Data.Linq.DataContext" /> class.</summary>
      <returns>The type of the class.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EnableDelete">
      <summary>Gets or sets a value that indicates whether the data source view supports deleting rows.</summary>
      <returns>true if the data source view supports deleting rows; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EnableInsert">
      <summary>Gets or sets a value that indicates whether the data source view supports inserting rows.</summary>
      <returns>true if the data source view supports inserting rows; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate">
      <summary>Gets or sets a value that indicates whether the data source view supports updating rows.</summary>
      <returns>true if the view supports updating rows; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EntitySetName">
      <summary>Gets or sets the entity set name.</summary>
      <returns>The name of the entity.</returns>
    </member>
    <member name="E:System.Web.DynamicData.IDynamicDataSource.Exception">
      <summary>Occurs when a data field fails to validate.</summary>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.Where">
      <summary>Gets or sets a value that specifies the condition that must be true for a record to be included in the retrieved data by a Where clause.</summary>
      <returns>The value that is used to create the Where clause.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.WhereParameters">
      <summary>Gets a collection of parameters that are used to create a Where clause.</summary>
      <returns>A collection that contains the parameters that are used by this property.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IDynamicValidatorException">
      <summary>Represents an interface implemented by Dynamic Data Exception classes.  </summary>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions">
      <summary>Gets the exceptions that occur when a new or edited data field is validated.</summary>
      <returns>A collection that contains all the exceptions that occurred.</returns>
    </member>
  </members>
</doc>
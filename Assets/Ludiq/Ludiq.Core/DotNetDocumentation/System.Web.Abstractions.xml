<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Abstractions</name>
  </assembly>
  <members>
    <member name="T:System.Web.HttpApplicationStateBase">
      <summary>Serves as the base class for classes that enable information to be shared across multiple sessions and requests within an ASP.NET application.</summary>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.Add(System.String,System.Object)">
      <summary>When overridden in a derived class, adds a new object to the collection.</summary>
      <param name="name">The name of the object to add to the collection.</param>
      <param name="value">The value of the object.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateBase.AllKeys">
      <summary>When overridden in a derived class, gets the access keys for the objects in the collection.</summary>
      <returns>An array of state object keys.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.Clear">
      <summary>When overridden in a derived class, removes all objects from the collection.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateBase.Contents">
      <summary>When overridden in a derived class, gets a reference to the <see cref="T:System.Web.HttpApplicationStateBase" /> object.</summary>
      <returns>A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.CopyTo(System.Array,System.Int32)">
      <summary>When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</summary>
      <param name="array">The one-dimensional array that is the destination for the elements that are copied from the collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which to begin copying. </param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateBase.Count">
      <summary>When overridden in a derived class, gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.Get(System.Int32)">
      <summary>When overridden in a derived class, gets a state object by index.</summary>
      <returns>The object referenced by <paramref name="index" />.</returns>
      <param name="index">The index of the application state object to get.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.Get(System.String)">
      <summary>When overridden in a derived class, gets a state object by name.</summary>
      <returns>The object referenced by <paramref name="name" />.</returns>
      <param name="name">The name of the object to get.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.GetEnumerator">
      <summary>When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</summary>
      <returns>An object that can be used to iterate through the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.GetKey(System.Int32)">
      <summary>When overridden in a derived class, gets the name of a state object by index.</summary>
      <returns>The name of the application state object.</returns>
      <param name="index">The index of the application state object to get.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateBase.IsSynchronized">
      <summary>When overridden in a derived class, gets a value that indicates whether access to the collection is thread-safe.</summary>
      <returns>true if access is synchronized (thread-safe); otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateBase.Item(System.Int32)">
      <summary>When overridden in a derived class, gets a state object by index.</summary>
      <returns>The object referenced by <paramref name="index" />.</returns>
      <param name="index">The index of the object in the collection.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateBase.Item(System.String)">
      <summary>When overridden in a derived class, gets a state object by name.</summary>
      <returns>The object referenced by <paramref name="name" />.</returns>
      <param name="name">The name of the object in the collection.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.Lock">
      <summary>When overridden in a derived class, locks access to objects in the collection in order to enable synchronized access.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.Remove(System.String)">
      <summary>When overridden in a derived class, removes the named object from the collection.</summary>
      <param name="name">The name of the object to remove from the collection.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.RemoveAll">
      <summary>When overridden in a derived class, removes all objects from the collection.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.RemoveAt(System.Int32)">
      <summary>When overridden in a derived class, removes a state object specified by index from the collection.</summary>
      <param name="index">The position in the collection of the item to remove.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.Set(System.String,System.Object)">
      <summary>When overridden in a derived class, updates the value of an object in the collection.</summary>
      <param name="name">The name of the object to update.</param>
      <param name="value">The updated value of the object.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateBase.StaticObjects">
      <summary>When overridden in a derived class, gets all objects that are declared by an object element where the scope is set to "Application" in the ASP.NET application.</summary>
      <returns>A collection of objects in the application.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateBase.SyncRoot">
      <summary>When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateBase.UnLock">
      <summary>When overridden in a derived class, unlocks access to objects in the collection to enable synchronized access.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpApplicationStateWrapper">
      <summary>Encapsulates the HTTP intrinsic object that enables information to be shared across multiple requests and sessions within an ASP.NET application.</summary>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.#ctor(System.Web.HttpApplicationState)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpApplicationStateWrapper" /> class. </summary>
      <param name="httpApplicationState">The object that this wrapper class provides access to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpApplicationState" /> is null.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.Add(System.String,System.Object)">
      <summary>Adds an object to the collection.</summary>
      <param name="name">The name of the object to add to the collection.</param>
      <param name="value">The value of the object.</param>
    </member>
    <member name="P:System.Web.HttpApplicationStateWrapper.AllKeys">
      <summary>Gets the keys for the objects in the collection.</summary>
      <returns>An array of state object keys.</returns>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="P:System.Web.HttpApplicationStateWrapper.Contents">
      <summary>Gets a reference to the <see cref="T:System.Web.HttpApplicationStateBase" /> object.</summary>
      <returns>A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</returns>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an array, starting at the specified index in the array.</summary>
      <param name="array">The one-dimensional array that is the destination for the elements that are copied from the collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which to begin copying.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-The number of elements in the source <see cref="T:System.Web.HttpApplicationStateWrapper" /> object is greater than the available space from <paramref name="index" /> to the end of the destination array.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Web.HttpApplicationStateWrapper" /> object cannot be cast to the type of the destination array.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateWrapper.Count">
      <summary>Gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.Get(System.Int32)">
      <summary>Returns a state object by index.</summary>
      <returns>The object referenced by <paramref name="index" />.</returns>
      <param name="index">The index of the application state object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.Get(System.String)">
      <summary>Returns a state object by name.</summary>
      <returns>The object referenced by <paramref name="name" />, if found; otherwise, null.</returns>
      <param name="name">The name of the object to get.</param>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through a collection.</summary>
      <returns>An object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.GetKey(System.Int32)">
      <summary>Returns the name of a state object by index.</summary>
      <returns>The name of the application state object.</returns>
      <param name="index">The index of the application state object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the data that is necessary to serialize the <see cref="T:System.Web.HttpApplicationStateWrapper" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information that is required to serialize the <see cref="T:System.Web.HttpApplicationStateWrapper" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream that is associated with the <see cref="T:System.Web.HttpApplicationStateWrapper" /> object.</param>
    </member>
    <member name="P:System.Web.HttpApplicationStateWrapper.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is thread-safe.</summary>
      <returns>true if access is synchronized (thread-safe); otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpApplicationStateWrapper.Item(System.Int32)">
      <summary>Gets a state object by index.</summary>
      <returns>The object referenced by <paramref name="index" />.</returns>
      <param name="index">The index of the object in the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
    </member>
    <member name="P:System.Web.HttpApplicationStateWrapper.Item(System.String)">
      <summary>Gets a state object by name.</summary>
      <returns>The object referenced by <paramref name="name" />, if found; otherwise, null.</returns>
      <param name="name">The name of the object in the collection.</param>
    </member>
    <member name="P:System.Web.HttpApplicationStateWrapper.Keys">
      <summary>Gets a <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> instance that contains all the keys in the <see cref="T:System.Web.HttpApplicationStateWrapper" /> instance.</summary>
      <returns>A collection of all the keys in the collection.</returns>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.Lock">
      <summary>Locks access to objects in the collection in order to enable synchronized access.</summary>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.OnDeserialization(System.Object)">
      <summary>Raises the deserialization event when deserialization is finished.</summary>
      <param name="sender">The source of the deserialization event.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that is associated with the current <see cref="T:System.Web.HttpApplicationStateWrapper" /> instance is invalid.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.Remove(System.String)">
      <summary>Removes the object specified by name from the collection.</summary>
      <param name="name">The name of the object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.RemoveAll">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.RemoveAt(System.Int32)">
      <summary>Removes the object specified by index from the collection.</summary>
      <param name="index">The position in the collection of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.Set(System.String,System.Object)">
      <summary>Updates the value of an object in the collection.</summary>
      <param name="name">The name of the object to update.</param>
      <param name="value">The updated value of the object.</param>
    </member>
    <member name="P:System.Web.HttpApplicationStateWrapper.StaticObjects">
      <summary>Gets all objects that are declared by an object element where the scope is set to "Application" in the ASP.NET application.</summary>
      <returns>A collection of objects in the application.</returns>
    </member>
    <member name="P:System.Web.HttpApplicationStateWrapper.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Web.HttpApplicationStateWrapper.UnLock">
      <summary>Unlocks access to objects in the collection to enable synchronized access.</summary>
    </member>
    <member name="T:System.Web.HttpBrowserCapabilitiesBase">
      <summary>Serves as the base class for classes that enable the server to gather information about the capabilities of the browser that made the current request.</summary>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.ActiveXControls">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser is capable of supporting ActiveX controls.</summary>
      <returns>true if the browser can support ActiveX controls; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Adapters">
      <summary>When overridden in a derived class, gets the collection of available control adapters.</summary>
      <returns>The registered control adapters for the browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesBase.AddBrowser(System.String)">
      <summary>When overridden in a derived class, used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</summary>
      <param name="browserName">The name of the browser to add.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.AOL">
      <summary>When overridden in a derived class, gets a value that indicates whether the client is an America Online (AOL) browser.</summary>
      <returns>true if the browser is an AOL browser; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.BackgroundSounds">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports playing background sounds by using the bgsounds HTML element.</summary>
      <returns>true if the browser supports playing background sounds; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Beta">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser is a beta version.</summary>
      <returns>true if the browser is a beta version; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Browser">
      <summary>When overridden in a derived class, gets the browser string (if any) that was sent by the browser in the User-Agent request header.</summary>
      <returns>The contents of the User-Agent request header that was sent by the browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Browsers">
      <summary>When overridden in a derived class, gets a collection of browsers for which capabilities are recognized.</summary>
      <returns>The browsers for which capabilities are recognized.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanCombineFormsInDeck">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports decks that contain multiple forms, such as separate cards.</summary>
      <returns>true if the browser supports decks that contain multiple forms; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanInitiateVoiceCall">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser device is capable of initiating a voice call.</summary>
      <returns>true if the browser device is capable of initiating a voice call; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderAfterInputOrSelectElement">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports page content that follows WML select or input elements.</summary>
      <returns>true if the browser supports page content that follows HTML select or input elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderEmptySelects">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports empty HTML select elements.</summary>
      <returns>true if the browser supports empty HTML select elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderInputAndSelectElementsTogether">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports WML input and select elements together in the same card.</summary>
      <returns>true if the browser supports WML input and select elements together; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderMixedSelects">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports WML option elements that specify both onpick and value attributes.</summary>
      <returns>true if the browser supports WML option elements that specify both onpick and value attributes; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderOneventAndPrevElementsTogether">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports WML onevent and prev elements in the same card.</summary>
      <returns>true if the browser supports WML onevent and prev elements in the same WML card; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderPostBackCards">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports WML cards for postback.</summary>
      <returns>true if the browser supports WML cards for postback; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports WML setvar elements that have a value attribute of 0.</summary>
      <returns>true if the browser supports WML setvar elements that have a value attribute of 0; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CanSendMail">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports sending e-mail messages by using the HTML mailto scheme.</summary>
      <returns>true if the browser supports sending e-mail message by using the HTML mailto scheme; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Capabilities">
      <summary>When overridden in a derived class, used internally to get the defined capabilities of the browser.</summary>
      <returns>The defined capabilities of the browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.CDF">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports Channel Definition Format (CDF) for webcasting.</summary>
      <returns>true if the browser supports CDF; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.ClrVersion">
      <summary>When overridden in a derived class, gets the version of the .NET Framework that is installed on the client.</summary>
      <returns>The common language runtime (CLR) version.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesBase.CompareFilters(System.String,System.String)">
      <summary>When overridden in a derived class, used internally to compare filters.</summary>
      <returns>1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; or 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</returns>
      <param name="filter1">The first filter to compare.</param>
      <param name="filter2">The second filter to compare.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Cookies">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser is capable of supporting cookies.</summary>
      <returns>true if the browser can support cookies; otherwise, false.Note:This property does not indicate whether cookies are currently enabled in the browser, only whether the browser can support cookies.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Crawler">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser is a search-engine Web crawler.</summary>
      <returns>true if the browser is a search-engine crawler; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)">
      <summary>When overridden in a derived class, creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use to render markup to the browser.</summary>
      <returns>A new instance of the object.</returns>
      <param name="w">The object to be created.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.DefaultSubmitButtonLimit">
      <summary>When overridden in a derived class, gets the maximum number of submit buttons that are allowed for a form.</summary>
      <returns>The maximum number of submit buttons that are allowed for a form.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesBase.DisableOptimizedCacheKey">
      <summary>When overridden in a derived class, used internally to disable use of an optimized cache key.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.EcmaScriptVersion">
      <summary>When overridden in a derived class, gets the version number of ECMAScript (JavaScript) that the browser supports.</summary>
      <returns>The version number of ECMAScript (JavaScript) that the browser supports.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesBase.EvaluateFilter(System.String)">
      <summary>When overridden in a derived class, used internally to evaluate a filter.</summary>
      <returns>true if the filter was successfully evaluated; otherwise, false.</returns>
      <param name="filterName">The filter to evaluate.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Frames">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports HTML frames.</summary>
      <returns>true if the browser supports frames; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.GatewayMajorVersion">
      <summary>When overridden in a derived class, gets the major version number of the wireless gateway that is used to access the server, if known. </summary>
      <returns>The major version number of the wireless gateway that is used to access the server, if known.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.GatewayMinorVersion">
      <summary>When overridden in a derived class, gets the minor version number of the wireless gateway that is used to access the server, if known. </summary>
      <returns>The minor version number of the wireless gateway that is used to access the server, if known.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.GatewayVersion">
      <summary>When overridden in a derived class, gets the version of the wireless gateway that is used to access the server, if known.</summary>
      <returns>The version number of the wireless gateway that is used to access the server, if known.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesBase.GetClrVersions">
      <summary>When overridden in a derived class, gets all versions of the .NET Framework common language runtime (CLR) that are installed on the client.</summary>
      <returns>An array of <see cref="T:System.Version" /> objects.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.HasBackButton">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser has a dedicated Back button.</summary>
      <returns>true if the browser has a dedicated Back button; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.HidesRightAlignedMultiselectScrollbars">
      <summary>When overridden in a derived class, gets a value that indicates whether the scrollbar of an HTML select multiple element that has an align attribute value of right is obscured upon rendering.</summary>
      <returns>true if the scrollbar of an HTML select multiple element that has an align attribute value of right is obscured upon rendering; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.HtmlTextWriter">
      <summary>When overridden in a derived class, gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use for writing markup characters and text.</summary>
      <returns>The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use for writing markup characters and text.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Id">
      <summary>When overridden in a derived class, gets the internal identifier of the browser as specified in the browser definition file.</summary>
      <returns>The internal identifier of the browser as specified in the browser definition file.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.InputType">
      <summary>When overridden in a derived class, gets the type of input that is supported by the browser.</summary>
      <returns>The type of input supported by the browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesBase.IsBrowser(System.String)">
      <summary>When overridden in a derived class, gets a value that indicates whether the client browser is the same as the specified browser.</summary>
      <returns>true if the client browser is the same as the specified browser; otherwise, false.</returns>
      <param name="browserName">The specified browser.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.IsColor">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser has a color display.</summary>
      <returns>true if the browser has a color display; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.IsMobileDevice">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser is a recognized mobile device.</summary>
      <returns>true if the browser is a recognized mobile device; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Item(System.String)">
      <summary>When overridden in a derived class, gets the value of the specified browser capability. In C#, this property is the indexer for the class.</summary>
      <returns>The browser capability with the specified key name.</returns>
      <param name="key">The name of the browser capability to retrieve.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.JavaApplets">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports Java.</summary>
      <returns>true if the browser supports Java; otherwise, false.Note:This property does not indicate whether Java is currently enabled in the browser, only whether the browser can support Java.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.JScriptVersion">
      <summary>When overridden in a derived class, gets the JScript version that the browser supports.</summary>
      <returns>The version of JScript that the browser supports.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.MajorVersion">
      <summary>When overridden in a derived class, gets the major (integer) version number of the browser.</summary>
      <returns>The major version number of the browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.MaximumHrefLength">
      <summary>When overridden in a derived class, gets the maximum length in characters for the href attribute of an HTML a (anchor) element.</summary>
      <returns>The maximum length in characters for the href attribute of an HTML a (anchor) element.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.MaximumRenderedPageSize">
      <summary>When overridden in a derived class, gets the maximum length of the page, in bytes, that the browser can display. </summary>
      <returns>The maximum length of the page, in bytes, that the browser can display.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.MaximumSoftkeyLabelLength">
      <summary>When overridden in a derived class, gets the maximum length of the text that a soft-key label can display.</summary>
      <returns>The maximum length of the text that a soft-key label can display.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.MinorVersion">
      <summary>When overridden in a derived class, gets the minor (decimal) version number of the browser.</summary>
      <returns>The minor version number of the browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.MinorVersionString">
      <summary>When overridden in a derived class, gets the minor (decimal) version number of the browser as a string.</summary>
      <returns>A string that represents the minor version number of the browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.MobileDeviceManufacturer">
      <summary>When overridden in a derived class, gets the name of the manufacturer of a mobile device, if known.</summary>
      <returns>The name of the manufacturer of a mobile device, if known.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.MobileDeviceModel">
      <summary>When overridden in a derived class, gets the model name of a mobile device, if known.</summary>
      <returns>The model name of a mobile device, if known.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.MSDomVersion">
      <summary>When overridden in a derived class, gets the version of the Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</summary>
      <returns>The MSHTML DOM version that the browser supports.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.NumberOfSoftkeys">
      <summary>When overridden in a derived class, gets the number of softkeys on a mobile device.</summary>
      <returns>The number of softkeys supported on a mobile device.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Platform">
      <summary>When overridden in a derived class, gets the name of the operating system that the client is using, if known.</summary>
      <returns>The operating system that the client is using, if known.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.PreferredImageMime">
      <summary>When overridden in a derived class, gets the MIME type of the type of image content that the browser typically prefers.</summary>
      <returns>The MIME type of the type of image content that the browser typically prefers.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.PreferredRenderingMime">
      <summary>When overridden in a derived class, gets the MIME type of the type of content that the browser typically prefers.</summary>
      <returns>The MIME type of the type of content that the browser typically prefers.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.PreferredRenderingType">
      <summary>When overridden in a derived class, gets the general name for the type of content that the browser prefers.</summary>
      <returns>The values "html32" or "chtml10".</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.PreferredRequestEncoding">
      <summary>When overridden in a derived class, gets the request encoding that the browser prefers.</summary>
      <returns>The request encoding that the browser prefers.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.PreferredResponseEncoding">
      <summary>When overridden in a derived class, gets the response encoding that the browser prefers.</summary>
      <returns>The response encoding that the browser prefers.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser renders a line break before WML select or input elements.</summary>
      <returns>true if the browser renders a line break before select or input elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RendersBreaksAfterHtmlLists">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser renders a line break after list-item elements.</summary>
      <returns>true if the browser renders a line break after list-item elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RendersBreaksAfterWmlAnchor">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser renders a line break after a standalone WML a (anchor) element.</summary>
      <returns>true if the browser renders a line break after a standalone WML a (anchor) element; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RendersBreaksAfterWmlInput">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser renders a line break after a WML input element.</summary>
      <returns>true if the browser renders a line break after a WML input element; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RendersWmlDoAcceptsInline">
      <summary>When overridden in a derived class, gets a value that indicates whether the mobile-device browser renders a WML do form accept construct as an inline button instead of as a softkey.</summary>
      <returns>true if the mobile-device browser renders a WML do form-accept construct as an inline button; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RendersWmlSelectsAsMenuCards">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser renders WML select elements as menu cards, instead of as a combo box.</summary>
      <returns>true if the browser renders WML select elements as menu cards; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiredMetaTagNameValue">
      <summary>When overridden in a derived class, used internally to produce a meta-tag that is required by some browsers.</summary>
      <returns>A meta-tag that is required by some browsers.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresAttributeColonSubstitution">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires colons in element attribute values to be replaced with a different character.</summary>
      <returns>true if the browser requires colons in element attribute values to be replaced with a different character; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresContentTypeMetaTag">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires an HTML meta element for which the content-type attribute is specified.</summary>
      <returns>true if the browser requires an HTML meta element for which the content-type attribute is specified; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresControlStateInSession">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires control state to be maintained in sessions.</summary>
      <returns>true if the browser requires control state to be maintained in sessions; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresDBCSCharacter">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires a double-byte character set.</summary>
      <returns>true if the browser requires a double-byte character set; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires nonstandard error messages.</summary>
      <returns>true if the browser requires nonstandard error messages; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresLeadingPageBreak">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires the first element in the body of a Web page to be an HTML br element.</summary>
      <returns>true if the browser requires the first element in the body of a Web page to be an HTML br element; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresNoBreakInFormatting">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser does not support HTML br elements to format line breaks.</summary>
      <returns>true if the browser does not support HTML br elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresOutputOptimization">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires pages to contain a size-optimized form of markup language tags.</summary>
      <returns>true if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresPhoneNumbersAsPlainText">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports telephone dialing based on plain text, or whether it requires special markup.</summary>
      <returns>true if the browser supports telephone dialing based on plain text; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresSpecialViewStateEncoding">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires view-state values to be specially encoded.</summary>
      <returns>true if the browser requires view-state values to be specially encoded; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresUniqueFilePathSuffix">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires unique form-action URLs.</summary>
      <returns>true if the browser requires unique form-action URLs; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresUniqueHtmlCheckboxNames">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires unique name attribute values for multiple HTML input type="checkbox" elements.</summary>
      <returns>true if the browser requires unique name attribute values for multiple HTML input type="checkbox" elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresUniqueHtmlInputNames">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser requires unique name attribute values for multiple HTML input elements.</summary>
      <returns>true if the browser requires unique name attribute values for multiple HTML input elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.RequiresUrlEncodedPostfieldValues">
      <summary>When overridden in a derived class, gets a value that indicates whether postback data that is sent by the browser will be URL-encoded.</summary>
      <returns>true if postback data that is sent by the browser will be URL-encoded; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.ScreenBitDepth">
      <summary>When overridden in a derived class, gets the depth of the display, in bits per pixel.</summary>
      <returns>The depth of the display, in bits per pixel.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.ScreenCharactersHeight">
      <summary>When overridden in a derived class, gets the approximate height of the display, in character lines.</summary>
      <returns>The approximate height of the display, in character lines.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.ScreenCharactersWidth">
      <summary>When overridden in a derived class, gets the approximate width of the display, in characters.</summary>
      <returns>The approximate width of the display, in characters.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.ScreenPixelsHeight">
      <summary>When overridden in a derived class, gets the approximate height of the display, in pixels.</summary>
      <returns>The approximate height of the display, in pixels.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.ScreenPixelsWidth">
      <summary>When overridden in a derived class, gets the approximate width of the display, in pixels.</summary>
      <returns>The approximate width of the display, in pixels.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsAccesskeyAttribute">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the accesskey attribute of HTML a (anchor) and input elements.</summary>
      <returns>true if the browser supports the accesskey attribute of HTML a (anchor) and input elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsBodyColor">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the bgcolor attribute of the HTML body element.</summary>
      <returns>true if the browser supports the bgcolor attribute of the HTML body element; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsBold">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports HTML b elements to format bold text.</summary>
      <returns>true if the browser supports HTML b elements to format bold text; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsCacheControlMetaTag">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the cache-control value for the http-equiv attribute of HTML meta elements.</summary>
      <returns>true if the browser supports the cache-control value for the http-equiv attribute of HTML meta elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsCallback">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports callback scripts.</summary>
      <returns>true if the browser supports callback scripts; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsCss">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports cascading style sheets (CSS).</summary>
      <returns>true if the browser supports CSS; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsDivAlign">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the align attribute of HTML div elements.</summary>
      <returns>true if the browser supports the align attribute of HTML div elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsDivNoWrap">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the nowrap attribute of HTML div elements.</summary>
      <returns>true if the browser supports the nowrap HTML div elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsEmptyStringInCookieValue">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports empty strings in cookie values.</summary>
      <returns>true if the browser supports empty strings in cookie values; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsFontColor">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the color attribute of HTML font elements.</summary>
      <returns>true if the browser supports the color attribute of HTML font elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsFontName">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the name attribute of HTML font elements.</summary>
      <returns>true if the browser supports the name attribute of HTML font elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsFontSize">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the size attribute of HTML font elements.</summary>
      <returns>true if the browser supports the size attribute of HTML font elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsImageSubmit">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the use of a custom image in place of a standard form submit button.</summary>
      <returns>true if the browser supports the use of a custom image in place of a standard form submit button; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsIModeSymbols">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports i-mode symbols.</summary>
      <returns>true if the browser supports i-mode symbols; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsInputIStyle">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the istyle attribute of HTML input elements.</summary>
      <returns>true if the browser supports the istyle attribute of HTML input elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsInputMode">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the mode attribute of HTML input elements.</summary>
      <returns>true if the browser supports the mode attribute of HTML input elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsItalic">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports HTML i elements to format italic text.</summary>
      <returns>true if the browser supports HTML i elements to format italic text; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsJPhoneMultiMediaAttributes">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports J-Phone multimedia attributes.</summary>
      <returns>true if the browser supports J-Phone multimedia attributes; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsJPhoneSymbols">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports J-Phone–specific picture symbols.</summary>
      <returns>true if the browser supports J-Phone–specific picture symbols; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsQueryStringInFormAction">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports a query string in the action attribute value of HTML form elements.</summary>
      <returns>true if the browser supports a query string in the action attribute value of HTML form elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsRedirectWithCookie">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports cookies on redirection.</summary>
      <returns>true if the browser supports cookies on redirection; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsSelectMultiple">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports the multiple attribute of HTML select elements.</summary>
      <returns>true if the browser supports the multiple attribute of HTML select elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsUncheck">
      <summary>When overridden in a derived class, gets a value that indicates whether clearing a checked HTML input type="checkbox" element is reflected in postback data.</summary>
      <returns>true if clearing a checked HTML input type="checkbox" element is reflected in postback data; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.SupportsXmlHttp">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports receiving XML over HTTP.</summary>
      <returns>true if the browser supports receiving XML over HTTP; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Tables">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports HTML table elements.</summary>
      <returns>true if the browser supports HTML table elements; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.TagWriter">
      <summary>When overridden in a derived class, used internally to get the type of the object that is used to write tags for the browser.</summary>
      <returns>The type of the object that is used to write tags for the browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Type">
      <summary>When overridden in a derived class, gets the name and major (integer) version number of the browser.</summary>
      <returns>The name and major version number of the browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.UseOptimizedCacheKey">
      <summary>When overridden in a derived class, used internally to get a value that indicates whether to use an optimized cache key.</summary>
      <returns>true to use an optimized cache key; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.VBScript">
      <summary>When overridden in a derived class, gets a value that indicates whether the browser supports Visual Basic Scripting edition (VBScript).</summary>
      <returns>true if the browser supports VBScript; otherwise, false.Note:This property does not indicate whether VBScript is currently enabled in the browser, only whether the browser can support VBScript.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Version">
      <summary>When overridden in a derived class, gets the full version number (integer and decimal) of the browser as a string.</summary>
      <returns>The full version number of the browser as a string.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.W3CDomVersion">
      <summary>When overridden in a derived class, gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</summary>
      <returns>The number of the W3C XML DOM version number that the browser supports.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Win16">
      <summary>When overridden in a derived class, gets a value that indicates whether the client is a Win16-based computer.</summary>
      <returns>true if the browser is running on a Win16-based computer; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesBase.Win32">
      <summary>When overridden in a derived class, gets a value that indicates whether the client is a Win32-based computer.</summary>
      <returns>true if the client is a Win32-based computer; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpBrowserCapabilitiesWrapper">
      <summary>Encapsulates the HTTP intrinsic object that enables the server to gather information about the capabilities of the browser that has made the current request.</summary>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesWrapper.#ctor(System.Web.HttpBrowserCapabilities)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpBrowserCapabilitiesWrapper" /> class. </summary>
      <param name="httpBrowserCapabilities">The object that this wrapper class provides access to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpBrowserCapabilities" /> is null.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.ActiveXControls">
      <summary>Gets a value that indicates whether the browser is capable of supporting ActiveX controls.</summary>
      <returns>true if the browser can support ActiveX controls; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Adapters">
      <summary>Gets the collection of available control adapters.</summary>
      <returns>The collection of registered control adapters for the browser.</returns>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesWrapper.AddBrowser(System.String)">
      <summary>Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</summary>
      <param name="browserName">The name of the browser to add.</param>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.AOL">
      <summary>Gets a value that indicates whether the client is an America Online (AOL) browser.</summary>
      <returns>true if the browser is an AOL browser; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.BackgroundSounds">
      <summary>Gets a value that indicates whether the browser supports playing background sounds by using the bgsounds HTML element.</summary>
      <returns>true if the browser supports playing background sounds; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Beta">
      <summary>Gets a value that indicates whether the browser is a beta version.</summary>
      <returns>true if the browser is a beta version; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Browser">
      <summary>Gets the browser string (if any) that was sent by the browser in the User-Agent request header.</summary>
      <returns>The contents of the User-Agent request header sent by the browser.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Browsers">
      <summary>Gets a collection of browsers for which capabilities are recognized.</summary>
      <returns>The browsers for which capabilities are recognized.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanCombineFormsInDeck">
      <summary>Gets a value that indicates whether the browser supports decks that contain multiple forms, such as separate cards.</summary>
      <returns>true if the browser supports decks that contain multiple forms; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanInitiateVoiceCall">
      <summary>Gets a value that indicates whether the browser device is capable of initiating a voice call.</summary>
      <returns>true if the browser device is capable of initiating a voice call; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanRenderAfterInputOrSelectElement">
      <summary>Gets a value that indicates whether the browser supports page content that follows WML select or input elements.</summary>
      <returns>true if the browser supports page content that follows HTML select or input elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanRenderEmptySelects">
      <summary>Gets a value that indicates whether the browser supports empty HTML select elements.</summary>
      <returns>true if the browser supports empty HTML select elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanRenderInputAndSelectElementsTogether">
      <summary>Gets a value that indicates whether the browser supports WML input and select elements together in the same card.</summary>
      <returns>true if the browser supports WML input and select elements together; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanRenderMixedSelects">
      <summary>Gets a value that indicates whether the browser supports WML option elements that specify both onpick and value attributes.</summary>
      <returns>true if the browser supports WML option elements that specify both onpick and value attributes; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanRenderOneventAndPrevElementsTogether">
      <summary>Gets a value that indicates whether the browser supports WML onevent and prev elements in the same card.</summary>
      <returns>true if the browser supports WML onevent and prev elements in the same card; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanRenderPostBackCards">
      <summary>Gets a value that indicates whether the browser supports WML cards for postback.</summary>
      <returns>true if the browser supports WML cards for postback; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanRenderSetvarZeroWithMultiSelectionList">
      <summary>Gets a value that indicates whether the browser supports WML setvar elements that have a value attribute of 0.</summary>
      <returns>true if the browser supports WML setvar elements that have a value attribute of 0; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CanSendMail">
      <summary>Gets a value that indicates whether the browser supports sending e-mail messages by using the HTML mailto scheme.</summary>
      <returns>true if the browser supports sending e-mail message by using the HTML mailto scheme; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Capabilities">
      <summary>Used internally to get the defined capabilities of the browser.</summary>
      <returns>The defined capabilities of the browser.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.CDF">
      <summary>Gets a value that indicates whether the browser supports Channel Definition Format (CDF) for webcasting.</summary>
      <returns>true if the browser supports CDF; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.ClrVersion">
      <summary>Gets the version of the .NET Framework that is installed on the client.</summary>
      <returns>The common language runtime (CLRS) version.</returns>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesWrapper.CompareFilters(System.String,System.String)">
      <summary>Used internally to compare filters.</summary>
      <returns>1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; or 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</returns>
      <param name="filter1">The first filter to compare.</param>
      <param name="filter2">The second filter to compare.</param>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Cookies">
      <summary>Gets a value that indicates whether the browser is capable of supporting cookies.</summary>
      <returns>true if the browser can support cookies; otherwise, false. The default is false.Note:This property does not indicate whether cookies are currently enabled in the browser, only whether the browser can support cookies.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Crawler">
      <summary>Gets a value that indicates whether the browser is a search-engine Web crawler.</summary>
      <returns>true if the browser is a search-engine crawler; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesWrapper.CreateHtmlTextWriter(System.IO.TextWriter)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use to render markup to the browser.</summary>
      <returns>A new instance of the object.</returns>
      <param name="w">The object to be created.</param>
      <exception cref="T:System.Exception">An error occurred when creating the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</exception>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.DefaultSubmitButtonLimit">
      <summary>Gets the maximum number of submit buttons that are allowed for a form.</summary>
      <returns>The maximum number of submit buttons that are allowed for a form.</returns>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesWrapper.DisableOptimizedCacheKey">
      <summary>Used internally to disable use of an optimized cache key.</summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.EcmaScriptVersion">
      <summary>Gets the version number of ECMAScript (JavaScript) that the browser supports.</summary>
      <returns>The version number of ECMAScript (JavaScript) that the browser supports.</returns>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesWrapper.EvaluateFilter(System.String)">
      <summary>Used internally to evaluate a filter.</summary>
      <returns>true if the filter was successfully evaluated; otherwise, false.</returns>
      <param name="filterName">The filter to evaluate.</param>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Frames">
      <summary>Gets a value that indicates whether the browser supports HTML frames.</summary>
      <returns>true if the browser supports frames; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.GatewayMajorVersion">
      <summary>Gets the major version number of the wireless gateway that is used to access the server, if known. </summary>
      <returns>The major version number of the wireless gateway that is used to access the server, if known. The default is 0.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.GatewayMinorVersion">
      <summary>Gets the minor version number of the wireless gateway that is used to access the server, if known. </summary>
      <returns>The minor version number of the wireless gateway that is used to access the server, if known. The default is 0.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.GatewayVersion">
      <summary>Gets the version of the wireless gateway that is used to access the server, if known.</summary>
      <returns>The version number of the wireless gateway that is used to access the server, if known. The default is "None".</returns>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesWrapper.GetClrVersions">
      <summary>Gets all versions of the .NET Framework common language runtime (CLR) that are installed on the client.</summary>
      <returns>An array of <see cref="T:System.Version" /> objects.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.HasBackButton">
      <summary>Gets a value that indicates whether the browser has a dedicated Back button.</summary>
      <returns>true if the browser has a dedicated Back button; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.HidesRightAlignedMultiselectScrollbars">
      <summary>Gets a value that indicates whether the scrollbar of an HTML select multiple element that has an align attribute value of right is obscured upon rendering.</summary>
      <returns>true if the scrollbar of an HTML select multiple element that has an align attribute value of right is obscured upon rendering; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.HtmlTextWriter">
      <summary>Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use for writing markup characters and text.</summary>
      <returns>The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use for writing markup characters and text.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Id">
      <summary>Gets the internal identifier of the browser as specified in the browser definition file.</summary>
      <returns>The internal identifier of the browser as specified in the browser definition file.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.InputType">
      <summary>Gets the type of input that is supported by the browser.</summary>
      <returns>The type of input supported by the browser. The default is "telephoneKeypad".</returns>
    </member>
    <member name="M:System.Web.HttpBrowserCapabilitiesWrapper.IsBrowser(System.String)">
      <summary>Gets a value that indicates whether the client browser is the same as the specified browser.</summary>
      <returns>true if the client browser is the same as the specified browser; otherwise, false. The default is false.</returns>
      <param name="browserName">The specified browser.</param>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.IsColor">
      <summary>Gets a value that indicates whether the browser has a color display.</summary>
      <returns>true if the browser has a color display; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.IsMobileDevice">
      <summary>Gets a value that indicates whether the browser is a recognized mobile device.</summary>
      <returns>true if the browser is a recognized mobile device; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Item(System.String)">
      <summary>Gets the value of the specified browser capability. In C#, this property is the indexer for the class.</summary>
      <returns>The browser capability with the specified key name.</returns>
      <param name="key">The name of the browser capability to retrieve.</param>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.JavaApplets">
      <summary>Gets a value that indicates whether the browser supports Java.</summary>
      <returns>true if the browser supports Java; otherwise, false. The default is false.Note:This property does not indicate whether Java is currently enabled in the browser, only whether the browser can support Java.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.JScriptVersion">
      <summary>Gets the JScript version that the browser supports.</summary>
      <returns>The version of JScript that the browser supports.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.MajorVersion">
      <summary>Gets the major (integer) version number of the browser.</summary>
      <returns>The major version number of the browser.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.MaximumHrefLength">
      <summary>Gets the maximum length in characters for the href attribute of an HTML a (anchor) element.</summary>
      <returns>The maximum length in characters for the href attribute of an HTML a (anchor) element. The default value is the value in the <see cref="P:System.Web.HttpBrowserCapabilitiesWrapper.Item(System.String)" /> property with the key name of "maximumHrefLength".</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.MaximumRenderedPageSize">
      <summary>Gets the maximum length of the page, in bytes, that the browser can display. </summary>
      <returns>The maximum length of the page, in bytes, that the browser can display. The default is 2000.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.MaximumSoftkeyLabelLength">
      <summary>Gets the maximum length of the text that a soft-key label can display.</summary>
      <returns>The maximum length of the text that a soft-key label can display. The default is 5.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.MinorVersion">
      <summary>Gets the minor (decimal) version number of the browser.</summary>
      <returns>The minor version number of the browser.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.MinorVersionString">
      <summary>Gets the minor (decimal) version number of the browser as a string.</summary>
      <returns>A string that represents the minor version number of the browser.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.MobileDeviceManufacturer">
      <summary>Gets the name of the manufacturer of a mobile device, if known.</summary>
      <returns>The name of the manufacturer of a mobile device, if known. The default is "Unknown".</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.MobileDeviceModel">
      <summary>Gets the model name of a mobile device, if known.</summary>
      <returns>The model name of a mobile device, if known. The default is "Unknown".</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.MSDomVersion">
      <summary>Gets the version of the Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</summary>
      <returns>The MSHTML DOM version that the browser supports. The default is 0.0.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.NumberOfSoftkeys">
      <summary>Gets the number of softkeys on a mobile device.</summary>
      <returns>The number of softkeys supported on a mobile device. The default is 0.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Platform">
      <summary>Gets the name of the operating system that the client is using, if known.</summary>
      <returns>The operating system that the client is using, if known, otherwise the value is set to "Unknown".</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.PreferredImageMime">
      <summary>Gets the MIME type of the type of image content that the browser typically prefers.</summary>
      <returns>The MIME type of the type of image content that the browser typically prefers. The default is "image/gif".</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.PreferredRenderingMime">
      <summary>Gets the MIME type of the type of content that the browser typically prefers.</summary>
      <returns>The MIME type of the type of content that the browser typically prefers. The default is "text/html".</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.PreferredRenderingType">
      <summary>Gets the general name for the type of content that the browser prefers.</summary>
      <returns>The values "html32" or "chtml10". The default is "html32".</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.PreferredRequestEncoding">
      <summary>Gets the request encoding that the browser prefers.</summary>
      <returns>The request encoding preferred by the browser.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.PreferredResponseEncoding">
      <summary>Gets the response encoding that the browser prefers.</summary>
      <returns>The response encoding preferred by the browser.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RendersBreakBeforeWmlSelectAndInput">
      <summary>Gets a value that indicates whether the browser renders a line break before select or input elements.</summary>
      <returns>true if the browser renders a line break before select or input elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RendersBreaksAfterHtmlLists">
      <summary>Gets a value that indicates whether the browser renders a line break after list-item elements.</summary>
      <returns>true if the browser renders a line break after list-item elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RendersBreaksAfterWmlAnchor">
      <summary>Gets a value that indicates whether the browser renders a line break after a standalone WML a (anchor) element.</summary>
      <returns>true if the browser renders a line break after a standalone WML a (anchor) element; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RendersBreaksAfterWmlInput">
      <summary>Gets a value that indicates whether the browser renders a line break after a WML input element.</summary>
      <returns>true if the browser renders a line break after a WML input element; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RendersWmlDoAcceptsInline">
      <summary>Gets a value that indicates whether the mobile-device browser renders a WML do form accept construct as an inline button instead of as a softkey.</summary>
      <returns>true if the mobile-device browser renders a WML do form-accept construct as an inline button; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RendersWmlSelectsAsMenuCards">
      <summary>Gets a value that indicates whether the browser renders WML select elements as menu cards, instead of as a combo box.</summary>
      <returns>true if the browser renders WML select elements as menu cards; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiredMetaTagNameValue">
      <summary>Used internally to produce a meta-tag that is required by some browsers.</summary>
      <returns>A meta-tag that is required by some browsers.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresAttributeColonSubstitution">
      <summary>Gets a value that indicates whether the browser requires colons in element attribute values to be replaced with a different character.</summary>
      <returns>true if the browser requires colons in element attribute values to be replaced with a different character; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresContentTypeMetaTag">
      <summary>Gets a value that indicates whether the browser requires an HTML meta element for which the content-type attribute is specified.</summary>
      <returns>true if the browser requires an HTML meta element for which the content-type attribute is specified; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresControlStateInSession">
      <summary>Gets a value that indicates whether the browser requires control state to be maintained in sessions.</summary>
      <returns>true if the browser requires control state to be maintained in sessions; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresDBCSCharacter">
      <summary>Gets a value that indicates whether the browser requires a double-byte character set.</summary>
      <returns>true if the browser requires a double-byte character set; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresHtmlAdaptiveErrorReporting">
      <summary>Gets a value that indicates whether the browser requires nonstandard error messages.</summary>
      <returns>true if the browser requires nonstandard error messages; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresLeadingPageBreak">
      <summary>Gets a value that indicates whether the browser requires the first element in the body of a Web page to be an HTML br element.</summary>
      <returns>true if the browser requires the first element in the body of a Web page to be an HTML br element; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresNoBreakInFormatting">
      <summary>Gets a value that indicates whether the browser does not support HTML br elements to format line breaks.</summary>
      <returns>true if the browser does not support HTML br elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresOutputOptimization">
      <summary>Gets a value that indicates whether the browser requires pages to contain a size-optimized form of markup language tags.</summary>
      <returns>true if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresPhoneNumbersAsPlainText">
      <summary>Gets a value that indicates whether the browser supports telephone dialing based on plain text, or whether it requires special markup.</summary>
      <returns>true if the browser supports telephone dialing based on plain text; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresSpecialViewStateEncoding">
      <summary>Gets a value that indicates whether the browser requires view-state values to be specially encoded.</summary>
      <returns>true if the browser requires view-state values to be specially encoded; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresUniqueFilePathSuffix">
      <summary>Gets a value that indicates whether the browser requires unique form-action URLs.</summary>
      <returns>true if the browser requires unique form-action URLs; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresUniqueHtmlCheckboxNames">
      <summary>Gets a value that indicates whether the browser requires unique name attribute values for multiple HTML input type="checkbox" elements.</summary>
      <returns>true if the browser requires unique name attribute values for multiple HTML input type="checkbox" elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresUniqueHtmlInputNames">
      <summary>Gets a value that indicates whether the browser requires unique name attribute values for multiple HTML input elements.</summary>
      <returns>true if the browser requires unique name attribute values for multiple HTML input elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.RequiresUrlEncodedPostfieldValues">
      <summary>Gets a value that indicates whether postback data that is sent by the browser will be URL-encoded.</summary>
      <returns>true if postback data that is sent by the browser will be URL-encoded; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.ScreenBitDepth">
      <summary>Gets the depth of the display, in bits per pixel.</summary>
      <returns>The depth of the display, in bits per pixel. The default is 1.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.ScreenCharactersHeight">
      <summary>Gets the approximate height of the display, in character lines.</summary>
      <returns>The approximate height of the display, in character lines. The default is 6.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.ScreenCharactersWidth">
      <summary>Gets the approximate width of the display, in characters.</summary>
      <returns>The approximate width of the display, in characters. The default is 12.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.ScreenPixelsHeight">
      <summary>Gets the approximate height of the display, in pixels.</summary>
      <returns>The approximate height of the display, in pixels. The default is 72.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.ScreenPixelsWidth">
      <summary>Gets the approximate width of the display, in pixels.</summary>
      <returns>The approximate width of the display, in pixels. The default is 96.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsAccesskeyAttribute">
      <summary>Gets a value that indicates whether the browser supports the accesskey attribute of HTML a (anchor) and input elements.</summary>
      <returns>true if the browser supports the accesskey attribute of HTML a (anchor) and input elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsBodyColor">
      <summary>Gets a value that indicates whether the browser supports the bgcolor attribute of the HTML body element.</summary>
      <returns>true if the browser supports the bgcolor attribute of the HTML body element; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsBold">
      <summary>Gets a value that indicates whether the browser supports HTML b elements to format bold text.</summary>
      <returns>true if the browser supports HTML b elements to format bold text; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsCacheControlMetaTag">
      <summary>Gets a value that indicates whether the browser supports the cache-control value for the http-equiv attribute of HTML meta elements.</summary>
      <returns>true if the browser supports the cache-control value for the http-equiv attribute of HTML meta elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsCallback">
      <summary>Gets a value that indicates whether the browser supports callback scripts.</summary>
      <returns>true if the browser supports callback scripts; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsCss">
      <summary>Gets a value that indicates whether the browser supports cascading style sheets (CSS).</summary>
      <returns>true if the browser supports CSS; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsDivAlign">
      <summary>Gets a value that indicates whether the browser supports the align attribute of HTML div elements.</summary>
      <returns>true if the browser supports the align attribute of HTML div elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsDivNoWrap">
      <summary>Gets a value that indicates whether the browser supports the nowrap attribute of HTML div elements.</summary>
      <returns>true if the browser supports the nowrap HTML div elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsEmptyStringInCookieValue">
      <summary>Gets a value that indicates whether the browser supports empty strings in cookie values.</summary>
      <returns>true if the browser supports empty strings in cookie values; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsFontColor">
      <summary>Gets a value that indicates whether the browser supports the color attribute of HTML font elements.</summary>
      <returns>true if the browser supports the color attribute of HTML font elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsFontName">
      <summary>Gets a value that indicates whether the browser supports the name attribute of HTML font elements.</summary>
      <returns>true if the browser supports the name attribute of HTML font elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsFontSize">
      <summary>Gets a value that indicates whether the browser supports the size attribute of HTML font elements.</summary>
      <returns>true if the browser supports the size attribute of HTML font elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsImageSubmit">
      <summary>Gets a value that indicates whether the browser supports the use of a custom image in place of a standard form submit button.</summary>
      <returns>true if the browser supports the use of a custom image in place of a standard form submit button; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsIModeSymbols">
      <summary>Gets a value that indicates whether the browser supports i-mode symbols.</summary>
      <returns>true if the browser supports i-mode symbols; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsInputIStyle">
      <summary>Gets a value that indicates whether the browser supports the istyle attribute of HTML input elements.</summary>
      <returns>true if the browser supports the istyle attribute of HTML input elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsInputMode">
      <summary>Gets a value that indicates whether the browser supports the mode attribute of HTML input elements.</summary>
      <returns>true if the browser supports the mode attribute of HTML input elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsItalic">
      <summary>Gets a value that indicates whether the browser supports HTML i elements to format italic text.</summary>
      <returns>true if the browser supports HTML i elements to format italic text; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsJPhoneMultiMediaAttributes">
      <summary>Gets a value that indicates whether the browser supports J-Phone multimedia attributes.</summary>
      <returns>true if the browser supports J-Phone multimedia attributes; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsJPhoneSymbols">
      <summary>Gets a value that indicates whether the browser supports J-Phone–specific picture symbols.</summary>
      <returns>true if the browser supports J-Phone–specific picture symbols; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsQueryStringInFormAction">
      <summary>Gets a value that indicates whether the browser supports a query string in the action attribute value of HTML form elements.</summary>
      <returns>true if the browser supports a query string in the action attribute value of HTML form elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsRedirectWithCookie">
      <summary>Gets a value that indicates whether the browser supports cookies on redirection.</summary>
      <returns>true if the browser supports cookies on redirection; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsSelectMultiple">
      <summary>Gets a value that indicates whether the browser supports the multiple attribute of HTML select elements.</summary>
      <returns>true if the browser supports the multiple attribute of HTML select elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsUncheck">
      <summary>Gets a value that indicates whether clearing a checked HTML input type="checkbox" element is reflected in postback data.</summary>
      <returns>true if clearing a checked HTML input type="checkbox" element is reflected in postback data; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.SupportsXmlHttp">
      <summary>Gets a value that indicates whether the browser supports receiving XML over HTTP.</summary>
      <returns>true if the browser supports receiving XML over HTTP; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Tables">
      <summary>Gets a value that indicates whether the browser supports HTML table elements.</summary>
      <returns>true if the browser supports HTML table elements; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.TagWriter">
      <summary>Used internally to get the type of the object that is used to write tags for the browser.</summary>
      <returns>The type of the object that is used to write tags for the browser.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Type">
      <summary>Gets the name and major (integer) version number of the browser.</summary>
      <returns>The name and major version number of the browser.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.UseOptimizedCacheKey">
      <summary>Used internally to get a value that indicates whether to use an optimized cache key.</summary>
      <returns>true to use an optimized cache key; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.VBScript">
      <summary>Gets a value that indicates whether the browser supports Visual Basic Scripting edition (VBScript).</summary>
      <returns>true if the browser supports VBScript; otherwise, false. The default is false.Note:This property does not indicate whether VBScript is currently enabled in the browser, only whether the browser can support VBScript.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Version">
      <summary>Gets the full version number (integer and decimal) of the browser as a string.</summary>
      <returns>The full version number of the browser as a string.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.W3CDomVersion">
      <summary>Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</summary>
      <returns>The number of the W3C XML DOM version number that the browser supports.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Win16">
      <summary>Gets a value that indicates whether the client is a Win16-based computer.</summary>
      <returns>true if the browser is running on a Win16-based computer; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilitiesWrapper.Win32">
      <summary>Gets a value that indicates whether the client is a Win32-based computer.</summary>
      <returns>true if the client is a Win32-based computer; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.HttpCachePolicyBase">
      <summary>Serves as the base class for classes that contain methods for setting cache-specific HTTP headers and for controlling the ASP.NET page output cache.</summary>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)">
      <summary>When overridden in a derived class, registers a validation callback for the current response.</summary>
      <param name="handler">The object that will handle the request.</param>
      <param name="data">The user-supplied data that is passed to the <see cref="M:System.Web.HttpCachePolicyWrapper.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)" /> delegate.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.AppendCacheExtension(System.String)">
      <summary>When overridden in a derived class, appends the specified text to the Cache-Control HTTP header.</summary>
      <param name="extension">The text to append to the Cache-Control header.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetAllowResponseInBrowserHistory(System.Boolean)">
      <summary>When overridden in a derived class, makes the response available in the browser history cache, regardless of the <see cref="T:System.Web.HttpCacheability" /> setting made on the server.</summary>
      <param name="allow">true to direct the client browser to store responses in the browser history cache; otherwise false.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetCacheability(System.Web.HttpCacheability)">
      <summary>When overridden in a derived class, sets the Cache-Control header to the specified <see cref="T:System.Web.HttpCacheability" /> value.</summary>
      <param name="cacheability">The <see cref="T:System.Web.HttpCacheability" /> enumeration value to set the header to.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetCacheability(System.Web.HttpCacheability,System.String)">
      <summary>When overridden in a derived class, sets the Cache-Control header to the specified <see cref="T:System.Web.HttpCacheability" /> value and appends an extension to the directive.</summary>
      <param name="cacheability">The <see cref="T:System.Web.HttpCacheability" /> enumeration value to set the header to.</param>
      <param name="field">The cache-control extension to add to the header.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetETag(System.String)">
      <summary>When overridden in a derived class, sets the ETag HTTP header to the specified string.</summary>
      <param name="etag">The text to use for the ETag header.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetETagFromFileDependencies">
      <summary>When overridden in a derived class, sets the ETag HTTP header based on the time stamps of the handler's file dependencies.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetExpires(System.DateTime)">
      <summary>When overridden in a derived class, sets the Expires HTTP header to an absolute date and time.</summary>
      <param name="date">The absolute expiration time.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetLastModified(System.DateTime)">
      <summary>When overridden in a derived class, sets the Last-Modified HTTP header to the specified date and time.</summary>
      <param name="date">The date-time value to set the Last-Modified header to.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetLastModifiedFromFileDependencies">
      <summary>When overridden in a derived class, sets the Last-Modified HTTP header based on the time stamps of the handler's file dependencies.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetMaxAge(System.TimeSpan)">
      <summary>When overridden in a derived class, sets the Cache-Control: max-age HTTP header to the specified time span.</summary>
      <param name="delta">The time span to set the Cache-Control: max-age header to.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetNoServerCaching">
      <summary>When overridden in a derived class, stops all origin-server caching for the current response.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetNoStore">
      <summary>When overridden in a derived class, sets the Cache-Control: no-store HTTP header.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetNoTransforms">
      <summary>When overridden in a derived class, sets the Cache-Control: no-transform HTTP header.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetOmitVaryStar(System.Boolean)">
      <summary>When overridden in a derived class, specifies whether the response contains the vary:* header when caching varies by parameters.</summary>
      <param name="omit">true to direct the <see cref="T:System.Web.HttpCachePolicy" /> object not to use the * value for its <see cref="P:System.Web.HttpCachePolicy.VaryByHeaders" /> property; otherwise, false.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetProxyMaxAge(System.TimeSpan)">
      <summary>When overridden in a derived class, sets the Cache-Control: s-maxage HTTP header to the specified time span.</summary>
      <param name="delta">The time span to set the Cache-Control: s-maxage header to.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetRevalidation(System.Web.HttpCacheRevalidation)">
      <summary>When overridden in a derived class, sets the Cache-Control HTTP header to either the must-revalidate or the proxy-revalidate directives, based on the specified enumeration value.</summary>
      <param name="revalidation">The <see cref="T:System.Web.HttpCacheRevalidation" /> enumeration value to set the Cache-Control header to.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetSlidingExpiration(System.Boolean)">
      <summary>When overridden in a derived class, sets cache expiration to absolute or sliding.</summary>
      <param name="slide">true to set a sliding cache expiration, or false to set an absolute cache expiration.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetValidUntilExpires(System.Boolean)">
      <summary>When overridden in a derived class, specifies whether the ASP.NET cache should ignore HTTP Cache-Control headers that are sent by the client that invalidate the cache.</summary>
      <param name="validUntilExpires">true to specify that ASP.NET should ignore Cache-Control invalidation headers; otherwise, false.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyBase.SetVaryByCustom(System.String)">
      <summary>When overridden in a derived class, specifies a text string to vary cached output responses by.</summary>
      <param name="custom">The text string to vary cached output by.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpCachePolicyBase.VaryByContentEncodings">
      <summary>When overridden in a derived class, gets the list of Content-Encoding headers that are used to vary the output cache.</summary>
      <returns>The Content-Encoding headers that are used to select the cached response.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpCachePolicyBase.VaryByHeaders">
      <summary>When overridden in a derived class, gets the list of all HTTP headers that are used to vary cache output.</summary>
      <returns>The HTTP headers that are used to select the cached response.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpCachePolicyBase.VaryByParams">
      <summary>When overridden in a derived class, gets the list of parameters that are received by an HTTP GET or POST verb that affect caching.</summary>
      <returns>The cache-control parameters that are used to select the cached response.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpCachePolicyWrapper">
      <summary>Encapsulates the HTTP intrinsic object that contains methods for setting cache-specific HTTP headers and for controlling the ASP.NET page output cache.</summary>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.#ctor(System.Web.HttpCachePolicy)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpCachePolicyWrapper" /> class. </summary>
      <param name="httpCachePolicy">The object that this wrapper class provides access to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpCachePolicy" /> is null.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)">
      <summary>Registers a validation callback for the current response.</summary>
      <param name="handler">The object that will handle the request.</param>
      <param name="data">The user-supplied data that is passed to the <see cref="M:System.Web.HttpCachePolicyWrapper.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)" /> delegate.</param>
      <exception cref="T:System.ArgumentNullException">The specified <paramref name="handler" /> is null. </exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.AppendCacheExtension(System.String)">
      <summary>Appends the specified text to the Cache-Control HTTP header.</summary>
      <param name="extension">The text to append to the Cache-Control header.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extension" /> is null. </exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetAllowResponseInBrowserHistory(System.Boolean)">
      <summary>Makes the response available in the browser history cache, regardless of the <see cref="T:System.Web.HttpCacheability" /> setting made on the server.</summary>
      <param name="allow">true to direct the client browser to store responses in the browser history cache; otherwise false. The default is false.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetCacheability(System.Web.HttpCacheability)">
      <summary>Sets the Cache-Control header to the specified <see cref="T:System.Web.HttpCacheability" /> value.</summary>
      <param name="cacheability">The <see cref="T:System.Web.HttpCacheability" /> enumeration value to set the header to.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="cacheability" /> is not one of the enumeration values. </exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetCacheability(System.Web.HttpCacheability,System.String)">
      <summary>Sets the Cache-Control header to the specified <see cref="T:System.Web.HttpCacheability" /> value and appends an extension to the directive.</summary>
      <param name="cacheability">The <see cref="T:System.Web.HttpCacheability" /> enumeration value to set the header to.</param>
      <param name="field">The cache-control extension to add to the header.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="field" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cacheability" /> is not <see cref="F:System.Web.HttpCacheability.Private" /> or <see cref="F:System.Web.HttpCacheability.NoCache" />. </exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetETag(System.String)">
      <summary>Sets the ETag HTTP header to the specified string.</summary>
      <param name="etag">The text to use for the ETag header.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="etag" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The ETag header has already been set. - or -The <see cref="M:System.Web.HttpCachePolicy.SetETagFromFileDependencies" /> method has already been called.</exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetETagFromFileDependencies">
      <summary>Sets the ETag HTTP header based on the time stamps of the handler's file dependencies.</summary>
      <exception cref="T:System.InvalidOperationException">The ETag header has already been set. </exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetExpires(System.DateTime)">
      <summary>Sets the Expires HTTP header to an absolute date and time.</summary>
      <param name="date">The absolute expiration time.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetLastModified(System.DateTime)">
      <summary>Sets the Last-Modified HTTP header to the specified date and time.</summary>
      <param name="date">The date-time value to set the Last-Modified header to.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="date" /> is later than the current DateTime. </exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetLastModifiedFromFileDependencies">
      <summary>Sets the Last-Modified HTTP header based on the time stamps of the handler's file dependencies.</summary>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetMaxAge(System.TimeSpan)">
      <summary>Sets the Cache-Control: max-age HTTP header to the specified time span.</summary>
      <param name="delta">The time span to set the Cache-Control: max-age header to.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="delta" /> is less than 0 or greater than one year. </exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetNoServerCaching">
      <summary>Stops all origin-server caching for the current response.</summary>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetNoStore">
      <summary>Sets the Cache-Control: no-store HTTP header.</summary>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetNoTransforms">
      <summary>Sets the Cache-Control: no-transform HTTP header.</summary>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetOmitVaryStar(System.Boolean)">
      <summary>Specifies whether the response contains the vary:* header when varying by parameters.</summary>
      <param name="omit">true to direct the <see cref="T:System.Web.HttpCachePolicy" /> object to not use the * value for its <see cref="P:System.Web.HttpCachePolicy.VaryByHeaders" /> property; otherwise, false.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetProxyMaxAge(System.TimeSpan)">
      <summary>Sets the Cache-Control: s-maxage HTTP header to the specified time span.</summary>
      <param name="delta">The time span to set the Cache-Control: s-maxage header to.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="delta" /> is less than 0. </exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetRevalidation(System.Web.HttpCacheRevalidation)">
      <summary>Sets the Cache-Control HTTP header to either the must-revalidate or the proxy-revalidate directives, based on the specified enumeration value.</summary>
      <param name="revalidation">The <see cref="T:System.Web.HttpCacheRevalidation" /> enumeration value to set the Cache-Control header to.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="revalidation" /> is not one of the enumeration values. </exception>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetSlidingExpiration(System.Boolean)">
      <summary>Sets cache expiration to absolute or sliding.</summary>
      <param name="slide">true to set a sliding cache expiration, and false to set an absolute cache expiration.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetValidUntilExpires(System.Boolean)">
      <summary>Specifies whether the ASP.NET cache should ignore HTTP Cache-Control headers sent by the client that invalidate the cache.</summary>
      <param name="validUntilExpires">true to specify that ASP.NET should ignore Cache-Control invalidation headers; otherwise, false.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicyWrapper.SetVaryByCustom(System.String)">
      <summary>Specifies a text string to vary cached output responses by.</summary>
      <param name="custom">The text string to vary cached output by.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="custom" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.HttpCachePolicy.SetVaryByCustom(System.String)" /> method has already been called. </exception>
    </member>
    <member name="P:System.Web.HttpCachePolicyWrapper.VaryByContentEncodings">
      <summary>Gets the list of Content-Encoding headers that will be used to vary the output cache.</summary>
      <returns>An object that specifies which Content-Encoding headers are used to select the cached response.</returns>
    </member>
    <member name="P:System.Web.HttpCachePolicyWrapper.VaryByHeaders">
      <summary>Gets the list of all HTTP headers that will be used to vary cache output.</summary>
      <returns>An object that specifies which HTTP headers are used to select the cached response.</returns>
    </member>
    <member name="P:System.Web.HttpCachePolicyWrapper.VaryByParams">
      <summary>Gets the list of parameters received by an HTTP GET or HTTP POST that affect caching.</summary>
      <returns>An object that specifies which cache-control parameters are used to select the cached response.</returns>
    </member>
    <member name="T:System.Web.HttpContextBase">
      <summary>Serves as the base class for classes that contain HTTP-specific information about an individual HTTP request.</summary>
    </member>
    <member name="M:System.Web.HttpContextBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="M:System.Web.HttpContextBase.AddError(System.Exception)">
      <summary>When overridden in a derived class, adds an exception to the exception collection for the current HTTP request.</summary>
      <param name="errorInfo">The exception to add to the exception collection.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.AllErrors">
      <summary>When overridden in a derived class, gets an array of errors (if any) that accumulated when an HTTP request was being processed.</summary>
      <returns>An array of <see cref="T:System.Exception" /> objects for the current HTTP request, or null if no errors accumulated during the HTTP request processing.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Application">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</summary>
      <returns>The application state object for the current HTTP request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.ApplicationInstance">
      <summary>When overridden in a derived class, gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</summary>
      <returns>The object for the current HTTP request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Cache">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</summary>
      <returns>The cache for the current application domain.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.ClearError">
      <summary>When overridden in a derived class, clears all errors for the current HTTP request.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.CurrentHandler">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the handler that is currently executing.</summary>
      <returns>An object that represents the currently executing handler. </returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.CurrentNotification">
      <summary>When overridden in a derived class, gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the <see cref="T:System.Web.HttpApplication" /> event that is currently processing. </summary>
      <returns>One of the <see cref="T:System.Web.RequestNotification" /> values.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Error">
      <summary>When overridden in a derived class, gets the first error (if any) that accumulated when an HTTP request was being processed.</summary>
      <returns>The first exception for the current HTTP request/response process, or null if no errors accumulated during the HTTP request processing.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String)">
      <summary>When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</summary>
      <returns>The requested application-level resource object, or null if no matching resource object is found.</returns>
      <param name="classKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</param>
      <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />   property of the requested resource object.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <returns>The requested application-level resource object, which is localized for the specified culture, or null if no matching resource object is found.</returns>
      <param name="classKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</param>
      <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />   property of the requested resource object.</param>
      <param name="culture">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String)">
      <summary>When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</summary>
      <returns>The requested page-level resource object, or null if no matching resource object is found.</returns>
      <param name="virtualPath">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</param>
      <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />   property of the requested resource object.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <returns>The requested local resource object, which is localized for the specified culture, or null if no matching resource object is found.</returns>
      <param name="virtualPath">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</param>
      <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />   property of the requested resource object.</param>
      <param name="culture">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.GetSection(System.String)">
      <summary>When overridden in a derived class, gets the specified configuration section of the current application's default configuration. </summary>
      <returns>The specified section, or null if the section does not exist.</returns>
      <param name="sectionName">The configuration section path (in XPath format) and the configuration element name.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.GetService(System.Type)">
      <summary>When overridden in a derived class, returns an object for the current service type.</summary>
      <returns>The current service type, or null if no service is found.</returns>
      <param name="serviceType">The type of service object to get.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Handler">
      <summary>When overridden in a derived class, gets or sets the <see cref="T:System.Web.IHttpHandler" /> object that is responsible for processing the HTTP request.</summary>
      <returns>The object that is responsible for processing the HTTP request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.IsCustomErrorEnabled">
      <summary>When overridden in a derived class, gets a value that indicates whether custom errors are enabled for the current HTTP request.</summary>
      <returns>true if custom errors are enabled; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.IsDebuggingEnabled">
      <summary>When overridden in a derived class, gets a value that indicates whether the current HTTP request is in debug mode.</summary>
      <returns>true if the request is in debug mode; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.IsPostNotification">
      <summary>When overridden in a derived class, gets a value that indicates whether an <see cref="T:System.Web.HttpApplication" /> event has finished processing. </summary>
      <returns>true if the event has finished processing; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Items">
      <summary>When overridden in a derived class, gets a key/value collection that can be used to organize and share data between a module and a handler during an HTTP request.</summary>
      <returns>A key/value collection that provides access to an individual value in the collection by using a specified key.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.PreviousHandler">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</summary>
      <returns>An <see cref="T:System.Web.IHttpHandler" /> object that represents the parent handler, or null if no parent handler was found.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Profile">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</summary>
      <returns>If the profile properties are defined in the application configuration file and profiles are enabled for the application, an object that represents the current user profile; otherwise, null.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Request">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</summary>
      <returns>The current HTTP request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Response">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.HttpResponse" /> object for the current HTTP response.</summary>
      <returns>The current HTTP response.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.RewritePath(System.String)">
      <summary>When overridden in a derived class, rewrites the URL by using the specified path.</summary>
      <param name="path">The replacement path.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.RewritePath(System.String,System.Boolean)">
      <summary>When overridden in a derived class, rewrites the URL by using the specified path and a value that specifies whether the virtual path for server resources is modified.</summary>
      <param name="path">The replacement path.</param>
      <param name="rebaseClientPath">true to reset the virtual path; false to keep the virtual path unchanged.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String)">
      <summary>When overridden in a derived class, rewrites the URL by using the specified path, path information, and query string information.</summary>
      <param name="filePath">The replacement path.</param>
      <param name="pathInfo">Additional path information for a resource.</param>
      <param name="queryString">The request query string.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String,System.Boolean)">
      <summary>When overridden in a derived class, rewrites the URL by using the specified path, path information, query string information, and a value that specifies whether the client file path is set to the rewrite path. </summary>
      <param name="filePath">The replacement path.</param>
      <param name="pathInfo">Additional path information for a resource.</param>
      <param name="queryString">The request query string.</param>
      <param name="setClientFilePath">true to set the file path used for client resources to the value of the <paramref name="filePath" /> parameter; otherwise, false.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Server">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.HttpServerUtility" /> object that provides methods that are used when Web requests are being processed.</summary>
      <returns>The server utility object for the current HTTP request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Session">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</summary>
      <returns>The session-state object for the current HTTP request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.SkipAuthorization">
      <summary>When overridden in a derived class, gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</summary>
      <returns>true if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, false. </returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Timestamp">
      <summary>When overridden in a derived class, gets the initial timestamp of the current HTTP request.</summary>
      <returns>The timestamp of the current HTTP request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.Trace">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</summary>
      <returns>The trace object for the current HTTP response.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpContextBase.User">
      <summary>When overridden in a derived class, gets or sets security information for the current HTTP request.</summary>
      <returns>An object that contains security information for the current HTTP request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpContextWrapper">
      <summary>Encapsulates the HTTP intrinsic object that contains HTTP-specific information about an individual HTTP request.</summary>
    </member>
    <member name="M:System.Web.HttpContextWrapper.#ctor(System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpContextWrapper" /> class by using the specified context object.</summary>
      <param name="httpContext">The object that this wrapper class provides access to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> is null.</exception>
    </member>
    <member name="M:System.Web.HttpContextWrapper.AddError(System.Exception)">
      <summary>Adds an exception to the exception collection for the current HTTP request.</summary>
      <param name="errorInfo">The exception to add to the exception collection.</param>
    </member>
    <member name="P:System.Web.HttpContextWrapper.AllErrors">
      <summary>Gets an array of errors (if any) that accumulated when an HTTP request was being processed.</summary>
      <returns>An array of <see cref="T:System.Exception" /> objects for the current HTTP request, or null if no errors accumulated during the HTTP request processing.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Application">
      <summary>Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</summary>
      <returns>The state object for the current HTTP request.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.ApplicationInstance">
      <summary>Gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</summary>
      <returns>The object for the current HTTP request.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Cache">
      <summary>Gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</summary>
      <returns>The cache object for the current application domain.</returns>
    </member>
    <member name="M:System.Web.HttpContextWrapper.ClearError">
      <summary>Clears all errors for the current HTTP request.</summary>
    </member>
    <member name="P:System.Web.HttpContextWrapper.CurrentHandler">
      <summary>Gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the handler that is currently executing.</summary>
      <returns>An object that represents the handler that is currently executing.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.CurrentNotification">
      <summary>Gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the current <see cref="T:System.Web.HttpApplication" /> event that is processing.</summary>
      <returns>One of the <see cref="T:System.Web.RequestNotification" /> values.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Error">
      <summary>Gets the first error (if any) that accumulated when an HTTP request was being processed.</summary>
      <returns>The first exception for the current HTTP request, or null if no errors accumulated when the HTTP request was being processed. The default is null.</returns>
    </member>
    <member name="M:System.Web.HttpContextWrapper.GetGlobalResourceObject(System.String,System.String)">
      <summary>Gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</summary>
      <returns>The requested application-level resource object, or null if no matching resource object is found.</returns>
      <param name="classKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</param>
      <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />   property of the requested resource object.</param>
    </member>
    <member name="M:System.Web.HttpContextWrapper.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>Gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <returns>The requested application-level resource object, which is localized for the specified culture, or null if no matching resource object is found.</returns>
      <param name="classKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</param>
      <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />   property of the requested resource object.</param>
      <param name="culture">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</param>
    </member>
    <member name="M:System.Web.HttpContextWrapper.GetLocalResourceObject(System.String,System.String)">
      <summary>Gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</summary>
      <returns>The requested page-level resource object, or null if no matching resource object is found.</returns>
      <param name="virtualPath">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</param>
      <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />   property of the requested resource object.</param>
    </member>
    <member name="M:System.Web.HttpContextWrapper.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>Gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <returns>The requested local resource object, which is localized for the specified culture, or null if no matching resource object is found.</returns>
      <param name="virtualPath">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</param>
      <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />   property of the requested resource object.</param>
      <param name="culture">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</param>
    </member>
    <member name="M:System.Web.HttpContextWrapper.GetSection(System.String)">
      <summary>Gets the specified configuration section of the current application's default configuration.</summary>
      <returns>The specified section, or null if the section does not exist.</returns>
      <param name="sectionName">The configuration section path (in XPath format) and the configuration element name.</param>
    </member>
    <member name="M:System.Web.HttpContextWrapper.GetService(System.Type)">
      <summary>Returns an object for the current service type.</summary>
      <returns>The current service type, or null if no service is found.</returns>
      <param name="serviceType">The type of service to get.</param>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Handler">
      <summary>Gets or sets the <see cref="T:System.Web.IHttpHandler" /> object that is responsible for processing the HTTP request.</summary>
      <returns>The object that is responsible for processing the HTTP request.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.IsCustomErrorEnabled">
      <summary>Gets a value that indicates whether custom errors are enabled for the current HTTP request.</summary>
      <returns>true if custom errors are enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.IsDebuggingEnabled">
      <summary>Gets a value that indicates whether the current HTTP request is in debug mode.</summary>
      <returns>true if the request is in debug mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.IsPostNotification">
      <summary>Gets a value that indicates whether an <see cref="T:System.Web.HttpApplication" /> event has finished processing.</summary>
      <returns>true if the event has finished processing; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Items">
      <summary>Gets a key/value collection that can be used to organize and share data between a module and a handler during an HTTP request.</summary>
      <returns>A key/value collection that provides access to an individual value in the collection by using a specified key.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.PreviousHandler">
      <summary>Gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</summary>
      <returns>An <see cref="T:System.Web.IHttpHandler" /> object that represents the parent handler, or null if no parent handler was found.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Profile">
      <summary>Gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</summary>
      <returns>If profile properties are defined in the application configuration file and profiles are enabled for the application, an object that represents the current user profile; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Request">
      <summary>Gets the <see cref="T:System.Web.HttpRequestBase" /> object for the current HTTP request.</summary>
      <returns>The current HTTP request.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Response">
      <summary>Gets the <see cref="T:System.Web.HttpResponseBase" /> object for the current HTTP response.</summary>
      <returns>The current HTTP response.</returns>
    </member>
    <member name="M:System.Web.HttpContextWrapper.RewritePath(System.String)">
      <summary>Rewrites the URL by using the specified path.</summary>
      <param name="path">The replacement path.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.Web.HttpException">
        <paramref name="path" /> is not in the current application's root directory.</exception>
    </member>
    <member name="M:System.Web.HttpContextWrapper.RewritePath(System.String,System.Boolean)">
      <summary>Rewrites the URL by using the specified path and a value that specifies whether the virtual path for server resources is modified.</summary>
      <param name="path">The path to rewrite to.</param>
      <param name="rebaseClientPath">true to reset the virtual path; false to keep the virtual path unchanged.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.Web.HttpException">
        <paramref name="path" /> is not in the current application's root directory.</exception>
    </member>
    <member name="M:System.Web.HttpContextWrapper.RewritePath(System.String,System.String,System.String)">
      <summary>Rewrites the URL by using the specified path, path information, and query string information.</summary>
      <param name="filePath">The replacement path.</param>
      <param name="pathInfo">Additional path information for a resource.</param>
      <param name="queryString">The request query string.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="filePath" /> parameter is null.</exception>
      <exception cref="T:System.Web.HttpException">The <paramref name="filePath" /> parameter is not in the current application's root directory.</exception>
    </member>
    <member name="M:System.Web.HttpContextWrapper.RewritePath(System.String,System.String,System.String,System.Boolean)">
      <summary>Rewrites the URL by using the specified path, path information, query string information, and a value that specifies whether the client file path is set to the rewrite path.</summary>
      <param name="filePath">The replacement path.</param>
      <param name="pathInfo">Additional path information for a resource.</param>
      <param name="queryString">The request query string.</param>
      <param name="setClientFilePath">true to set the file path used for client resources to the value of the <paramref name="filePath" /> parameter; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePath" /> is null.</exception>
      <exception cref="T:System.Web.HttpException">
        <paramref name="filePath" /> is not in the current application's root directory.</exception>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Server">
      <summary>Gets the <see cref="T:System.Web.HttpServerUtilityBase" /> object that provides methods that are used when Web requests are being processed.</summary>
      <returns>The server utility object for the current HTTP request.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Session">
      <summary>Gets the <see cref="T:System.Web.SessionState.HttpSessionStateBase" /> object for the current HTTP request.</summary>
      <returns>The session-state object for the current HTTP request.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.SkipAuthorization">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</summary>
      <returns>true if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Timestamp">
      <summary>Gets the initial timestamp of the current HTTP request.</summary>
      <returns>The timestamp of the current HTTP request.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.Trace">
      <summary>Gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</summary>
      <returns>The trace object for the current HTTP response.</returns>
    </member>
    <member name="P:System.Web.HttpContextWrapper.User">
      <summary>Gets or sets security information for the current HTTP request.</summary>
      <returns>An object that contains security information for the current HTTP request.</returns>
    </member>
    <member name="T:System.Web.HttpFileCollectionBase">
      <summary>Serves as the base class for classes that provide access to files that were uploaded by a client.</summary>
    </member>
    <member name="M:System.Web.HttpFileCollectionBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.HttpFileCollectionBase.AllKeys">
      <summary>When overridden in a derived class, gets an array that contains the keys (names) of all posted file objects in the collection.</summary>
      <returns>An array of file names.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpFileCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</summary>
      <param name="dest">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying starts.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpFileCollectionBase.Count">
      <summary>When overridden in a derived class, gets the number of posted file objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpFileCollectionBase.Get(System.Int32)">
      <summary>When overridden in a derived class, returns the posted file object at the specified index.</summary>
      <returns>The posted file object specified by <paramref name="index" />.</returns>
      <param name="index">The index of the object to return.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpFileCollectionBase.Get(System.String)">
      <summary>When overridden in a derived class, returns the posted file object that has the specified name from the collection.</summary>
      <returns>The posted file object that is specified by <paramref name="name" />.</returns>
      <param name="name">The name of the object to return.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpFileCollectionBase.GetEnumerator">
      <summary>When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</summary>
      <returns>An object that can be used to iterate through the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpFileCollectionBase.GetKey(System.Int32)">
      <summary>When overridden in a derived class, returns the name of the posted file object at the specified index.</summary>
      <returns>The name of the posted file object that is specified by <paramref name="index" />.</returns>
      <param name="index">The index of the object name to return.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpFileCollectionBase.IsSynchronized">
      <summary>When overridden in a derived class, gets a value that indicates whether access to the collection is thread-safe.</summary>
      <returns>true if access is synchronized (thread-safe); otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpFileCollectionBase.Item(System.Int32)">
      <summary>When overridden in a derived class, gets the posted file object at the specified index.</summary>
      <returns>The posted file object specified by <paramref name="index" />.</returns>
      <param name="index">The index of the object to get.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpFileCollectionBase.Item(System.String)">
      <summary>When overridden in a derived class, gets the posted file object that has the specified name from the collection.</summary>
      <returns>The posted file object that is specified by <paramref name="name" />.</returns>
      <param name="name">The name of the object to return.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpFileCollectionBase.SyncRoot">
      <summary>When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpFileCollectionWrapper">
      <summary>Encapsulates the HTTP intrinsic object that provides access to files that were uploaded by a client.</summary>
    </member>
    <member name="M:System.Web.HttpFileCollectionWrapper.#ctor(System.Web.HttpFileCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpFileCollectionWrapper" /> class. </summary>
      <param name="httpFileCollection">The object that this wrapper class provides access to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpApplicationState" /> is null.</exception>
    </member>
    <member name="P:System.Web.HttpFileCollectionWrapper.AllKeys">
      <summary>Gets an array that contains the keys (names) of all posted file objects in the collection.</summary>
      <returns>An array of file names.</returns>
    </member>
    <member name="M:System.Web.HttpFileCollectionWrapper.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an array, starting at the specified index in the array.</summary>
      <param name="dest">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying starts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-The number of elements in the source <see cref="T:System.Web.HttpFileCollectionWrapper" /> object is greater than the available space from <paramref name="index" /> to the end of the destination array.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Web.HttpFileCollectionWrapper" /> object cannot be cast automatically to the type of the destination array.</exception>
    </member>
    <member name="P:System.Web.HttpFileCollectionWrapper.Count">
      <summary>Gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="M:System.Web.HttpFileCollectionWrapper.Get(System.Int32)">
      <summary>Returns the posted file object at the specified index.</summary>
      <returns>The posted file object specified by <paramref name="index" />.</returns>
      <param name="index">The index of the item to return.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
    </member>
    <member name="M:System.Web.HttpFileCollectionWrapper.Get(System.String)">
      <summary>Returns the posted file object that has the specified name from the collection.</summary>
      <returns>The posted file object specified by <paramref name="name" />, if found; otherwise, null.</returns>
      <param name="name">The name of the object to return.</param>
    </member>
    <member name="M:System.Web.HttpFileCollectionWrapper.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the collection.</summary>
      <returns>An object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.HttpFileCollectionWrapper.GetKey(System.Int32)">
      <summary>Returns the name of the posted file object at the specified index.</summary>
      <returns>The name of the posted file object that is specified by <paramref name="index" />.</returns>
      <param name="index">The index of the object name to return.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
    </member>
    <member name="M:System.Web.HttpFileCollectionWrapper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the data that is required in order to serialize the <see cref="T:System.Web.HttpFileCollectionWrapper" /> object.</summary>
      <param name="info">The information that is required in order to serialize the <see cref="T:System.Web.HttpFileCollectionWrapper" /> object.</param>
      <param name="context">The source and destination of the serialized stream that is associated with the <see cref="T:System.Web.HttpFileCollectionWrapper" /> object.</param>
    </member>
    <member name="P:System.Web.HttpFileCollectionWrapper.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is thread-safe.</summary>
      <returns>true if access is synchronized (thread-safe); otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.HttpFileCollectionWrapper.Item(System.Int32)">
      <summary>Gets the posted file object at the specified index.</summary>
      <returns>The posted file object specified by <paramref name="index" />.</returns>
      <param name="index">The index of the item to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
    </member>
    <member name="P:System.Web.HttpFileCollectionWrapper.Item(System.String)">
      <summary>Gets the posted file object that has the specified name from the collection.</summary>
      <returns>The posted file object specified by <paramref name="name" />, if found; otherwise, null.</returns>
      <param name="name">The name of the object to get.</param>
    </member>
    <member name="P:System.Web.HttpFileCollectionWrapper.Keys">
      <summary>Gets a <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> instance that contains all the keys in the <see cref="T:System.Web.HttpApplicationStateWrapper" /> instance.</summary>
      <returns>A collection that contains all the keys in the collection.</returns>
    </member>
    <member name="M:System.Web.HttpFileCollectionWrapper.OnDeserialization(System.Object)">
      <summary>Raises the deserialization event when deserialization is finished.</summary>
      <param name="sender">The source of the deserialization event.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that is associated with the current <see cref="T:System.Web.HttpFileCollectionWrapper" /> instance is invalid.</exception>
    </member>
    <member name="P:System.Web.HttpFileCollectionWrapper.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="T:System.Web.HttpPostedFileBase">
      <summary>Serves as the base class for classes that provide access to individual files that have been uploaded by a client.</summary>
    </member>
    <member name="M:System.Web.HttpPostedFileBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.HttpPostedFileBase.ContentLength">
      <summary>When overridden in a derived class, gets the size of an uploaded file, in bytes.</summary>
      <returns>The length of the file, in bytes.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpPostedFileBase.ContentType">
      <summary>When overridden in a derived class, gets the MIME content type of an uploaded file.</summary>
      <returns>The MIME content type of the file.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpPostedFileBase.FileName">
      <summary>When overridden in a derived class, gets the fully qualified name of the file on the client.</summary>
      <returns>The name of the file on the client, which includes the directory path.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpPostedFileBase.InputStream">
      <summary>When overridden in a derived class, gets a <see cref="T:System.IO.Stream" /> object that points to an uploaded file to prepare for reading the contents of the file.</summary>
      <returns>An object for reading a file.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpPostedFileBase.SaveAs(System.String)">
      <summary>When overridden in a derived class, saves the contents of an uploaded file.</summary>
      <param name="filename">The name of the file to save.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpPostedFileWrapper">
      <summary>Encapsulates the HTTP intrinsic object that provides access to individual files that have been uploaded by a client.</summary>
    </member>
    <member name="M:System.Web.HttpPostedFileWrapper.#ctor(System.Web.HttpPostedFile)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpPostedFileWrapper" /> class. </summary>
      <param name="httpPostedFile">The object that this wrapper class provides access to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpApplicationState" /> is null.</exception>
    </member>
    <member name="P:System.Web.HttpPostedFileWrapper.ContentLength">
      <summary>Gets the size of an uploaded file, in bytes.</summary>
      <returns>The length of the file, in bytes.</returns>
    </member>
    <member name="P:System.Web.HttpPostedFileWrapper.ContentType">
      <summary>Gets the MIME content type of an uploaded file.</summary>
      <returns>The MIME content type of the file.</returns>
    </member>
    <member name="P:System.Web.HttpPostedFileWrapper.FileName">
      <summary>Gets the fully qualified name of the file on the client.</summary>
      <returns>The name of the file on the client, which includes the directory path.</returns>
    </member>
    <member name="P:System.Web.HttpPostedFileWrapper.InputStream">
      <summary>Gets a <see cref="T:System.IO.Stream" /> object that points to an uploaded file to prepare for reading the contents of the file.</summary>
      <returns>An object for reading a file.</returns>
    </member>
    <member name="M:System.Web.HttpPostedFileWrapper.SaveAs(System.String)">
      <summary>Saves the contents of an uploaded file.</summary>
      <param name="filename">The name of the file to save.</param>
    </member>
    <member name="T:System.Web.HttpRequestBase">
      <summary>Serves as the base class for classes that enable ASP.NET to read the HTTP values sent by a client during a Web request.</summary>
    </member>
    <member name="M:System.Web.HttpRequestBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.HttpRequestBase.AcceptTypes">
      <summary>When overridden in a derived class, gets an array of client-supported MIME accept types.</summary>
      <returns>An array of client-supported MIME accept types.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.AnonymousID">
      <summary>When overridden in a derived class, gets the anonymous identifier for the user, if it is available.</summary>
      <returns>The current anonymous user identifier.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.ApplicationPath">
      <summary>When overridden in a derived class, gets the virtual root path of the ASP.NET application on the server.</summary>
      <returns>The virtual path of the current application.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.AppRelativeCurrentExecutionFilePath">
      <summary>When overridden in a derived class, gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</summary>
      <returns>The virtual path of the application root for the current request with the tilde operator (~) added.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpRequestBase.BinaryRead(System.Int32)">
      <summary>When overridden in a derived class, performs a binary read of a specified number of bytes from the current input stream.</summary>
      <returns>An array that contains the binary data.</returns>
      <param name="count">The number of bytes to read. </param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.Browser">
      <summary>When overridden in a derived class, gets information about the requesting client's browser capabilities.</summary>
      <returns>An object that represents the capabilities of the client browser.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.ClientCertificate">
      <summary>When overridden in a derived class, gets the current request's client security certificate.</summary>
      <returns>The client's security certificate.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.ContentEncoding">
      <summary>When overridden in a derived class, gets or sets the character set of the data that is provided by the client.</summary>
      <returns>The client's character set.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.ContentLength">
      <summary>When overridden in a derived class, gets the length, in bytes, of content that was sent by the client.</summary>
      <returns>The length, in bytes, of content that was sent by the client.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.ContentType">
      <summary>When overridden in a derived class, gets or sets the MIME content type of the request.</summary>
      <returns>The MIME content type of the request, such as "text/html".</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.Cookies">
      <summary>When overridden in a derived class, gets the collection of cookies that were sent by the client.</summary>
      <returns>The client's cookies.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.CurrentExecutionFilePath">
      <summary>When overridden in a derived class, gets the virtual path of the current request.</summary>
      <returns>The virtual path of the page handler that is currently executing.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.FilePath">
      <summary>When overridden in a derived class, gets the virtual path of the current request.</summary>
      <returns>The virtual path of the current request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.Files">
      <summary>When overridden in a derived class, gets the collection of files that were uploaded by the client, in multipart MIME format.</summary>
      <returns>The files that were uploaded by the client. The items in the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.Filter">
      <summary>When overridden in a derived class, gets or sets the filter to use when the current input stream is being read.</summary>
      <returns>An object to use as the filter.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.Form">
      <summary>When overridden in a derived class, gets the collection of form variables that were sent by the client.</summary>
      <returns>The form variables.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.Headers">
      <summary>When overridden in a derived class, gets the collection of HTTP headers that were sent by the client.</summary>
      <returns>The request headers.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.HttpMethod">
      <summary>When overridden in a derived class, gets the HTTP data-transfer method (such as GET, POST, or HEAD) that was used by the client.</summary>
      <returns>The HTTP data-transfer method that was used by the client.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.InputStream">
      <summary>When overridden in a derived class, gets the contents of the incoming HTTP entity body.</summary>
      <returns>The contents of the incoming HTTP entity body.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.IsAuthenticated">
      <summary>When overridden in a derived class, gets a value that indicates whether the request has been authenticated.</summary>
      <returns>true if the request has been authenticated; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.IsLocal">
      <summary>When overridden in a derived class, gets a value that indicates whether the request is from the local computer.</summary>
      <returns>true if the request is from the local computer; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.IsSecureConnection">
      <summary>When overridden in a derived class, gets a value that indicates whether the HTTP connection uses secure sockets (HTTPS protocol).</summary>
      <returns>true if the connection is an SSL connection that uses HTTPS protocol; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.Item(System.String)">
      <summary>When overridden in a derived class, gets the specified object from the <see cref="P:System.Web.HttpRequestBase.Cookies" />, <see cref="P:System.Web.HttpRequestBase.Form" />, <see cref="P:System.Web.HttpRequestBase.QueryString" />, or <see cref="P:System.Web.HttpRequestBase.ServerVariables" /> collections.</summary>
      <returns>The <see cref="P:System.Web.HttpRequestBase.QueryString" />, <see cref="P:System.Web.HttpRequestBase.Form" />, <see cref="P:System.Web.HttpRequestBase.Cookies" />, or <see cref="P:System.Web.HttpRequestBase.ServerVariables" /> collection member that is specified by <paramref name="key" />. If the specified <paramref name="key" /> value is not found, null is returned.</returns>
      <param name="key">The name of the collection member to get.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.LogonUserIdentity">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</summary>
      <returns>The identity for the current user.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpRequestBase.MapImageCoordinates(System.String)">
      <summary>When overridden in a derived class, maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</summary>
      <returns>A two-dimensional array of integers.</returns>
      <param name="imageFieldName">The name of the image map. </param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpRequestBase.MapPath(System.String)">
      <summary>When overridden in a derived class, maps the specified virtual path to a physical path on the server.</summary>
      <returns>The physical path on the server that is specified by <paramref name="virtualPath" />.</returns>
      <param name="virtualPath">The virtual path (absolute or relative) to map to a physical path. </param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpRequestBase.MapPath(System.String,System.String,System.Boolean)">
      <summary>When overridden in a derived class, maps the specified virtual path to a physical path on the server.</summary>
      <returns>The physical path on the server.</returns>
      <param name="virtualPath">The virtual path (absolute or relative) to map to a physical path. </param>
      <param name="baseVirtualDir">The virtual base directory path that is used for relative resolution. </param>
      <param name="allowCrossAppMapping">true to indicate that <paramref name="virtualPath" /> can belong to another application; otherwise, false. </param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.Params">
      <summary>When overridden in a derived class, gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.ServerVariables" />, and <see cref="P:System.Web.HttpRequest.Cookies" /> items.</summary>
      <returns>The collection of combined values.</returns>
    </member>
    <member name="P:System.Web.HttpRequestBase.Path">
      <summary>When overridden in a derived class, gets the virtual path of the current request.</summary>
      <returns>The virtual path of the current request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.PathInfo">
      <summary>When overridden in a derived class, gets additional path information for a resource that has a URL extension.</summary>
      <returns>The additional path information for the resource.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.PhysicalApplicationPath">
      <summary>When overridden in a derived class, gets the physical file-system path of the current application's root directory.</summary>
      <returns>The file-system path of the current application's root directory.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.PhysicalPath">
      <summary>When overridden in a derived class, gets the physical file-system path of the requested resource.</summary>
      <returns>The file-system path of the requested resource.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.QueryString">
      <summary>When overridden in a derived class, gets the collection of HTTP query-string variables.</summary>
      <returns>The query-string variables that were sent by the client in the URL of the current request. </returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.RawUrl">
      <summary>When overridden in a derived class, gets the complete URL of the current request.</summary>
      <returns>The complete URL of the current request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.RequestType">
      <summary>When overridden in a derived class, gets or sets the HTTP data-transfer method (GET or POST) that was used by the client.</summary>
      <returns>The HTTP data-transfer method type that was used by the client.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpRequestBase.SaveAs(System.String,System.Boolean)">
      <summary>When overridden in a derived class, saves an HTTP request to disk.</summary>
      <param name="filename">The physical drive path. </param>
      <param name="includeHeaders">A value that specifies whether to save HTTP headers to disk. </param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.ServerVariables">
      <summary>When overridden in a derived class, gets a collection of Web server variables.</summary>
      <returns>The server variables.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.TotalBytes">
      <summary>When overridden in a derived class, gets the number of bytes in the current input stream.</summary>
      <returns>The number of bytes in the input stream.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.Url">
      <summary>When overridden in a derived class, gets information about the URL of the current request.</summary>
      <returns>An object that contains information about the URL of the current request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.UrlReferrer">
      <summary>When overridden in a derived class, gets information about the URL of the client request that linked to the current URL.</summary>
      <returns>The URL of the page that linked to the current request.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.UserAgent">
      <summary>When overridden in a derived class, gets the complete user-agent string of the client.</summary>
      <returns>The complete user-agent string of the client.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.UserHostAddress">
      <summary>When overridden in a derived class, gets the IP host address of the client.</summary>
      <returns>The IP address of the client.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.UserHostName">
      <summary>When overridden in a derived class, gets the DNS name of the client.</summary>
      <returns>The DNS name of the client.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpRequestBase.UserLanguages">
      <summary>When overridden in a derived class, gets a sorted array of client language preferences.</summary>
      <returns>A sorted array of client language preferences, or null if the array is empty.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpRequestBase.ValidateInput">
      <summary>When overridden in a derived class, causes validation to occur for the collections that are accessed through the <see cref="P:System.Web.HttpRequestBase.Cookies" />, <see cref="P:System.Web.HttpRequestBase.Form" />, and <see cref="P:System.Web.HttpRequestBase.QueryString" /> properties.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpRequestWrapper">
      <summary>Encapsulates the HTTP intrinsic object that enables ASP.NET to read the HTTP values that are sent by a client during a Web request. </summary>
    </member>
    <member name="M:System.Web.HttpRequestWrapper.#ctor(System.Web.HttpRequest)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpRequestWrapper" /> class by using the specified request object.</summary>
      <param name="httpRequest">The object that this wrapper class provides access to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpRequest" /> is null.</exception>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.AcceptTypes">
      <summary>Gets an array of client-supported MIME accept types.</summary>
      <returns>An array of client-supported MIME accept types.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.AnonymousID">
      <summary>Gets the anonymous identifier for the user, if it is available.</summary>
      <returns>The current anonymous user identifier.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.ApplicationPath">
      <summary>Gets the virtual path of the root of the ASP.NET application on the server.</summary>
      <returns>The virtual root path of the current application.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.AppRelativeCurrentExecutionFilePath">
      <summary>Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</summary>
      <returns>The virtual path of the application root for the current request with the tilde operator added.</returns>
    </member>
    <member name="M:System.Web.HttpRequestWrapper.BinaryRead(System.Int32)">
      <summary>Performs a binary read of a specified number of bytes from the current input stream.</summary>
      <returns>An array that contains the binary data.</returns>
      <param name="count">The number of bytes to read. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> is less than 0.- or -<paramref name="count" /> is greater than the number of bytes available. </exception>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Browser">
      <summary>Gets information about the requesting client's browser capabilities.</summary>
      <returns>An object that represents the capabilities of the client browser.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.ClientCertificate">
      <summary>Gets the current request's client security certificate.</summary>
      <returns>The client's security certificate.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.ContentEncoding">
      <summary>Gets or sets the character set of the data that was provided by the client.</summary>
      <returns>The client's character set.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.ContentLength">
      <summary>Gets the length, in bytes, of content that was sent by the client.</summary>
      <returns>The length, in bytes, of content that was sent by the client.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.ContentType">
      <summary>Gets or sets the MIME content type of the request.</summary>
      <returns>The MIME content type of the request, such as "text/html".</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Cookies">
      <summary>Gets the collection of cookies that were sent by the client.</summary>
      <returns>The client's cookies.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.CurrentExecutionFilePath">
      <summary>Gets the virtual path of the current request.</summary>
      <returns>The virtual path of the page handler that is currently executing.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.FilePath">
      <summary>Gets the virtual path of the current request.</summary>
      <returns>The virtual path of the current request.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Files">
      <summary>Gets the collection of files that were uploaded by the client, in multipart MIME format.</summary>
      <returns>The files that were uploaded by the client. The items in the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Filter">
      <summary>Gets or sets the filter to use when the current input stream is being read.</summary>
      <returns>An object to use as the filter.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Form">
      <summary>Gets the collection of form variables that were sent by the client.</summary>
      <returns>The form variables.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Headers">
      <summary>Gets the collection of HTTP headers that were sent by the client.</summary>
      <returns>The request headers.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.HttpMethod">
      <summary>Gets the HTTP data-transfer method (such as GET, POST, or HEAD) that was used by the client.</summary>
      <returns>The HTTP data-transfer method that was used by the client.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.InputStream">
      <summary>Gets the contents of the incoming HTTP entity body.</summary>
      <returns>The contents of the incoming HTTP content body.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.IsAuthenticated">
      <summary>Gets a value that indicates whether the request has been authenticated.</summary>
      <returns>true if the request has been authenticated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.IsLocal">
      <summary>Gets a value that indicates whether the request is from the local computer.</summary>
      <returns>true if the request is from the local computer; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.IsSecureConnection">
      <summary>Gets a value that indicates whether the HTTP connection uses secure sockets (HTTPS protocol).</summary>
      <returns>true if the connection is an SSL connection that uses HTTPS protocol; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Item(System.String)">
      <summary>Gets the specified object from the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.QueryString" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</summary>
      <returns>The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member that is specified by <paramref name="key" />. If the specified <paramref name="key" /> value is not found, null is returned.</returns>
      <param name="key">The name of the collection member to get. </param>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.LogonUserIdentity">
      <summary>Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</summary>
      <returns>The identity for the current user.</returns>
    </member>
    <member name="M:System.Web.HttpRequestWrapper.MapImageCoordinates(System.String)">
      <summary>Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</summary>
      <returns>A two-dimensional array of integers.</returns>
      <param name="imageFieldName">The name of the image map. </param>
    </member>
    <member name="M:System.Web.HttpRequestWrapper.MapPath(System.String)">
      <summary>Maps the specified virtual path to a physical path on the server.</summary>
      <returns>The physical path on the server that is specified by <paramref name="virtualPath" />.</returns>
      <param name="virtualPath">The virtual path (absolute or relative) to map to a physical path. </param>
    </member>
    <member name="M:System.Web.HttpRequestWrapper.MapPath(System.String,System.String,System.Boolean)">
      <summary>Maps the specified virtual path to a physical path on the server.</summary>
      <returns>The physical path on the server.</returns>
      <param name="virtualPath">The virtual path (absolute or relative) to map to a physical path. </param>
      <param name="baseVirtualDir">The virtual base directory path that is used for relative resolution. </param>
      <param name="allowCrossAppMapping">true to indicate that <paramref name="virtualPath" /> can belong to another application; otherwise, false. </param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="allowCrossAppMapping" /> is false and <paramref name="virtualPath" /> belongs to another application. </exception>
      <exception cref="T:System.Web.HttpException">No <see cref="T:System.Web.HttpContext" /> object is defined for the request. </exception>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Params">
      <summary>Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.ServerVariables" />, and <see cref="P:System.Web.HttpRequest.Cookies" /> items.</summary>
      <returns>The collection of combined values.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Path">
      <summary>Gets the virtual path of the current request.</summary>
      <returns>The virtual path of the current request.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.PathInfo">
      <summary>Gets additional path information for a resource that has a URL extension.</summary>
      <returns>The additional path information for the resource.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.PhysicalApplicationPath">
      <summary>Gets the physical file-system path of the current application's root directory.</summary>
      <returns>The file-system path of the current application's root directory.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.PhysicalPath">
      <summary>Gets the physical file-system path of the requested resource.</summary>
      <returns>The file-system path of the requested resource.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.QueryString">
      <summary>Gets the collection of HTTP query-string variables.</summary>
      <returns>The query-string variables that were sent by the client in the URL of the current request. </returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.RawUrl">
      <summary>Gets the complete URL of the current request.</summary>
      <returns>The complete URL of the current request.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.RequestType">
      <summary>Gets or sets the HTTP data-transfer method (GET or POST) that was used by the client.</summary>
      <returns>The HTTP data-transfer method type that was used by the client.</returns>
    </member>
    <member name="M:System.Web.HttpRequestWrapper.SaveAs(System.String,System.Boolean)">
      <summary>Saves an HTTP request to disk.</summary>
      <param name="filename">The physical drive path. </param>
      <param name="includeHeaders">A value that specifies whether to save HTTP headers to disk. </param>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.ServerVariables">
      <summary>Gets a collection of Web server variables.</summary>
      <returns>The server variables.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.TotalBytes">
      <summary>Gets the number of bytes in the current input stream.</summary>
      <returns>The number of bytes in the input stream.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.Url">
      <summary>Gets information about the URL of the current request.</summary>
      <returns>An object that contains information about the URL of the current request.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.UrlReferrer">
      <summary>Gets information about the URL of the client request that linked to the current URL.</summary>
      <returns>The URL of the page that linked to the current request.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.UserAgent">
      <summary>Gets the complete user-agent string of the client.</summary>
      <returns>The complete user-agent string of the client.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.UserHostAddress">
      <summary>Gets the IP host address of the client.</summary>
      <returns>The IP address of the client.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.UserHostName">
      <summary>Gets the DNS name of the client.</summary>
      <returns>The DNS name of the client.</returns>
    </member>
    <member name="P:System.Web.HttpRequestWrapper.UserLanguages">
      <summary>Gets a sorted array of client language preferences.</summary>
      <returns>A sorted array of client language preferences, or null if the array is empty.</returns>
    </member>
    <member name="M:System.Web.HttpRequestWrapper.ValidateInput">
      <summary>Causes validation to occur for the collections that are accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</summary>
    </member>
    <member name="T:System.Web.HttpResponseBase">
      <summary>Serves as the base class for classes that provides HTTP-response information from an ASP.NET operation.</summary>
    </member>
    <member name="M:System.Web.HttpResponseBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="M:System.Web.HttpResponseBase.AddCacheDependency(System.Web.Caching.CacheDependency[])">
      <summary>When overridden in a derived class, associates cache dependencies with the response that enable the response to be invalidated if it is cached and if the specified dependencies change.</summary>
      <param name="dependencies">A file, cache key, or <see cref="T:System.Web.Caching.CacheDependency" /> object to add to the list of application dependencies.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AddCacheItemDependencies(System.Collections.ArrayList)">
      <summary>When overridden in a derived class, makes the validity of a cached response dependent on the specified items in the cache.</summary>
      <param name="cacheKeys">A collection that contains the keys of the items that the cached response is dependent on.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AddCacheItemDependencies(System.String[])">
      <summary>When overridden in a derived class, makes the validity of a cached item dependent on the specified items in the cache.</summary>
      <param name="cacheKeys">An array that contains the keys of the items that the cached response is dependent on.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AddCacheItemDependency(System.String)">
      <summary>When overridden in a derived class, makes the validity of a cached response dependent on the specified item in the cache.</summary>
      <param name="cacheKey">The key of the item that the cached response is dependent on.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AddFileDependencies(System.Collections.ArrayList)">
      <summary>When overridden in a derived class, adds file names to the collection of file names on which the current response is dependent.</summary>
      <param name="filenames">The names of the files to add.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AddFileDependencies(System.String[])">
      <summary>When overridden in a derived class, adds an array of file names to the collection of file names on which the current response is dependent.</summary>
      <param name="filenames">An array of file names to add.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AddFileDependency(System.String)">
      <summary>When overridden in a derived class, adds a single file name to the collection of file names on which the current response is dependent.</summary>
      <param name="filename">The name of the file to add.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AddHeader(System.String,System.String)">
      <summary>When overridden in a derived class, adds an HTTP header to the current response. This method is provided for compatibility with earlier versions of ASP.</summary>
      <param name="name">The name of the HTTP header to add <paramref name="value" /> to.</param>
      <param name="value">The string to add to the header.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AppendCookie(System.Web.HttpCookie)">
      <summary>When overridden in a derived class, adds an HTTP cookie to the HTTP response cookie collection.</summary>
      <param name="cookie">The cookie to add to the response.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AppendHeader(System.String,System.String)">
      <summary>When overridden in a derived class, adds an HTTP header to the current response.</summary>
      <param name="name">The name of the HTTP header to add to the current response.</param>
      <param name="value">The value of the header.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.AppendToLog(System.String)">
      <summary>When overridden in a derived class, adds custom log information to the Internet Information Services (IIS) log file.</summary>
      <param name="param">The text to add to the log file.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.ApplyAppPathModifier(System.String)">
      <summary>When overridden in a derived class, adds a session ID to the virtual path if the session is using <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state, and returns the combined path. </summary>
      <returns>The virtual path, with the session ID inserted.</returns>
      <param name="virtualPath">The virtual path of a resource.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.BinaryWrite(System.Byte[])">
      <summary>When overridden in a derived class, writes a string of binary characters to the HTTP output stream.</summary>
      <param name="buffer">The binary characters to write to the current response.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.Buffer">
      <summary>When overridden in a derived class, gets or sets a value that indicates whether to buffer output and send it after the complete response has finished processing.</summary>
      <returns>true if the output is buffered; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.BufferOutput">
      <summary>When overridden in a derived class, gets or sets a value that indicates whether to buffer output and send it after the complete page has finished processing.</summary>
      <returns>true if the output is buffered; otherwise false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.Cache">
      <summary>When overridden in a derived class, gets the caching policy (such as expiration time, privacy settings, and vary clauses) of the current Web page.</summary>
      <returns>The caching policy of the current response.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.CacheControl">
      <summary>When overridden in a derived class, gets or sets the Cache-Control HTTP header that matches one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</summary>
      <returns>The caching policy of the current response.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.Charset">
      <summary>When overridden in a derived class, gets or sets the HTTP character set of the current response.</summary>
      <returns>The HTTP character set of the current response.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Clear">
      <summary>When overridden in a derived class, clears all headers and content output from the current response.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.ClearContent">
      <summary>When overridden in a derived class, clears all content from the current response.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.ClearHeaders">
      <summary>When overridden in a derived class, clears all headers from the current response.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Close">
      <summary>When overridden in a derived class, closes the socket connection to a client.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.ContentEncoding">
      <summary>When overridden in a derived class, gets or sets the content encoding of the current response.</summary>
      <returns>Information about the content encoding of the current response.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.ContentType">
      <summary>When overridden in a derived class, gets or sets the HTTP MIME type of the current response.</summary>
      <returns>The HTTP MIME type of the current response. </returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.Cookies">
      <summary>When overridden in a derived class, gets the response cookie collection.</summary>
      <returns>The response cookie collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.DisableKernelCache">
      <summary>When overridden in a derived class, disables kernel caching for the current response.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.End">
      <summary>When overridden in a derived class, sends all currently buffered output to the client, stops execution of the requested process, and raises the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.Expires">
      <summary>When overridden in a derived class, gets or sets the number of minutes before a page that is cached on the client or proxy expires. If the user returns to the same page before it expires, the cached version is displayed. <see cref="P:System.Web.HttpResponseBase.Expires" /> is provided for compatibility with earlier versions of Active Server Pages (ASP).</summary>
      <returns>The number of minutes before the page expires.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.ExpiresAbsolute">
      <summary>When overridden in a derived class, gets or sets the absolute date and time at which cached information expires in the cache. <see cref="P:System.Web.HttpResponseBase.ExpiresAbsolute" /> is provided for compatibility with earlier versions of Active Server Pages (ASP).</summary>
      <returns>The date and time at which the page expires.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.Filter">
      <summary>When overridden in a derived class, gets or sets a filter object that is used to modify the HTTP entity body before transmission.</summary>
      <returns>An object that acts as the output filter.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Flush">
      <summary>When overridden in a derived class, sends all currently buffered output to the client.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.HeaderEncoding">
      <summary>When overridden in a derived class, gets or sets the encoding for the header of the current response.</summary>
      <returns>Information about the encoding for the current header.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.Headers">
      <summary>When overridden in a derived class, gets the collection of response headers.</summary>
      <returns>The response headers.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.IsClientConnected">
      <summary>When overridden in a derived class, gets a value that indicates whether the client is connected to the server.</summary>
      <returns>true if the client is currently connected; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.IsRequestBeingRedirected">
      <summary>When overridden in a derived class, gets a value that indicates whether the client is being redirected to a new location.</summary>
      <returns>true if the value of the location response header differs from the current location; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.Output">
      <summary>When overridden in a derived class, gets the object that enables text output to the HTTP response stream.</summary>
      <returns>An object that enables output to the client.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.OutputStream">
      <summary>When overridden in a derived class, enables binary output to the outgoing HTTP content body.</summary>
      <returns>An object that represents the raw contents of the outgoing HTTP content body.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Pics(System.String)">
      <summary>When overridden in a derived class, appends an HTTP PICS-Label header to the current response.</summary>
      <param name="value">The string to add to the PICS-Label header.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Redirect(System.String)">
      <summary>When overridden in a derived class, redirects a request to the specified URL.</summary>
      <param name="url">The target location.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Redirect(System.String,System.Boolean)">
      <summary>When overridden in a derived class, redirects a request to the specified URL and specifies whether execution of the current process should terminate.</summary>
      <param name="url">The target location. </param>
      <param name="endResponse">true to terminate the current process. </param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.RedirectLocation">
      <summary>When overridden in a derived class, gets or sets the value of the HTTP Location header.</summary>
      <returns>The absolute URL of the HTTP Location header.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.RemoveOutputCacheItem(System.String)">
      <summary>When overridden in a derived class, removes from the cache all cached items that are associated with the specified path.</summary>
      <param name="path">The virtual absolute path to the items to be removed from the cache.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.SetCookie(System.Web.HttpCookie)">
      <summary>When overridden in a derived class, updates an existing cookie in the cookie collection.</summary>
      <param name="cookie">The cookie in the collection to be updated.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.Status">
      <summary>When overridden in a derived class, gets or sets the Status value that is returned to the client.</summary>
      <returns>The status of the HTTP output. For information about valid status codes, see HTTP Status Codes on the MSDN Web site.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.StatusCode">
      <summary>When overridden in a derived class, gets or sets the HTTP status code of the output that is returned to the client.</summary>
      <returns>The status code of the HTTP output that is returned to the client. For information about valid status codes, see HTTP Status Codes on the MSDN Web site.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.StatusDescription">
      <summary>When overridden in a derived class, gets or sets the HTTP status message of the output that is returned to the client.</summary>
      <returns>The status message of the HTTP output that is returned to the client. For information about valid status codes, see HTTP Status Codes on the MSDN Web site.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.SubStatusCode">
      <summary>When overridden in a derived class, gets or sets a value that qualifies the status code of the response.</summary>
      <returns>The IIS 7.0 substatus code.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.SuppressContent">
      <summary>When overridden in a derived class, gets or sets a value that indicates whether to send HTTP content to the client.</summary>
      <returns>true if output is suppressed; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.TransmitFile(System.String)">
      <summary>When overridden in a derived class, writes the specified file to the HTTP response output stream, without buffering it in memory.</summary>
      <param name="filename">The name of the file to write to the HTTP output stream.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.TransmitFile(System.String,System.Int64,System.Int64)">
      <summary>When overridden in a derived class, writes the specified part of a file to the HTTP response output stream, without buffering it in memory.</summary>
      <param name="filename">The name of the file to write to the HTTP output stream.</param>
      <param name="offset">The position in the file where writing starts.</param>
      <param name="length">The number of bytes to write, starting at <paramref name="offset" />.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpResponseBase.TrySkipIisCustomErrors">
      <summary>When overridden in a derived class, gets or sets a value that specifies whether IIS 7.0 custom errors are disabled.</summary>
      <returns>true if IIS custom errors are disabled; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Write(System.Char)">
      <summary>When overridden in a derived class, writes a character to an HTTP response output stream.</summary>
      <param name="ch">The character to write to the HTTP output stream.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Write(System.Char[],System.Int32,System.Int32)">
      <summary>When overridden in a derived class, writes the specified array of characters to the HTTP response output stream.</summary>
      <param name="buffer">The character array to write.</param>
      <param name="index">The position in the character array where writing starts.</param>
      <param name="count">The number of characters to write, starting at <paramref name="index" />.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Write(System.Object)">
      <summary>When overridden in a derived class, writes the specified object to the HTTP response stream.</summary>
      <param name="obj">The object to write to the HTTP output stream.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.Write(System.String)">
      <summary>When overridden in a derived class, writes the specified string to the HTTP response output stream.</summary>
      <param name="s">The string to write to the HTTP output stream.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.WriteFile(System.IntPtr,System.Int64,System.Int64)">
      <summary>When overridden in a derived class, writes the specified file to the HTTP response output stream.</summary>
      <param name="fileHandle">The file handle of the file to write to the HTTP output stream.</param>
      <param name="offset">The position in the file where writing starts.</param>
      <param name="size">The number of bytes to write, starting at <paramref name="offset" />.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.WriteFile(System.String)">
      <summary>When overridden in a derived class, writes the contents of the specified file to the HTTP response output stream as a file block.</summary>
      <param name="filename">The name of the file to write to the HTTP output stream.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.WriteFile(System.String,System.Boolean)">
      <summary>When overridden in a derived class, writes the contents of the specified file to the HTTP response output stream and specifies whether the content is written as a memory block.</summary>
      <param name="filename">The name of the file to write to the current response.</param>
      <param name="readIntoMemory">true to write the file into a memory block.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.WriteFile(System.String,System.Int64,System.Int64)">
      <summary>When overridden in a derived class, writes the specified file to the HTTP response output stream.</summary>
      <param name="filename">The name of the file to write to the HTTP output stream.</param>
      <param name="offset">The position in the file where writing starts.</param>
      <param name="size">The number of bytes to write, starting at <paramref name="offset" />.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpResponseBase.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
      <summary>When overridden in a derived class, inserts substitution blocks into the response, which enables dynamic generation of regions for cached output responses.</summary>
      <param name="callback">The method, user control, or object to substitute.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpResponseWrapper">
      <summary>Encapsulates the HTTP intrinsic object that provides HTTP-response information from an ASP.NET operation.</summary>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.#ctor(System.Web.HttpResponse)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpResponseWrapper" /> class.</summary>
      <param name="httpResponse">The object that this wrapper class provides access to.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AddCacheDependency(System.Web.Caching.CacheDependency[])">
      <summary>When overridden in a derived class, associates cache dependencies with the response that enable the response to be invalidated if it is cached and if the specified dependencies change.</summary>
      <param name="dependencies">A file, cache key, or <see cref="T:System.Web.Caching.CacheDependency" /> object to add to the list of application dependencies.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AddCacheItemDependencies(System.Collections.ArrayList)">
      <summary>Makes the validity of a cached response dependent on the specified items in the cache.</summary>
      <param name="cacheKeys">A collection that contains the keys of the items that the cached response is dependent on.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AddCacheItemDependencies(System.String[])">
      <summary>Makes the validity of a cached item dependent on the specified items in the cache.</summary>
      <param name="cacheKeys">An array that contains the keys of the items that the cached response is dependent on.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AddCacheItemDependency(System.String)">
      <summary>Makes the validity of a cached response dependent on the specified item in the cache.</summary>
      <param name="cacheKey">The key of the item that the cached response is dependent on.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AddFileDependencies(System.Collections.ArrayList)">
      <summary>Adds file names to the collection of file names on which the current response is dependent.</summary>
      <param name="filenames">The names of the files to add.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AddFileDependencies(System.String[])">
      <summary>Adds an array of file names to the collection of file names on which the current response is dependent.</summary>
      <param name="filenames">An array of files names to add.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AddFileDependency(System.String)">
      <summary>Adds a single file name to the collection of file names on which the current response is dependent.</summary>
      <param name="filename">The name of the file to add.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AddHeader(System.String,System.String)">
      <summary>Adds an HTTP header to the current response. This method is provided for compatibility with earlier versions of ASP.</summary>
      <param name="name">The name of the HTTP header to add <paramref name="value" /> to.</param>
      <param name="value">The string to add to the header.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AppendCookie(System.Web.HttpCookie)">
      <summary>Adds an HTTP cookie to the HTTP response cookie collection.</summary>
      <param name="cookie">The cookie to add to the response.</param>
      <exception cref="T:System.Web.HttpException">The cookie was added after the HTTP headers were sent.</exception>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AppendHeader(System.String,System.String)">
      <summary>Adds an HTTP header to the current response.</summary>
      <param name="name">The name of the HTTP header to add to the current response.</param>
      <param name="value">The value of the header.</param>
      <exception cref="T:System.Web.HttpException">The header was appended after the HTTP headers were sent.</exception>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.AppendToLog(System.String)">
      <summary>Adds custom log information to the Internet Information Services (IIS) log file.</summary>
      <param name="param">The text to add to the log file.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.ApplyAppPathModifier(System.String)">
      <summary>Adds a session ID to the virtual path if the session is using <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state, and returns the combined path. </summary>
      <returns>The virtual path with the session ID inserted. If <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state is not used, returns the original <paramref name="virtualpath" /> value.</returns>
      <param name="virtualPath">The virtual path of a resource.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.BinaryWrite(System.Byte[])">
      <summary>Writes a string of binary characters to the HTTP output stream.</summary>
      <param name="buffer">The binary characters to write to the current response.</param>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.Buffer">
      <summary>Gets or sets a value that indicates whether to buffer output and send it after the complete response has finished processing.</summary>
      <returns>true if the output is buffered; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.BufferOutput">
      <summary>Gets or sets a value that indicates whether to buffer output and send it after the complete page has finished processing.</summary>
      <returns>true if the output is buffered; otherwise false. The default is true.</returns>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.Cache">
      <summary>Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of the current Web page.</summary>
      <returns>The caching policy of the current response.</returns>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.CacheControl">
      <summary>Gets or sets the Cache-Control HTTP header that matches one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</summary>
      <returns>The caching policy of the current response.</returns>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.Charset">
      <summary>Gets or sets the HTTP character set of the current response.</summary>
      <returns>The HTTP character set of the current response.</returns>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Clear">
      <summary>Clears all headers and content output from the current response.</summary>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.ClearContent">
      <summary>Clears all content output from the current response.</summary>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.ClearHeaders">
      <summary>Clears all headers from the current response.</summary>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Close">
      <summary>Closes the socket connection to a client.</summary>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.ContentEncoding">
      <summary>Gets or sets the content encoding of the current response.</summary>
      <returns>Information about the content encoding of the current response.</returns>
      <exception cref="T:System.ArgumentNullException">Attempted to set <see cref="P:System.Web.HttpResponse.ContentEncoding" /> to null.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.ContentType">
      <summary>Gets or sets the HTTP MIME type of the current response.</summary>
      <returns>The HTTP MIME type of the current response. The default value is "text/html".</returns>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.HttpResponse.ContentType" /> property is set to null.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.Cookies">
      <summary>Gets the response cookie collection.</summary>
      <returns>The response cookie collection.</returns>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.DisableKernelCache">
      <summary>Disables kernel caching for the current response.</summary>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.End">
      <summary>Sends all currently buffered output to the client, stops execution of the requested process, and raises the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.</summary>
      <exception cref="T:System.Threading.ThreadAbortException">The call to <see cref="M:System.Web.HttpResponse.End" /> has terminated the current request.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.Expires">
      <summary>Gets or sets the number of minutes before a page that is cached on the client or proxy expires. If the user returns to the same page before it expires, the cached version is displayed. <see cref="P:System.Web.HttpResponseWrapper.Expires" /> is provided for compatibility with earlier versions of ASP.</summary>
      <returns>The number of minutes before the page expires.</returns>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.ExpiresAbsolute">
      <summary>Gets or sets the absolute date and time at which cached information expires in the cache. <see cref="P:System.Web.HttpResponseWrapper.ExpiresAbsolute" /> is provided for compatibility with earlier versions of ASP.</summary>
      <returns>The date and time at which the page expires.</returns>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.Filter">
      <summary>Gets or sets a filter object that is used to modify the HTTP entity body before transmission.</summary>
      <returns>An object that acts as the output filter.</returns>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Flush">
      <summary>Sends all currently buffered output to the client.</summary>
      <exception cref="T:System.Web.HttpException">The method was called after the response was finished.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.HeaderEncoding">
      <summary>Gets or sets the encoding for the header of the current response.</summary>
      <returns>Information about the encoding for the current header.</returns>
      <exception cref="T:System.ArgumentNullException">The encoding value is null.</exception>
      <exception cref="T:System.Web.HttpException">The encoding value is <see cref="P:System.Text.Encoding.Unicode" />.- or -The headers have already been sent.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.Headers">
      <summary>Gets the collection of response headers.</summary>
      <returns>The response headers.</returns>
      <exception cref="T:System.PlatformNotSupportedException">The operation requires the integrated pipeline mode in IIS 7.0 and at least the .NET Framework version 3.0.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.IsClientConnected">
      <summary>Gets a value that indicates whether the client is connected to the server.</summary>
      <returns>true if the client is currently connected; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.IsRequestBeingRedirected">
      <summary>Gets a value that indicates whether the client is being redirected to a new location.</summary>
      <returns>true if the value of the location response header differs from the current location; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.Output">
      <summary>Gets the object that enables output of text to the outgoing HTTP response stream.</summary>
      <returns>An object that enables custom output to the client.</returns>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.OutputStream">
      <summary>Provides binary output to the outgoing HTTP content body.</summary>
      <returns>An object that represents the raw contents of the outgoing HTTP content body.</returns>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Pics(System.String)">
      <summary>Appends an HTTP PICS-Label header to the current response.</summary>
      <param name="value">The string to add to the PICS-Label header.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Redirect(System.String)">
      <summary>Redirects a request to the specified URL.</summary>
      <param name="url">The target location.</param>
      <exception cref="T:System.Web.HttpException">Redirection was attempted after the HTTP headers were sent.</exception>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Redirect(System.String,System.Boolean)">
      <summary>Redirects a request to the specified URL and specifies whether execution of the current process should terminate.</summary>
      <param name="url">The target location. </param>
      <param name="endResponse">true to terminate the current process.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> contains a newline character.</exception>
      <exception cref="T:System.Web.HttpException">Redirection was attempted after the HTTP headers were sent.</exception>
      <exception cref="T:System.ApplicationException">The request is the result of a callback.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.RedirectLocation">
      <summary>Gets or sets the value of the HTTP Location header.</summary>
      <returns>The absolute URL of the HTTP Location header.</returns>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.RemoveOutputCacheItem(System.String)">
      <summary>Removes from the cache all cached items that are associated with the specified path.</summary>
      <param name="path">The virtual absolute path to the items to be removed from the cache.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.SetCookie(System.Web.HttpCookie)">
      <summary>Updates an existing cookie in the cookie collection.</summary>
      <param name="cookie">The cookie in the collection to be updated.</param>
      <exception cref="T:System.Web.HttpException">The cookie was set after the HTTP headers were sent.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.Status">
      <summary>Sets the Status value that is returned to the client.</summary>
      <returns>The status of the HTTP output. The default value is "200 (OK)". For information about valid status codes, see HTTP Status Codes on the MSDN Web site.</returns>
      <exception cref="T:System.Web.HttpException">Status is set to an invalid status code.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.StatusCode">
      <summary>Gets or sets the HTTP status code of the output that is returned to the client.</summary>
      <returns>The status code of the HTTP output that is returned to the client. The default value is 200. For information about valid status codes, see HTTP Status Codes on the MSDN Web site.</returns>
      <exception cref="T:System.Web.HttpException">
        <see cref="P:System.Web.HttpResponse.StatusCode" /> was set after the HTTP headers were sent.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.StatusDescription">
      <summary>Gets or sets the HTTP status message of the output that is returned to the client.</summary>
      <returns>The status message of the HTTP output that is returned to the client. The default value is "OK". For information about valid status codes, see HTTP Status Codes on the MSDN Web site.</returns>
      <exception cref="T:System.Web.HttpException">StatusDescription was set after the HTTP headers were sent.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The status value is longer than 512 characters.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.SubStatusCode">
      <summary>Gets or sets a value that qualifies the status code of the response.</summary>
      <returns>The IIS 7.0 substatus code.</returns>
      <exception cref="T:System.PlatformNotSupportedException">The operation requires the integrated pipeline mode in IIS 7.0 and at least the .NET Framework version 3.0.</exception>
      <exception cref="T:System.Web.HttpException">The status code was set after all HTTP headers were sent.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.SuppressContent">
      <summary>Gets or sets a value that indicates whether to send HTTP content to the client.</summary>
      <returns>true if output is suppressed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.TransmitFile(System.String)">
      <summary>Writes the specified file to the HTTP response output stream, without buffering it in memory.</summary>
      <param name="filename">The name of the file to write to the HTTP output stream.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> is null</exception>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.TransmitFile(System.String,System.Int64,System.Int64)">
      <summary>Writes the specified part of a file to the HTTP response output stream, without buffering it in memory.</summary>
      <param name="filename">The name of the file to write to the HTTP output stream.</param>
      <param name="offset">The position in the file where writing starts.</param>
      <param name="length">The number of bytes to write, starting at <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="offset" /> parameter is less than zero.- or -The <paramref name="length" /> parameter is less than -1.- or - The <paramref name="length" /> parameter is greater than the file size minus <paramref name="offset" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The out-of-process worker request is not supported.- or -The response is not using an <see cref="T:System.Web.HttpWriter" /> object.</exception>
    </member>
    <member name="P:System.Web.HttpResponseWrapper.TrySkipIisCustomErrors">
      <summary>Gets or sets a value that specifies whether IIS 7.0 custom errors are disabled.</summary>
      <returns>true if IIS custom errors are disabled; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Write(System.Char)">
      <summary>Writes a character to an HTTP response output stream.</summary>
      <param name="ch">The character to write to the HTTP output stream.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Writes the specified array of characters to the HTTP response output stream.</summary>
      <param name="buffer">The character array to write.</param>
      <param name="index">The position in the character array where writing starts.</param>
      <param name="count">The number of characters to write, starting at <paramref name="index" />.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Write(System.Object)">
      <summary>Writes the specified object to the HTTP response stream.</summary>
      <param name="obj">The object to write to the HTTP output stream.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.Write(System.String)">
      <summary>Writes the specified string to the HTTP response output stream.</summary>
      <param name="s">The string to write to the HTTP output stream.</param>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.WriteFile(System.IntPtr,System.Int64,System.Int64)">
      <summary>Writes the specified file to the HTTP response output stream.</summary>
      <param name="fileHandle">The file handle of the file to write to the HTTP output stream.</param>
      <param name="offset">The position in the file where writing starts.</param>
      <param name="size">The number of bytes to write, starting at <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileHandle" /> is null.</exception>
      <exception cref="T:System.Web.HttpException">
        <paramref name="offset" /> is less than 0.- or -<paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.WriteFile(System.String)">
      <summary>Writes the contents of the specified file to the HTTP response output stream as a file block.</summary>
      <param name="filename">The name of the file to write to the HTTP output stream.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="filename" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.WriteFile(System.String,System.Boolean)">
      <summary>Writes the contents of the specified file to the HTTP response output stream and specifies whether the content is written as a memory block.</summary>
      <param name="filename">The name of the file to write to the current response.</param>
      <param name="readIntoMemory">true to write the file into a memory block.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="filename" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.WriteFile(System.String,System.Int64,System.Int64)">
      <summary>Writes the specified file to the HTTP response output stream.</summary>
      <param name="filename">The name of the file to write to the HTTP output stream.</param>
      <param name="offset">The position in the file where writing starts.</param>
      <param name="size">The number of bytes to write, starting at <paramref name="offset" />.</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="offset" /> is less than 0.- or -<paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Web.HttpResponseWrapper.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
      <summary>Inserts substitution blocks into the response, which enables dynamic generation of regions for cached output responses.</summary>
      <param name="callback">The method, user control, or object to substitute.</param>
      <exception cref="T:System.ArgumentException">The target of the <paramref name="callback" /> parameter is of type <see cref="T:System.Web.UI.Control" />.</exception>
    </member>
    <member name="T:System.Web.HttpServerUtilityBase">
      <summary>Serves as the base class for classes that provide helper methods for processing Web requests.</summary>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.ClearError">
      <summary>When overridden in a derived class, clears the most recent exception.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.CreateObject(System.String)">
      <summary>When overridden in a derived class, creates a server instance of a COM object that is identified by the object's programmatic identifier (ProgID).</summary>
      <returns>The new object.</returns>
      <param name="progID">The class or type of object to create an instance of.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.CreateObject(System.Type)">
      <summary>When overridden in a derived class, creates a server instance of a COM object that is identified by the object's type.</summary>
      <returns>The new object.</returns>
      <param name="type">A type that represents the object to create.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.CreateObjectFromClsid(System.String)">
      <summary>When overridden in a derived class, creates a server instance of a COM object that is identified by the object's class identifier (CLSID).</summary>
      <returns>The new object.</returns>
      <param name="clsid">The class identifier of the object to create an instance of.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.Execute(System.String)">
      <summary>When overridden in a derived class, executes the handler for the specified virtual path in the context of the current process.</summary>
      <param name="path">The URL of the handler to execute.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.Boolean)">
      <summary>When overridden in a derived class, executes the handler for the specified virtual path in the context of the current process and specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</summary>
      <param name="path">The URL of the handler to execute. </param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.IO.TextWriter)">
      <summary>When overridden in a derived class, executes the handler for the specified virtual path in the context of the current process, using a <see cref="T:System.IO.TextWriter" /> instance to capture output from the executed handler.</summary>
      <param name="path">The URL of the handler to execute. </param>
      <param name="writer">An object to capture the output. </param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.IO.TextWriter,System.Boolean)">
      <summary>When overridden in a derived class, executes the handler for the specified virtual path in the context of the current request, using a <see cref="T:System.IO.TextWriter" /> instance to capture output from the page and a value that indicates whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</summary>
      <param name="path">The URL of the handler to execute.</param>
      <param name="writer">The object to capture the output.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
      <summary>When overridden in a derived class, executes the specified handler in the context of the current process, using a <see cref="T:System.IO.TextWriter" /> instance to capture output from the executed handler and a value that specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</summary>
      <param name="handler">The HTTP handler that implements the interface to transfer the current request to.</param>
      <param name="writer">The object to capture the output.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.GetLastError">
      <summary>When overridden in a derived class, returns the most recent exception.</summary>
      <returns>The most recent exception that was thrown.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.HtmlDecode(System.String)">
      <summary>When overridden in a derived class, decodes an HTML-encoded string and returns the decoded string.</summary>
      <returns>The decoded text.</returns>
      <param name="s">The HTML string to decode.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>When overridden in a derived class, decodes an HTML-encoded string and returns the results in a stream.</summary>
      <param name="s">The HTML string to decode.</param>
      <param name="output">The stream to contain the decoded string.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.HtmlEncode(System.String)">
      <summary>When overridden in a derived class, HTML-encodes a string and returns the encoded string.</summary>
      <returns>The HTML-encoded text.</returns>
      <param name="s">The string to encode.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>When overridden in a derived class, HTML-encodes a string and sends the resulting output to an output stream.</summary>
      <param name="s">The string to encode. </param>
      <param name="output">The stream to contain the encoded string.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpServerUtilityBase.MachineName">
      <summary>When overridden in a derived class, gets the server's computer name.</summary>
      <returns>The name of the server computer.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.MapPath(System.String)">
      <summary>When overridden in a derived class, returns the physical file path that corresponds to the specified virtual path on the Web server.</summary>
      <returns>The physical file path that corresponds to <paramref name="path" />.</returns>
      <param name="path">The virtual path to get the physical path for.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpServerUtilityBase.ScriptTimeout">
      <summary>When overridden in a derived class, gets or sets the request time-out value in seconds.</summary>
      <returns>The time-out value for requests.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.Transfer(System.String)">
      <summary>When overridden in a derived class, terminates execution of the current process and starts execution of a page or handler that is specified with a URL.</summary>
      <param name="path">The URL of the page or handler to execute.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.Transfer(System.String,System.Boolean)">
      <summary>When overridden in a derived class, terminates execution of the current page and starts execution of a different page or handler by using the specified URL and a value that specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</summary>
      <param name="path">The URL of the page or handler to execute.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.Transfer(System.Web.IHttpHandler,System.Boolean)">
      <summary>When overridden in a derived class, terminates execution of the current process and starts execution of a new request, using a custom HTTP handler and a value that specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</summary>
      <param name="handler">The HTTP handler to transfer the current request to.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String)">
      <summary>When overridden in a derived class, asynchronously executes the end point at the specified URL.</summary>
      <param name="path">The URL of the page or handler to execute.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean)">
      <summary>When overridden in a derived class, asynchronously executes the endpoint at the specified URL and specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</summary>
      <param name="path">The URL of the page or handler to execute.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>When overridden in a derived class, asynchronously executes the endpoint at the specified URL by using the specified HTTP method and headers.</summary>
      <param name="path">The URL of the page or handler to execute.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <param name="method">The HTTP method (GET, POST, and so on) to use for the new request. If null, the HTTP method of the original request is used.</param>
      <param name="headers">A collection of request headers for the new request.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.UrlDecode(System.String)">
      <summary>When overridden in a derived class, decodes a URL-encoded string and returns the decoded string.</summary>
      <returns>The decoded text.</returns>
      <param name="s">The string to decode.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.UrlDecode(System.String,System.IO.TextWriter)">
      <summary>When overridden in a derived class, decodes a URL-encoded string and sends the resulting output to a stream.</summary>
      <param name="s">The string to decode.</param>
      <param name="output">The stream to contain the decoded string.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.UrlEncode(System.String)">
      <summary>When overridden in a derived class, URL-encodes a string and returns the encoded string.</summary>
      <returns>The URL-encoded text.</returns>
      <param name="s">The text to URL-encode.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.UrlEncode(System.String,System.IO.TextWriter)">
      <summary>When overridden in a derived class, URL-encodes a string and sends the resulting output to a stream.</summary>
      <param name="s">The string to encode.</param>
      <param name="output">The stream to contain the encoded string.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.UrlPathEncode(System.String)">
      <summary>When overridden in a derived class, URL-encodes the path section of a URL string.</summary>
      <returns>The URL-encoded text.</returns>
      <param name="s">The string to URL-encode.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.UrlTokenDecode(System.String)">
      <summary>When overridden in a derived class, decodes a URL string token into an equivalent byte array by using base64-encoded digits.</summary>
      <returns>The byte array that contains the decoded URL token.</returns>
      <param name="input">The URL string token to decode.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityBase.UrlTokenEncode(System.Byte[])">
      <summary>When overridden in a derived class, encodes a byte array into an equivalent string representation by using base64 digits, which makes it usable for transmission on the URL.</summary>
      <returns>The string that contains the encoded array if the length of <paramref name="input" /> is greater than 1; otherwise, an empty string ("").</returns>
      <param name="input">The byte array to encode.</param>
    </member>
    <member name="T:System.Web.HttpServerUtilityWrapper">
      <summary>Encapsulates the HTTP intrinsic object that provides helper methods for processing Web requests.</summary>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.#ctor(System.Web.HttpServerUtility)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpServerUtilityWrapper" /> class.</summary>
      <param name="httpServerUtility">The object that this wrapper class provides access to.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.ClearError">
      <summary>Clears the most recent exception.</summary>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.CreateObject(System.String)">
      <summary>Creates a server instance of a COM object that is identified by the object's programmatic identifier (ProgID).</summary>
      <returns>The new object.</returns>
      <param name="progID">The class or type of object to create an instance of.</param>
      <exception cref="T:System.Web.HttpException">An instance of the object could not be created.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.CreateObject(System.Type)">
      <summary>Creates a server instance of a COM object that is identified by the object's type.</summary>
      <returns>The new object.</returns>
      <param name="type">A type that represents the object to create.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.CreateObjectFromClsid(System.String)">
      <summary>Creates a server instance of a COM object that is identified by the object's class identifier (CLSID).</summary>
      <returns>The new object.</returns>
      <param name="clsid">The class identifier of the object to create an instance of.</param>
      <exception cref="T:System.Web.HttpException">An instance of the object cannot be created.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.Execute(System.String)">
      <summary>Executes the handler for the specified virtual path in the context of the current process.</summary>
      <param name="path">The URL of the handler to execute.</param>
      <exception cref="T:System.Web.HttpException">The current <see cref="T:System.Web.HttpContext" /> object is null.- or -An error occurred when the handler specified by <paramref name="path" /> was executed.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. - or -<paramref name="path" /> is not a virtual path.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.Execute(System.String,System.Boolean)">
      <summary>Executes the handler for the specified virtual path in the context of the current process and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</summary>
      <param name="path">The URL of the handler to execute. </param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.Web.HttpException">The current <see cref="T:System.Web.HttpContext" /> object is null.- or -An error occurred when the handler specified by <paramref name="path" /> was executed.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. - or -<paramref name="path" /> is not a virtual path. </exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.Execute(System.String,System.IO.TextWriter)">
      <summary>Executes the handler for the specified virtual path in the context of the current process, using a <see cref="T:System.IO.TextWriter" /> instance to capture output from the executed handler.</summary>
      <param name="path">The URL of the handler to execute. </param>
      <param name="writer">An object to capture the output. </param>
      <exception cref="T:System.Web.HttpException">The current <see cref="T:System.Web.HttpContext" /> is null. - or -An error occurred when the handler specified by <paramref name="path" /> was executed.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. - or -<paramref name="path" /> is not a virtual path. </exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.Execute(System.String,System.IO.TextWriter,System.Boolean)">
      <summary>Executes the handler for the specified virtual path in the context of the current request, using a <see cref="T:System.IO.TextWriter" /> instance to capture output from the page and a value that indicates whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</summary>
      <param name="path">The URL of the handler to execute.</param>
      <param name="writer">The object to capture the output.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.Web.HttpException">The current <see cref="T:System.Web.HttpContext" /> instance is null. - or -<paramref name="path" /> ends with a period (.).- or -An error occurred when the handler specified by <paramref name="path" /> was executed.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is not a virtual path.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
      <summary>Executes the specified handler in the context of the current process, using a <see cref="T:System.IO.TextWriter" /> instance to capture output from the executed handler and a value that specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</summary>
      <param name="handler">The HTTP handler that implements the interface to transfer the current request to.</param>
      <param name="writer">The object to capture the output.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.Web.HttpException">An error occurred when the handler specified by <paramref name="handler" /> was executed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="handler" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.GetLastError">
      <summary>Returns the most recent exception.</summary>
      <returns>The previous exception that was thrown.</returns>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.HtmlDecode(System.String)">
      <summary>Decodes an HTML-encoded string and returns the decoded string.</summary>
      <returns>The decoded text.</returns>
      <param name="s">The HTML string to decode.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>Decodes an HTML-encoded string and returns the results in a stream.</summary>
      <param name="s">The HTML string to decode.</param>
      <param name="output">The stream to contain the decoded string.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.HtmlEncode(System.String)">
      <summary>HTML-encodes a string and returns the encoded string.</summary>
      <returns>The HTML-encoded text.</returns>
      <param name="s">The string to encode.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>HTML-encodes a string and sends the resulting output to an output stream.</summary>
      <param name="s">The string to encode. </param>
      <param name="output">The stream to contain the encoded string.</param>
    </member>
    <member name="P:System.Web.HttpServerUtilityWrapper.MachineName">
      <summary>Gets the server's computer name.</summary>
      <returns>The name of the server computer.</returns>
      <exception cref="T:System.Web.HttpException">The computer name cannot be found.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.MapPath(System.String)">
      <summary>Returns the physical file path that corresponds to the specified virtual path on the Web server.</summary>
      <returns>The physical file path that corresponds to <paramref name="path" />.</returns>
      <param name="path">The virtual path to get the physical path for.</param>
      <exception cref="T:System.Web.HttpException">The current <see cref="T:System.Web.HttpContext" /> object is null.</exception>
    </member>
    <member name="P:System.Web.HttpServerUtilityWrapper.ScriptTimeout">
      <summary>Gets or sets the request time-out value in seconds.</summary>
      <returns>The time-out value for requests.</returns>
      <exception cref="T:System.Web.HttpException">The current <see cref="T:System.Web.HttpContext" /> object is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The time-out period is null or otherwise cannot be set.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.Transfer(System.String)">
      <summary>Terminates execution of the current process and starts execution of a page or handler that is specified with a URL.</summary>
      <param name="path">The URL of the page or handler to execute.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.Transfer(System.String,System.Boolean)">
      <summary>Terminates execution of the current page and starts execution of a different page or handler by using the specified URL and a value that specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</summary>
      <param name="path">The URL of the page or handler to execute.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.ApplicationException">The current page request is a callback.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.Transfer(System.Web.IHttpHandler,System.Boolean)">
      <summary>Terminates execution of the current process and starts execution of a new request, using a custom HTTP handler and a value that specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</summary>
      <param name="handler">The HTTP handler to transfer the current request to.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.ApplicationException">The current page request is a callback.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.TransferRequest(System.String)">
      <summary>Asynchronously executes the end point at the specified URL.</summary>
      <param name="path">The URL of the page or handler to execute.</param>
      <exception cref="T:System.PlatformNotSupportedException">The request requires the integrated pipeline mode of IIS 7.0.</exception>
      <exception cref="T:System.Web.HttpException">The server is not available to handle the request.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="path" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.TransferRequest(System.String,System.Boolean)">
      <summary>Asynchronously executes the endpoint at the specified URL and specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</summary>
      <param name="path">The URL of the page to execute.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <exception cref="T:System.PlatformNotSupportedException">The request requires the integrated pipeline mode of IIS 7.0.</exception>
      <exception cref="T:System.Web.HttpException">The server is not available to handle the request.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="path" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Asynchronously executes the endpoint at the specified URL by using the specified HTTP method and headers.</summary>
      <param name="path">The URL of the page or handler to execute.</param>
      <param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</param>
      <param name="method">The HTTP method (GET, POST, and so on) to use for the new request. If null, the HTTP method of the original request is used.</param>
      <param name="headers">A collection of request headers for the new request.</param>
      <exception cref="T:System.PlatformNotSupportedException">The request requires IIS 7.0 running in integrated mode.</exception>
      <exception cref="T:System.Web.HttpException">The server is not available to handle the request.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="path" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.UrlDecode(System.String)">
      <summary>Decodes a URL-encoded string and returns the decoded string.</summary>
      <returns>The decoded text.</returns>
      <param name="s">The string to decode.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.UrlDecode(System.String,System.IO.TextWriter)">
      <summary>Decodes a URL-encoded string and sends the resulting output to a stream.</summary>
      <param name="s">The HTML string to decode.</param>
      <param name="output">The stream to contain the decoded string.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.UrlEncode(System.String)">
      <summary>URL-encodes a string and returns the encoded string.</summary>
      <returns>The URL-encoded text.</returns>
      <param name="s">The text to URL-encode.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.UrlEncode(System.String,System.IO.TextWriter)">
      <summary>URL-encodes a string and sends the resulting output to a stream.</summary>
      <param name="s">The string to encode.</param>
      <param name="output">The stream to contain the encoded string.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.UrlPathEncode(System.String)">
      <summary>URL-encodes the path section of a URL string.</summary>
      <returns>The URL-encoded text.</returns>
      <param name="s">The string to URL-encode.</param>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.UrlTokenDecode(System.String)">
      <summary>Decodes a URL string token into an equivalent byte array by using base64 digits.</summary>
      <returns>The byte array that contains the decoded URL string token.</returns>
      <param name="input">The URL string token to decode.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="input" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.HttpServerUtilityWrapper.UrlTokenEncode(System.Byte[])">
      <summary>Encodes a byte array into an equivalent string representation by using base64 digits, which makes it usable for transmission on the URL.</summary>
      <returns>The string that contains the encoded array if the length of <paramref name="input" /> is greater than 1; otherwise, an empty string ("").</returns>
      <param name="input">The byte array to encode.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="input" /> parameter is null.</exception>
    </member>
    <member name="T:System.Web.HttpSessionStateBase">
      <summary>Serves as the base class for classes that provides access to session-state values, session-level settings, and lifetime management methods.</summary>
    </member>
    <member name="M:System.Web.HttpSessionStateBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="M:System.Web.HttpSessionStateBase.Abandon">
      <summary>When overridden in a derived class, cancels the current session.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpSessionStateBase.Add(System.String,System.Object)">
      <summary>When overridden in a derived class, adds an item to the session-state collection.</summary>
      <param name="name">The name of the item to add to the session-state collection.</param>
      <param name="value">The value of the item to add to the session-state collection.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpSessionStateBase.Clear">
      <summary>When overridden in a derived class, removes all keys and values from the session-state collection.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.CodePage">
      <summary>When overridden in a derived class, gets or sets the character-set identifier for the current session.</summary>
      <returns>The character-set identifier for the current session.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.Contents">
      <summary>When overridden in a derived class, gets a reference to the current session-state object.</summary>
      <returns>The current session-state object.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.CookieMode">
      <summary>When overridden in a derived class, gets a value that indicates whether the application is configured for cookieless sessions.</summary>
      <returns>One of the cookie-mode values that indicate whether the application is configured for cookieless sessions.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpSessionStateBase.CopyTo(System.Array,System.Int32)">
      <summary>When overridden in a derived class, copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.</summary>
      <param name="array">The array to copy session values to.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying starts.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.Count">
      <summary>When overridden in a derived class, gets the number of items in the session-state collection.</summary>
      <returns>The number of items in the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpSessionStateBase.GetEnumerator">
      <summary>When overridden in a derived class, returns an enumerator that can be used to read all the session-state variable names in the current session.</summary>
      <returns>An enumerator that can iterate through the variable names in the session-state collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.IsCookieless">
      <summary>When overridden in a derived class, gets a value that indicates whether the session ID is embedded in the URL.</summary>
      <returns>true if the session ID is embedded in the URL; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.IsNewSession">
      <summary>When overridden in a derived class, gets a value that indicates whether the session was created during the current request.</summary>
      <returns>true if the session was created during the current request; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.IsReadOnly">
      <summary>When overridden in a derived class, gets a value that indicates whether the session is read-only.</summary>
      <returns>true if the session is read-only; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.IsSynchronized">
      <summary>When overridden in a derived class, gets a value that indicates whether access to the collection of session-state values is synchronized (thread safe).</summary>
      <returns>true if access to the collection is synchronized (thread safe); otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.Item(System.Int32)">
      <summary>When overridden in a derived class, gets or sets a session value by using the specified index.</summary>
      <returns>The session-state value that is stored at the specified index.</returns>
      <param name="index">The index of the session value.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.Item(System.String)">
      <summary>When overridden in a derived class, gets or sets a session value by using the specified name.</summary>
      <returns>The session-state value that has the specified name, or null if the item does not exist.</returns>
      <param name="name">The key name of the session value.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.Keys">
      <summary>When overridden in a derived class, gets a collection of the keys for all values that are stored in the session-state collection.</summary>
      <returns>The session keys.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.LCID">
      <summary>When overridden in a derived class, gets or sets the locale identifier (LCID) of the current session.</summary>
      <returns>The LCID (culture) of the current session.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.Mode">
      <summary>When overridden in a derived class, gets the current session-state mode.</summary>
      <returns>The session-state mode.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpSessionStateBase.Remove(System.String)">
      <summary>When overridden in a derived class, deletes an item from the session-state collection.</summary>
      <param name="name">The name of the item to delete from the session-state collection.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpSessionStateBase.RemoveAll">
      <summary>When overridden in a derived class, removes all keys and values from the session-state collection.</summary>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpSessionStateBase.RemoveAt(System.Int32)">
      <summary>When overridden in a derived class, deletes the item at the specified index from the session-state collection.</summary>
      <param name="index">The index of the item to remove from the session-state collection.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.SessionID">
      <summary>When overridden in a derived class, gets the unique identifier for the session.</summary>
      <returns>The unique session identifier.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.StaticObjects">
      <summary>When overridden in a derived class, gets a collection of objects that are declared by object elements that are marked as server controls and scoped to the current session in the application's Global.asax file.</summary>
      <returns>The objects that are declared in the Global.asax file.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.SyncRoot">
      <summary>When overridden in a derived class, gets an object that can be used to synchronize access to the collection of session-state values.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateBase.Timeout">
      <summary>When overridden in a derived class, gets or sets the time, in minutes, that can elapse between requests before the session-state provider ends the session.</summary>
      <returns>The time-out period, in minutes.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpSessionStateWrapper">
      <summary>Encapsulates the HTTP intrinsic object that provides access to session-state values, session-level settings, and lifetime management methods.</summary>
    </member>
    <member name="M:System.Web.HttpSessionStateWrapper.#ctor(System.Web.SessionState.HttpSessionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpSessionStateWrapper" /> class.</summary>
      <param name="httpSessionState">The object that this wrapper class provides access to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpSessionState" /> is null.</exception>
    </member>
    <member name="M:System.Web.HttpSessionStateWrapper.Abandon">
      <summary>Cancels the current session.</summary>
    </member>
    <member name="M:System.Web.HttpSessionStateWrapper.Add(System.String,System.Object)">
      <summary>Adds an item to the session-state collection.</summary>
      <param name="name">The name of the item to add to the session-state collection.</param>
      <param name="value">The value of the item to add to the session-state collection.</param>
    </member>
    <member name="M:System.Web.HttpSessionStateWrapper.Clear">
      <summary>Removes all keys and values from the session-state collection.</summary>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.CodePage">
      <summary>Gets or sets the character-set identifier for the current session.</summary>
      <returns>The character-set identifier for the current session.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.Contents">
      <summary>Gets a reference to the current session-state object.</summary>
      <returns>The current session-state object.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.CookieMode">
      <summary>Gets a value that indicates whether the application is configured for cookieless sessions.</summary>
      <returns>One of the cookie-mode values that indicate whether the application is configured for cookieless sessions. The default is <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</returns>
    </member>
    <member name="M:System.Web.HttpSessionStateWrapper.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.</summary>
      <param name="array">The array to copy session values to</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying starts.</param>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.Count">
      <summary>Gets the number of items in the session-state collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:System.Web.HttpSessionStateWrapper.GetEnumerator">
      <summary>Returns an enumerator that can be used to read all the session-state variable names in the current session.</summary>
      <returns>An enumerator that can iterate through the variable names in the session-state collection.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.IsCookieless">
      <summary>Gets a value that indicates whether the session ID is embedded in the URL.</summary>
      <returns>true if the session ID is embedded in the URL; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.IsNewSession">
      <summary>Gets a value that indicates whether the session was created during the current request.</summary>
      <returns>true if the session was created during the current request; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.IsReadOnly">
      <summary>Gets a value that indicates whether the session is read-only.</summary>
      <returns>true if the session is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection of session-state values is synchronized (thread safe).</summary>
      <returns>true if access to the collection is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.Item(System.Int32)">
      <summary>Gets or sets a session value by using the specified index.</summary>
      <returns>The session-state value that is stored at the specified index.</returns>
      <param name="index">The index of the session value.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.Item(System.String)">
      <summary>Gets or sets a session value by using the specified name.</summary>
      <returns>The session-state value that has the specified name, or null if the item does not exist.</returns>
      <param name="name">The key name of the session value.</param>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.Keys">
      <summary>Gets a collection of the keys for all values that are stored in the session-state collection.</summary>
      <returns>The session keys.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.LCID">
      <summary>Gets or sets the locale identifier (LCID) of the current session.</summary>
      <returns>The LCID (culture) of the current session.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.Mode">
      <summary>Gets the current session-state mode.</summary>
      <returns>The session-state mode.</returns>
    </member>
    <member name="M:System.Web.HttpSessionStateWrapper.Remove(System.String)">
      <summary>Deletes an item from the session-state collection.</summary>
      <param name="name">The name of the item to delete from the session-state collection.</param>
    </member>
    <member name="M:System.Web.HttpSessionStateWrapper.RemoveAll">
      <summary>Removes all keys and values from the session-state collection.</summary>
    </member>
    <member name="M:System.Web.HttpSessionStateWrapper.RemoveAt(System.Int32)">
      <summary>Deletes the item at the specified index from the session-state collection.</summary>
      <param name="index">The index of the item to remove from the session-state collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is equal to or greater than <see cref="P:System.Web.SessionState.HttpSessionState.Count" />.</exception>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.SessionID">
      <summary>Gets the unique identifier for the session.</summary>
      <returns>The unique session identifier.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.StaticObjects">
      <summary>Gets a collection of objects that are declared by object elements that are marked as server controls and scoped to the current session in the application's Global.asax file.</summary>
      <returns>The objects that are declared in the Global.asax file.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection of session-state values.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="P:System.Web.HttpSessionStateWrapper.Timeout">
      <summary>Gets or sets the time, in minutes, that can elapse between requests before the session-state provider ends the session.</summary>
      <returns>The time-out period, in minutes.</returns>
    </member>
    <member name="T:System.Web.HttpStaticObjectsCollectionBase">
      <summary>Serves as the base class for classes that provide a collection of application-scoped objects for the <see cref="P:System.Web.HttpApplicationState.StaticObjects" /> property.</summary>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements that are copied from the collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which to begin copying.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionBase.Count">
      <summary>When overridden in a derived class, gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionBase.GetEnumerator">
      <summary>When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</summary>
      <returns>An object that can be used to iterate through the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionBase.GetObject(System.String)">
      <summary>When overridden in a derived class, returns the object that has the specified name from the collection.</summary>
      <returns>The object that is specified by <paramref name="name" />.</returns>
      <param name="name">The case-insensitive name of the object to return.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionBase.IsReadOnly">
      <summary>When overridden in a derived class, gets a value that indicates whether the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionBase.IsSynchronized">
      <summary>When overridden in a derived class, gets a value that indicates whether the collection is thread-safe.</summary>
      <returns>true if the collection is thread-safe; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionBase.Item(System.String)">
      <summary>When overridden in a derived class, gets the object that has the specified name from the collection.</summary>
      <returns>The object that is specified by <paramref name="name" />.</returns>
      <param name="name">The case-insensitive name of the object to get.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionBase.NeverAccessed">
      <summary>When overridden in a derived class, gets a value that indicates whether the collection has been accessed.</summary>
      <returns>true if the collection has never been accessed; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionBase.Serialize(System.IO.BinaryWriter)">
      <summary>When overridden in a derived class, writes the contents of the collection to a <see cref="T:System.IO.BinaryWriter" /> object.</summary>
      <param name="writer">The object to use to write the serialized collection to a stream or encoded string.</param>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionBase.SyncRoot">
      <summary>When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
      <exception cref="T:System.NotImplementedException">Always.</exception>
    </member>
    <member name="T:System.Web.HttpStaticObjectsCollectionWrapper">
      <summary>Encapsulates the HTTP intrinsic object that provides a collection of application-scoped objects for the <see cref="P:System.Web.HttpApplicationState.StaticObjects" /> property.</summary>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionWrapper.#ctor(System.Web.HttpStaticObjectsCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.HttpStaticObjectsCollectionWrapper" /> class. </summary>
      <param name="httpStaticObjectsCollection">The object that this wrapper class provides access to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpStaticObjectsCollection" /> is null.</exception>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionWrapper.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an array, starting at the specified index in the array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements that are copied from the collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which to begin copying.</param>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionWrapper.Count">
      <summary>Gets the number of objects in the collection.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionWrapper.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the collection.</summary>
      <returns>An object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionWrapper.GetObject(System.String)">
      <summary>Returns the object that has the specified name from the collection.</summary>
      <returns>The object that is specified by <paramref name="name" />, if found; otherwise, null.</returns>
      <param name="name">The case-insensitive name of the object to return.</param>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionWrapper.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read-only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionWrapper.IsSynchronized">
      <summary>Gets a value that indicates whether the collection is thread-safe.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionWrapper.Item(System.String)">
      <summary>Gets the object that has the specified name from the collection.</summary>
      <returns>The object that is specified by <paramref name="name" />, if found; otherwise, null.</returns>
      <param name="name">The case-insensitive name of the object to get.</param>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionWrapper.NeverAccessed">
      <summary>Gets a value that indicates whether the collection has been accessed.</summary>
      <returns>true if the collection has never been accessed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollectionWrapper.Serialize(System.IO.BinaryWriter)">
      <summary>Writes the contents of the collection to a <see cref="T:System.IO.BinaryWriter" /> object.</summary>
      <param name="writer">The object to use to write the serialized collection to a stream or encoded string.</param>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollectionWrapper.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>The current instance of the <see cref="T:System.Web.HttpStaticObjectsCollection" /> class that is wrapped by this class.</returns>
    </member>
  </members>
</doc>
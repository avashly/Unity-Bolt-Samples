<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>Provides a collection whose items are types that serve as keys.</summary>
      <typeparam name="TItem">The item types contained in the collection that also serve as the keys for the collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> class. </summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> class for a specified enumeration of objects.</summary>
      <param name="items">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> of generic type <see cref="T:System.Object" /> used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>Returns the first item in the collection of a specified type.</summary>
      <returns>The object of type <paramref name="T" /> if it is a reference type and the value of type <paramref name="T" /> if it is a value type. The default value of the type is returned if no object of type <paramref name="T" /> is contained in the collection: null if it is a reference type and 0 if it is a value type.</returns>
      <typeparam name="T">The type of item in the collection to find.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>Returns a collection of objects of type <paramref name="T" /> that are contained in the <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <paramref name="T" /> that contains the objects of type <paramref name="T" /> from the original collection.</returns>
      <typeparam name="T">The type of item in the collection to find.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>Gets the type of an item contained in the collection.</summary>
      <returns>The type of the specified <paramref name="item" /> in the collection.</returns>
      <param name="item">The item in the collection whose type is to be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts an element into the collection at a specific location.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert into the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>Removes an object of a specified type from the collection.</summary>
      <returns>The object removed from the collection.</returns>
      <typeparam name="T">The type of item in the collection to remove.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>Removes all of the elements of a specified type from the collection.</summary>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> that contains the objects of type <paramref name="T" /> from the original collection.</returns>
      <typeparam name="T">The type of item in the collection to remove.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the item at the specified index with a new object.</summary>
      <param name="index">The zero-based index of the <paramref name="item" /> to be replaced.</param>
      <param name="item">The object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedCollection`1">
      <summary>Provides a thread-safe collection that contains objects of a type specified by the generic parameter as elements.</summary>
      <typeparam name="T">The type of object contained as items in the thread-safe collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class. </summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class with the object used to synchronize access to the thread-safe collection.</summary>
      <param name="syncRoot">The object used to synchronize access the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe collection.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe collection.</param>
      <param name="list">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,`0[])">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe collection.</summary>
      <param name="syncRoot">The object used to synchronize access the thread-safe collection.</param>
      <param name="list">The <see cref="T:System.Array" /> of type <paramref name="T" /> elements used to initialize the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)">
      <summary>Adds an item to the thread-safe, read-only collection.</summary>
      <param name="item">The element to be added to the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.ClearItems">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)">
      <summary>Determines whether the collection contains an element with a specific value.</summary>
      <returns>true if the element value is found in the collection; otherwise false.</returns>
      <param name="item">The object to locate in the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the elements of the collection to a specified array, starting at a particular index.</summary>
      <param name="array">The destination <see cref="T:System.Array" /> for the elements of type <paramref name="T " />copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Count">
      <summary>Gets the number of elements contained in the thread-safe collection.</summary>
      <returns>The number of elements contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the synchronized collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)">
      <summary>Returns the index of the first occurrence of a value in the collection.</summary>
      <returns>The zero-based index of the first occurrence of the value in the collection.</returns>
      <param name="item">Removes all items from the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)">
      <summary>Inserts an item into the collection at a specified index.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <param name="item">The object to be inserted into the collection as an element.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts an item into the collection at a specified index.</summary>
      <param name="index">The zero-based index of the collection where the object is to be inserted.</param>
      <param name="item">The object to be inserted into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)">
      <summary>Gets an element from the thread-safe collection with a specified index.</summary>
      <returns>The object in the collection that has the specified <paramref name="index" />.</returns>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Items">
      <summary>Gets the list of elements contained in the thread-safe collection.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)">
      <summary>Removes the first occurrence of a specified item from the collection.</summary>
      <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
      <param name="item">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)">
      <summary>Removes an item at a specified index from the collection.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.RemoveItem(System.Int32)">
      <summary>Removes an item at a specified <paramref name="index" /> from the collection.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the item at a specified index with another item.</summary>
      <param name="index">The zero-based index of the object to be replaced.</param>
      <param name="item">The object to replace </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot">
      <summary>Gets the object used to synchronize access to the thread-safe collection.</summary>
      <returns>An object used to synchronize access to the thread-safe collection.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>false</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to a specified array, starting at a particular index.</summary>
      <param name="array">The destination <see cref="T:System.Array" /> for the elements of type <paramref name="T" /> copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether the collection is thread safe.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets the object used to synchronize access to the thread-safe collection.</summary>
      <returns>An object used to synchronize access to the thread-safe collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the synchronized collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Adds an element to the collection.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The object to add to the collection.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the collection contains an element with a specific value.</summary>
      <returns>true if the element <paramref name="value" /> is found in the collection; otherwise false.</returns>
      <param name="value"></param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an object of the type contained in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the zero-based index of an element in the collection.</summary>
      <returns>The index of the <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
      <param name="value">The element in the collection whose index is being determined.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an object into the collection at a specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> is to be inserted.</param>
      <param name="value">The object to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the collection is fixed in size.</summary>
      <returns>false</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>false</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the item at a specified zero-based index.</summary>
      <returns>The item with the specified <paramref name="index" />.</returns>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specified object as an element from the collection.</summary>
      <param name="value">The object to be removed from the collection.</param>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedKeyedCollection`2">
      <summary>Provides a thread-safe collection that contains objects of a type specified by a generic parameter and that are grouped by keys.</summary>
      <typeparam name="K">The type of the key used to group the items contained in the collection.</typeparam>
      <typeparam name="T">The type of items contained in the thread-safe, keyed collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> class. </summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> class with access synchronized by an explicitly specified object.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> class with access synchronized by an explicitly specified object and with keys compared in a specified way. </summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe collection.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> of type <paramref name="K" /> used to compare key objects of type <paramref name="K" /> for equality.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null or <paramref name="comparer" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> class with access synchronized by an explicitly specified object and with keys compared in a specified way. </summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe collection.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> of type <paramref name="K" /> used to compare key objects of type <paramref name="K" /> for equality.</param>
      <param name="dictionaryCreationThreshold">The number of items required to create a dictionary for the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null or <paramref name="comparer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dictionaryCreationThreshold" /> is less than -1.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)">
      <summary>Changes the key for a specified item in the synchronized collection.</summary>
      <param name="item">The item whose key is being changed.</param>
      <param name="newKey">The new key for the specified item.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)">
      <summary>Returns a value that indicates whether the collection contains an item with a specified key.</summary>
      <returns>true if the collection contains an item with the key specified; otherwise, false.</returns>
      <param name="key">The key of type <paramref name="K" /> being tested for.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary">
      <summary>Gets the dictionary associated with the collection.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the key-item pairs for the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem(`1)">
      <summary>When overridden in a derived class, gets the key for a specified item.</summary>
      <returns>The key of type K for the specified <paramref name="item" /> of type <paramref name="T" />.</returns>
      <param name="item">The item of type <paramref name="T" /> whose key is being retrieved.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem(System.Int32,`1)">
      <summary>Inserts an item into the collection at a specified location.</summary>
      <param name="index">The zero-based index that specifies the insertion location for the item in the collection.</param>
      <param name="item">The item of type <paramref name="T" /> to be inserted into the collection.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)">
      <summary>Gets the items with a specified key from the collection.</summary>
      <returns>The item of type <paramref name="T" /> from the collection with the key specified.</returns>
      <param name="key">The key for the item being retrieved.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)">
      <summary>Removes an item with a specified key from the collection and returns a value that indicates whether an item was removed.</summary>
      <returns>true if an item with the specified key was removed; otherwise, false.</returns>
      <param name="key">The key of the item to be removed.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)">
      <summary>Removes an item at a specified location from the collection.</summary>
      <param name="index">The zero-based index that specifies the location of the item that is removed from the collection.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem(System.Int32,`1)">
      <summary>Replaces an item at a specified location of the collection with a new item.</summary>
      <param name="index">The zero-based index that specifies the insertion location for the item in the collection.</param>
      <param name="item">The item of type <paramref name="T" /> to be inserted into the collection.</param>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>Provides a thread-safe, read-only collection that contains objects of a type specified by the generic parameter as elements.</summary>
      <typeparam name="T">The type of object contained as items in the thread-safe, read-only collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class. </summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class with the object used to synchronize access to the thread-safe, read-only collection.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe, read-only collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe, read-only collection.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe, read-only collection.</param>
      <param name="list">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe, read-only collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,`0[])">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe, read-only collection.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe, read-only collection.</param>
      <param name="list">The <see cref="T:System.Array" /> of type <paramref name="T" /> elements used to initialize the thread-safe, read-only collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>Determines whether the collection contains an element with a specific value.</summary>
      <returns>true if the element <paramref name="value" /> is found in the collection; otherwise false.</returns>
      <param name="value">The object to locate in the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an object of the type contained in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the elements of the collection to a specified array, starting at a particular index.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>Gets the number of elements contained in the thread-safe, read-only collection.</summary>
      <returns>The number of elements contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the synchronized, read-only collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>Returns the index of the first occurrence of a value in the collection.</summary>
      <returns>The zero-based index of the first occurrence of the <paramref name="value" /> in the collection.</returns>
      <param name="value">The element whose index is being retrieved.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>Gets an element from the thread-safe, read-only collection with a specified index.</summary>
      <returns>The object in the collection that has the specified <paramref name="index" />.</returns>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>Gets the list of elements contained in the thread-safe, read-only collection.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <param name="value"></param>
      <exception cref="T:System.NotSupportedException">Items cannot be set in a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <exception cref="T:System.NotSupportedException">Items cannot be cleared from a read-only collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly"></member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Returns false and throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <returns>false</returns>
      <param name="value">The value to be removed from the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be removed from a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <param name="index"></param>
      <param name="value"></param>
      <exception cref="T:System.NotSupportedException">Items cannot be inserted into a read-only collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be removed from a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <param name="array">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <param name="value">The element to be added to the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be set in a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <exception cref="T:System.NotSupportedException">Items cannot be cleared from a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <param name="value">The object to locate in the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an object of the type contained in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <param name="value">The element whose index is being retrieved.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index">The zero-based index at which <paramref name="value" /> is to be inserted.</param>
      <param name="value">The object to insert into the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be inserted into a read-only collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize"></member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly"></member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be set in a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <param name="value"></param>
      <exception cref="T:System.NotSupportedException">Items cannot be removed from a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be removed from a read-only collection.</exception>
    </member>
    <member name="T:System.IO.PipeException">
      <summary>Thrown when an error occurs within a named pipe.</summary>
    </member>
    <member name="M:System.IO.PipeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class.</summary>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with a specified error message. </summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with the specified error message and the inner exception.  </summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
      <param name="inner">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with a specified error message and error code. </summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
      <param name="errorCode">An integer that contains the error code.</param>
    </member>
    <member name="P:System.IO.PipeException.ErrorCode">
      <summary>Gets the error code to be returned with the exception. </summary>
      <returns>An integer with the error code to be returned with the exception. </returns>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>This exception is typically thrown on the client when the action related to the operation invoked does not match any action of operations in the server.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.AddressAccessDeniedException">
      <summary>The exception that is thrown when access to the address is denied.</summary>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with a specified error message. </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.AddressAlreadyInUseException">
      <summary>The exception that is thrown when an address is unavailable because it is already in use.</summary>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.AddressFilterMode">
      <summary>Specifies the type of match semantics used by the dispatcher to route incoming messages to the correct endpoint.</summary>
    </member>
    <member name="F:System.ServiceModel.AddressFilterMode.Exact">
      <summary>Indicates a filter that does an exact match on the address of an incoming message.</summary>
    </member>
    <member name="F:System.ServiceModel.AddressFilterMode.Prefix">
      <summary>Indicates a filter does the longest prefix matches on the address of an incoming message.</summary>
    </member>
    <member name="F:System.ServiceModel.AddressFilterMode.Any">
      <summary>Indicates a filter that matches on any address of an incoming message.</summary>
    </member>
    <member name="T:System.ServiceModel.AuditLevel">
      <summary>Specifies when to audit security events. </summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.None">
      <summary>No events will be recorded. This is the default.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.Success">
      <summary>Only successful security-related events will be recorded.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.Failure">
      <summary>Only failed security-related events will be recorded.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.SuccessOrFailure">
      <summary>Both failed and successful security-related events will be recorded.</summary>
    </member>
    <member name="T:System.ServiceModel.AuditLogLocation">
      <summary>Specifies the location where security-related event logs are written.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLogLocation.Default">
      <summary>Specifies the default location, which is determined by the operating system. If writing to the Security log is supported (such as on Windows Vista and Windows Server 2003 and later platforms), the default log location is the Security log. Otherwise (such as in Windows XP SP2), the default log location is the Application log.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLogLocation.Application">
      <summary>Specifies the Application log in the event log.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLogLocation.Security">
      <summary>Specifies the Security log in the event log. The calling thread must have SeAuditPrivilege to be able to write to the Security log.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Represents a binding that a Windows Communication Foundation (WCF) service can use to configure and expose endpoints that are able to communicate with ASMX-based Web services and clients and other services that conform to the WS-I Basic Profile 1.1.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a binding specified by its configuration name. </summary>
      <param name="configurationName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding with the configuration name <paramref name="configurationName" /> was not found.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.BasicHttpBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value is always SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory that is allocated for use by the manager of the message buffers that receive messages from the channel.</summary>
      <returns>The maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524288 (0x80000) bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>Gets or sets the maximum size for a buffer that receives messages from the channel.</summary>
      <returns>The maximum size, in bytes, of a buffer that stores messages while they are processed for an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be received on a channel configured with this binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text is used to encode SOAP messages.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text/XML is used to encode SOAP messages. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>"https" if the security mode in the transport binding element is set to <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> or <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />; "http" otherwise.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>Gets the type of security used with this binding.  </summary>
      <returns>The <see cref="T:System.ServiceModel.BasicHttpSecurity" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TransferMode">
      <summary>Gets or sets a value that indicates whether messages are sent buffered or streamed.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> that indicates whether messages are sent buffered or streamed.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>Enumerates credential types the client can authenticate with when security is enabled in the BasicHttpBinding binding.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>Indicates that the client be authenticated using a username credential. </summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Indicates that a client be authenticated using a certificate. </summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageSecurity">
      <summary>Configures message-level security settings for <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpMessageSecurity.AlgorithmSuite">
      <summary>Specifies the algorithm suite to use with <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default value is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpMessageSecurity.ClientCredentialType">
      <summary>Specifies the type of credential with which the client authenticates.</summary>
      <returns>A member of the <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> enumeration. The default value is <see cref="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>Configures the security settings of a basicHttpBinding binding.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Message">
      <summary>Gets the message-level security settings for a basicHttpBinding binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />, which represents the message-level security settings for this binding. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>Gets or sets the security mode for a basicHttpBinding binding.</summary>
      <returns>A value in the <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> enumeration. The default value for this property is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a legal value for <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Transport">
      <summary>Gets the transport-level security settings for a basicHttpBinding binding.</summary>
      <returns>An <see cref="T:System.ServiceModel.HttpTransportSecurity" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>Specifies the types of security that can be used with the system-provided <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>The SOAP message is not secured during transfer. This is the default behavior.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>Security is provided using HTTPS. The service must be configured with SSL certificates. The SOAP message is protected as a whole using HTTPS. The service is authenticated by the client using the service’s SSL certificate. The client authentication is controlled through the <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Message">
      <summary>Security is provided using SOAP message security. For the <see cref="T:System.ServiceModel.BasicHttpBinding" />, the system requires that the server certificate be provided to the client separately. The valid client credential types for this binding are UserName and Certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Integrity, confidentiality and server authentication are provided by HTTPS. The service must be configured with a certificate. Client authentication is provided by means of SOAP message security. This mode is applicable when the user is authenticating with a UserName or Certificate credential and there is an existing HTTPS deployment for securing message transfer.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>This mode does not provide message integrity and confidentiality. It provides only HTTP-based client authentication. Use this mode with caution. It should be used in environments where the transfer security is being provided by other means (such as IPSec) and only client authentication is provided by the Windows Communication Foundation (WCF) infrastructure.</summary>
    </member>
    <member name="T:System.ServiceModel.CallbackBehaviorAttribute">
      <summary>Configures a callback service implementation in a client application.</summary>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CallbackBehaviorAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Specifies whether to automatically close a session when a service closes a duplex session.</summary>
      <returns>true if duplex callback objects automatically close a session when the service closes a duplex session; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
      <summary>Gets or sets whether a service supports one thread, multiple threads, or reentrant calls.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values; the default is <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
      <summary>Gets or sets a value that specifies whether to send unknown serialization data onto the wire.</summary>
      <returns>true if unknown serialization data is never sent; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that specifies that general unhandled execution exceptions are to be converted into a <see cref="T:System.ServiceModel.FaultException`1" />of type <see cref="T:System.String" /> and sent as a fault message. Set this to true only during development to troubleshoot a service.</summary>
      <returns>true if unhandled exceptions are to be returned as SOAP faults; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph">
      <summary>Gets or sets the maximum number of items allowed in a serialized object.</summary>
      <returns>The maximum number of items allowed in an object. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures the binding elements to support the callback behavior.</summary>
      <param name="serviceEndpoint">The endpoint for the callback object.</param>
      <param name="parameters">The collection of binding parameters that are configured.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Configures the client runtime to support the callback object.</summary>
      <param name="serviceEndpoint">The endpoint configured by the attribute.</param>
      <param name="clientRuntime">The client run-time object that the attribute configures.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> method. This implementation has no effect.</summary>
      <param name="serviceEndpoint">The endpoint to be modified.   </param>
      <param name="endpointDispatcher">The endpoint dispatcher that the method modifies.   </param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Validates the endpoint description prior to building the runtime.</summary>
      <param name="serviceEndpoint">The endpoint to be validated.</param>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
      <summary>Specifies the transaction isolation level.</summary>
      <returns>A <see cref="T:System.Transactions.IsolationLevel" /> value that specifies the transaction isolation level. The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Transactions.IsolationLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout">
      <summary>Gets or sets the period within which a transaction must complete.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that represents the time within which transactions must complete or be automatically aborted. The default value is <see cref="F:System.TimeSpan.Zero" />.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
      <summary>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</summary>
      <returns>true if all calls to the service must run on the thread specified by the <see cref="T:System.Threading.SynchronizationContext" />; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
      <summary>Gets or sets a value that specifies whether the system or the application enforces SOAP MustUnderstand header processing.</summary>
      <returns>true if the system is to perform SOAP header MustUnderstand processing; otherwise false, which indicates that the application performs this processing. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Creates and manages the channels that are used by clients to send messages to service endpoints.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Initializes the channel factory with the behaviors provided by a specified configuration file and with those in the service endpoint of the channel factory.</summary>
      <param name="configurationName">The name of the configuration file.</param>
      <exception cref="T:System.InvalidOperationException">The service endpoint of the channel factory is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>When implemented in a derived class, creates a description of the service endpoint associated with the channel factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> associated with the channel factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Builds the channel factory for the current endpoint of the factory.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> for the endpoint of the current factory.</returns>
      <exception cref="T:System.InvalidOperationException">The endpoint of the service that the factory channels connect to is null or the endpoint's binding is null or is missing the element with the configuration name specified.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Gets the credentials used by clients to communicate a service endpoint over the channels produced by the factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ClientCredentials" /> used by clients if they are configured for the factory or if the endpoint is non-null and is in either the created or opening communication state; otherwise null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Gets the service endpoint to which the channels produced by the factory connect.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to which the channels produced by the factory connect.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Opens the current channel factory if it is not yet opened.</summary>
      <exception cref="T:System.ObjectDisposedException">The current factory is either closing or closed and so cannot be opened.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Returns the typed object requested, if present, from the appropriate layer in the channel stack, or null if not present.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes the service endpoint of the channel factory with a specified binding and address.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> with which to initialize the channel factory.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> with which to initialize the channel factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes the service endpoint of the channel factory with a specified endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to initialize the channel factory with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes the service endpoint of the channel factory with a specified address and configuration.</summary>
      <param name="configurationName">The name of the configuration file used to initialize the channel factory.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> with which to initialize the channel factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Terminates the inner channel factory of the current channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous close operation on the inner channel factory of the current channel factory that has a state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous open operation on the inner channel factory of the current channel factory that has a state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Calls close on the inner channel factory with a specified time-out for the completion of the operation.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous close operation on the inner channel factory of the current channel factory. </summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous open operation on the inner channel factory of the current channel factory. </summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Calls open on the inner channel factory of the current channel factory with a specified time-out for the completion of the operation.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</param>
      <exception cref="T:System.InvalidOperationException">The inner channel of the current channel is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Initializes a read-only copy of the <see cref="T:System.ServiceModel.Description.ClientCredentials" /> object for the channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Builds the inner channel factory for the current channel.</summary>
      <exception cref="T:System.InvalidOperationException">The inner channel factory for the channel factory is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Closes the current channel factory.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.</summary>
      <typeparam name="TChannel">The type of channel produced by the channel factory. This type must be either <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class. </summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> specified for the channels produced by the factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified binding and endpoint address.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified binding and remote address.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</param>
      <param name="remoteAddress">The address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class that produces channels with a specified endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> for the channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="endpoint" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified endpoint configuration name.</summary>
      <param name="endpointConfigurationName">The configuration name used for the endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class associated with a specified name for the endpoint configuration and remote address.</summary>
      <param name="endpointConfigurationName">The configuration name used for the endpoint.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class. </summary>
      <param name="channelType">The <see cref="T:System.Type" /> of channel produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="channelType" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="channelType" /> is a class or value type and is not an interface.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <summary>Creates a channel of a specified type to a specified endpoint address.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a channel of a specified type that is used to send messages to a service endpoint that is configured with a specified binding.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a channel of a specified type that is used to send messages to a service endpoint at a specified transport address that is configured with a specified binding.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the channel sends messages.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Creates a channel that is used to send messages to a service at a specific endpoint address.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the channel sends messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)">
      <summary>Creates a channel that is used to send messages to a service whose endpoint is configured in a specified way.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="endpointConfigurationName">The name of the endpoint configuration used for the service.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Creates a description of the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the service.</returns>
      <exception cref="T:System.InvalidOperationException">The callback contract is null but the service endpoint requires one that is non-null.</exception>
    </member>
    <member name="T:System.ServiceModel.ChannelTerminatedException">
      <summary>This exception is typically thrown on the client when a channel is terminated due to server closing the associated connection.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class with serialization information and streaming context specified. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Provides the base implementation used to create Windows Communication Foundation (WCF) client objects that can call services.</summary>
      <typeparam name="TChannel">The channel to be used to connect to the service.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the default target endpoint from the application configuration file. </summary>
      <exception cref="T:System.InvalidOperationException">Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified binding and target address. </summary>
      <param name="binding">The binding with which to make calls to the service.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The binding is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the <paramref name="callbackInstance" /> as the callback object in a duplex conversation. </summary>
      <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.InvalidOperationException">Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class. </summary>
      <param name="callbackInstance">The callback service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The binding is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified callback service and endpoint configuration information. </summary>
      <param name="callbackInstance">The callback object that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file. </param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class.</summary>
      <param name="callbackInstance">The callback object that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class.</summary>
      <param name="callbackInstance">The callback object that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the configuration information specified in the application configuration file by <paramref name="endpointConfigurationName" />. </summary>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The specified endpoint information is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified target address and endpoint information. </summary>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service.</param>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class.</summary>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service.</param>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition immediately from its current state into the closed state.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Gets the inner channel used to communicate with the service.</summary>
      <returns>An implementation of the target service contract interface passed as the type parameter to the constructor.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Gets the underlying <see cref="T:System.ServiceModel.ChannelFactory`1" /> object.</summary>
      <returns>A <see cref="T:System.ServiceModel.ChannelFactory`1" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Gets the client credentials used to call an operation.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Description.ClientCredentials" /> that represents the proof of identity presented by the client.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Close">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from its current state into the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Returns a new channel to the service.</summary>
      <returns>A channel of the type of the service contract.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
      <summary>Instructs the inner channel to display a user interface if one is required to initialize the channel prior to using it.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Gets the target endpoint for the service to which the WCF client can connect.</summary>
      <returns>The target endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Gets the underlying <see cref="T:System.ServiceModel.IClientChannel" /> implementation.</summary>
      <returns>The client channel for the WCF client object.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Open">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from the created state into the opened state.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Gets the current state of the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
      <summary>Explicit implementation of the <see cref="M:System.IDisposable.Dispose" /> method.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close the <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
      <param name="callback">The method that receives the callback on completion.</param>
      <param name="state">The state data.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close the <see cref="T:System.ServiceModel.ClientBase`1" /> with a specified timeout.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous begin close operation.</returns>
      <param name="timeout">The period within which the call must complete.</param>
      <param name="callback">The callback object invoked when the operation completes.</param>
      <param name="state">The state data.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="callback">The method that receives the callback on completion.</param>
      <param name="state">The state data.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open the <see cref="T:System.ServiceModel.ClientBase`1" /> object within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
      <param name="timeout">The time within which the call must complete.</param>
      <param name="callback">The method that receives the callback on completion.</param>
      <param name="state">The state data.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from its current state into the closed state.</summary>
      <param name="timeout">The time within which the call must complete.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object has transitioned from its current state to the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object transitions from its current state to the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> used to complete the asynchronous close operation.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> used to complete the asynchronous end open operation.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>The event handler that is invoked when a fault occurs while performing an operation on the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The time period within which the call must complete.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object transitions from the created state to the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object transitions from the created state to the opened state.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
      <summary>Manages security tokens for the client.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> class.</summary>
      <param name="clientCredentials">The <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clientCredentials" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials">
      <summary>Gets the client credentials.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <summary>Creates a security token authenticator.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />.</returns>
      <param name="tokenRequirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <param name="outOfBandTokenResolver">When this method returns, contains a <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenRequirement" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Creates a security token provider.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />.</returns>
      <param name="tokenRequirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenRequirement" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <summary>Creates a security token serializer.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</returns>
      <param name="version">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /> of the security token.</param>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
      <summary>Creates a security token serializer.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</returns>
      <param name="version">The <see cref="T:System.ServiceModel.Security.SecurityVersion" /> of the security token.</param>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Gets a value that indicates whether the specified token requirement is an issued security token requirement.</summary>
      <returns>true if the specified token requirement is an issued security token requirement; otherwise, false. The default is false.</returns>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requirement" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Represents a communication error in either the service or client application.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified serialization information and context objects. </summary>
      <param name="info">Information relevant to the deserialization process.</param>
      <param name="context">The context of the deserialization process.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified message.</summary>
      <param name="message">The description of the error condition.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified message and the inner exception.</summary>
      <param name="message">The description of the error condition.</param>
      <param name="innerException">The inner exception to be used.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>The exception that is thrown when the call is to an <see cref="T:System.ServiceModel.ICommunicationObject" /> object that has aborted.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class used to deserialize data into a <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> object. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class with the specified message. </summary>
      <param name="message">The message carried in the exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class using the specified message and inner exception. </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>The exception that is thrown when a call is made to a communication object that has faulted. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class when deserializing a stream using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</summary>
      <param name="info">The serialization information used to create the exception object.</param>
      <param name="context">The context within which the exception object is created.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class using the specified message.</summary>
      <param name="message">The message that describes the exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class using the specified message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Defines the states in which an <see cref="T:System.ServiceModel.ICommunicationObject" /> can exist. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Indicates that the communication object has been instantiated and is configurable, but not yet open or ready for use.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Indicates that the communication object is being transitioned from the <see cref="F:System.ServiceModel.CommunicationState.Created" /> state to the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Indicates that the communication object is now open and ready to be used. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Indicates that the communication object is transitioning to the <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Indicates that the communication object has been closed and is no longer usable. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Indicates that the communication object has encountered an error or fault from which it cannot recover and from which it is no longer usable. </summary>
    </member>
    <member name="T:System.ServiceModel.ConcurrencyMode">
      <summary>Specifies whether a service class supports single-threaded or multi-threaded modes of operation. </summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Single">
      <summary>The service instance is single-threaded and does not accept reentrant calls. If the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> property is <see cref="F:System.ServiceModel.InstanceContextMode.Single" />, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out.</summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Reentrant">
      <summary>The service instance is single-threaded and accepts reentrant calls. The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts. Note that the service instance is unlocked only by calling another service over a WCF channel. In this case, the called service can reenter the first service via a callback. If the first service is not reentrant, the sequence of calls results in a deadlock. For details, see <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />. </summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Multiple">
      <summary>The service instance is multi-threaded. No synchronization guarantees are made. Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times.</summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Instructs the Windows Communication Foundation (WCF) infrastructure to use the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Gets or sets the SOAP style of the serialized data.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatStyle" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.DeadLetterQueue">
      <summary>Specifies the type of dead-letter queue to be used.</summary>
    </member>
    <member name="F:System.ServiceModel.DeadLetterQueue.None">
      <summary>No dead-letter queue is to be used.</summary>
    </member>
    <member name="F:System.ServiceModel.DeadLetterQueue.System">
      <summary>Use the system-wide, dead-letter queue.</summary>
    </member>
    <member name="F:System.ServiceModel.DeadLetterQueue.Custom">
      <summary>Custom dead-letter queue.</summary>
    </member>
    <member name="T:System.ServiceModel.DeliveryRequirementsAttribute">
      <summary>Specifies the feature requirements that bindings must provide to the service or client implementation.</summary>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements">
      <summary>Specifies whether the binding for a service must support queued contracts.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> values; the default is <see cref="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed" />.</returns>
      <exception cref="T:System.ArgumentException">The value is not one of the <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery">
      <summary>Specifies whether the binding must support ordered messages.</summary>
      <returns>true instructs Windows Communication Foundation (WCF) to confirm that the binding must support the ordering of messages; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to attach binding parameters correctly.</summary>
      <param name="description">The contract description.</param>
      <param name="endpoint">The service endpoint for the contract.</param>
      <param name="parameters">The binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> method for client support.</summary>
      <param name="description">The contract description to which the behavior is attached.</param>
      <param name="endpoint">The endpoint for the contract.</param>
      <param name="proxy">The client runtime on which the behavior operates.</param>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" /> method that enables service support.</summary>
      <param name="description">The contract description to which the behavior is attached.</param>
      <param name="endpoint">The endpoint for the contract.</param>
      <param name="dispatch">The dispatch runtime that supports the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" /> method to enable validation support.</summary>
      <param name="description">The contract description.</param>
      <param name="endpoint">The endpoint to be validated.</param>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract">
      <summary>Gets or sets the type to which it applies.</summary>
      <returns>The <see cref="T:System.Type" /> to which the attribute applies.</returns>
    </member>
    <member name="T:System.ServiceModel.DnsEndpointIdentity">
      <summary>Specifies the DNS identity of the server.</summary>
    </member>
    <member name="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DnsEndpointIdentity" /> class from a claim.</summary>
      <param name="identity">The <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of this class from a DNS name.</summary>
      <param name="dnsName">The DNS name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dnsName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="dnsName" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Dns" />.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexChannelFactory`1">
      <summary>Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.</summary>
      <typeparam name="TChannel">The type of channel produced by the channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified binding.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified binding and endpoint address.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified callback object, binding, and remote address.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified endpoint.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to which channels produced by the factory connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The configuration name used for the endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract, and a specified configuration and endpoint address.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified instance context.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with a context that implements the callback contract and a specified binding.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified binding and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified instance context, binding, and remote address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified endpoint.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to which channels produced by the factory connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance and binding.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance, binding, and remote address.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with the specified type of callback instance, binding, and remote address.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance and service endpoint.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> for the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance and configuration.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with the specified type of callback instance, configuration, and remote address.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> or <paramref name="endpointAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> or <paramref name="endpointAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> or <paramref name="endpointAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> or <paramref name="endpointAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexClientBase`1">
      <summary>Used to create a channel to a duplex service and associate that channel with a callback object.</summary>
      <typeparam name="TChannel">The type of the channel to be created.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, binding, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The service endpoint address to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The binding is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object and configuration name.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, endpoint configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, binding, and service endpoint address.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The service endpoint address to use.</param>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object and configuration name.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.CreateChannel">
      <summary>Returns a channel to the service associated with the callback object passed to the constructor.</summary>
      <returns>A channel to the service of the type of the service contract interface.</returns>
    </member>
    <member name="P:System.ServiceModel.DuplexClientBase`1.InnerDuplexChannel">
      <summary>Gets the inner duplex channel.</summary>
      <returns>The inner duplex channel.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Provides a unique network address that a client uses to communicate with a service endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI string.</summary>
      <param name="uri">The URI that identifies the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI and headers.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="addressHeaders">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and headers.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</param>
      <param name="addressHeaders">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and header collection.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</param>
      <param name="headers">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryReader)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, header collection, and metadata and extension readers.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</param>
      <param name="headers">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</param>
      <param name="metadataReader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint metadata is obtained.</param>
      <param name="extensionReader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which extensions are obtained.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Gets a version-neutral representation of the anonymous URI.</summary>
      <returns>A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Assigns the URI and properties of the endpoint address to the values of the headers of a specified message.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> whose header values are being assigned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Returns a value that indicates whether a specified object is equivalent to the current endpoint address.</summary>
      <returns>true if the specified object is equivalent to the current address; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to be compared to the current endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Provides a unique hash code for the current endpoint address. </summary>
      <returns>A unique hash code for the current endpoint address.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetReaderAtExtensions">
      <summary>Gets the XML dictionary reader that provides access to the extensions.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the extensions.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetReaderAtMetadata">
      <summary>Gets the XML dictionary reader that provides access to the metadata for an endpoint.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the metadata for an endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Gets the collection of address headers for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Identity">
      <summary>Gets the identity for the endpoint used to authenticate it.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Gets a value that indicates whether the endpoint is anonymous.</summary>
      <returns>true if the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Gets a value that indicates whether the URI for the endpoint is the <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>true if the URI of the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Gets a version-neutral URI used for the address of an endpoint to which a message must not be sent.</summary>
      <returns>A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Returns a value that indicates whether specified endpoint addresses are not equivalent.</summary>
      <returns>true if the endpoint addresses are equivalent; otherwise, false.</returns>
      <param name="address1">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
      <param name="address2">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Returns a value that indicates whether specified endpoint addresses are not equivalent.</summary>
      <returns>true if the endpoint addresses are not equivalent; otherwise, false.</returns>
      <param name="address1">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
      <param name="address2">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Reads an endpoint address for a specified address version from a specified XML dictionary reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</returns>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads an endpoint address for a specified address version with a specified qualified name from a specified XML dictionary reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</returns>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</param>
      <param name="localName">Contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">Contains the namespace for the XML node to contain the endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)">
      <summary>Reads an endpoint address for a specified address version from a specified XML reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML reader.</returns>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)">
      <summary>Reads an endpoint address for a specified address version with a specified qualified name from a specified XML reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</returns>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</param>
      <param name="localName">Contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">Contains the namespace for the XML node to contain the endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)">
      <summary>Reads an endpoint address from a specified XML dictionary reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads an endpoint address with a specified qualified name from a specified XML dictionary reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML dictionary reader.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</param>
      <param name="localName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Returns a canonical string representation of the URI that is contained in the endpoint address.</summary>
      <returns>The URI that identifies the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Gets the URI for the endpoint.</summary>
      <returns>The <see cref="T:System.Uri" /> for the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Saves all the child nodes of the node to the XML dictionary writer specified.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)">
      <summary>Saves all the child nodes of the node to the XML writer specified.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Saves the current endpoint address of a specified version to a specified XML dictionary writer.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Saves the current endpoint address of a specified version to an XML dictionary writer with a specified namespace and local name.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</param>
      <param name="localName">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)">
      <summary>Saves the current endpoint address of a specified version to a specified XML writer.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)">
      <summary>Saves the current endpoint address of a specified version to an XML writer with a specified namespace and local name.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</param>
      <param name="localName">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress10">
      <summary>Provides a serializable type of endpoint address that is WS-Addressing V1 compliant and that enables it to be exposed as part of the service contract.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.FromEndpointAddress(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress10" /> class with a specified endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress10" /> class that contains the specified endpoint address.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> used to initialize the instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Returns an XML-qualified name that describes the XML representation of the version 1.0 endpoint address from a specified cached schema.</summary>
      <returns>A <see cref="T:System.Xml.XmlQualifiedName" /> that describes the XML representation of the endpoint address.</returns>
      <param name="xmlSchemaSet">A <see cref="T:System.Xml.Schema.XmlSchema" /> that contains a cache of the XML schema definition language (XSD) schemas for the endpoint address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlSchemaSet" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Returns null.</summary>
      <returns>null</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the current endpoint address is saved.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.ToEndpointAddress">
      <summary>Retrieves the endpoint address contained in this serializable type.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> used to initialize the instance of this class.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressAugust2004">
      <summary>Provides a serializable type of endpoint address that is compliant with the version of WS-Addressing published in August 2004 and that enables it to be exposed as part of the service contract.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.FromEndpointAddress(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress10" /> class with a specified endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddressAugust2004" /> class that contains the specified endpoint address.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> used to initialize the instance of this class.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Returns an XML-qualified name that describes the XML representation of the version 1 endpoint address from a specified cached schema.</summary>
      <returns>A <see cref="T:System.Xml.XmlQualifiedName" /> that describes the XML representation of the endpoint address.</returns>
      <param name="xmlSchemaSet">A <see cref="T:System.Xml.Schema.XmlSchema" /> that contains a cache of the XML schema definition language (XSD) schemas for the endpoint address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlSchemaSet" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Returns null.</summary>
      <returns>null</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the current endpoint address is saved.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.ToEndpointAddress">
      <summary>Retrieves the endpoint address contained in this serializable type.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> that contains a version-neutral endpoint address of this <see cref="T:System.ServiceModel.EndpointAddressAugust2004" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>A factory for producing new (immutable) endpoint addresses with specific property values.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> class from an existing endpoint address.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> whose property values are used to initialize the property values of this instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtExtensions">
      <summary>Returns the XML dictionary reader that contains the extensions of the endpoint address.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReader" /> that reads the extensions of the endpoint address.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtMetadata">
      <summary>Returns the reader that contains the metadata associated with the endpoint address.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReader" /> that reads the metadata associated the endpoint address if there is some; otherwise, null.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Gets the list of address headers for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.Collections.Generic.List`1" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains the address headers for the endpoints that the builder can create.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <summary>Gets or sets the identity for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.SetExtensionReader(System.Xml.XmlDictionaryReader)">
      <summary>Specifies the XML dictionary reader that contains the extensions of the endpoint address.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> that reads the extensions of the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.SetMetadataReader(System.Xml.XmlDictionaryReader)">
      <summary>Specifies the XML dictionary reader that contains the metadata associated with the endpoint address.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> that reads the metadata associated with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Creates a new endpoint address initialized with the property values of the current endpoint address builder.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> whose property are initialized with the values of the current endpoint address builder.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Gets or sets the URI for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.Uri" /> that specifies the endpoint address.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentity">
      <summary>An abstract class that when implemented provides an identity that enables the authentication of an endpoint by clients that exchange messages with it.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.#ctor">
      <summary>Creates an empty <see cref="T:System.ServiceModel.EndpointIdentity" /> instance.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
      <summary>Creates a DNS identity with a specified DNS name.</summary>
      <returns>A DNS <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="dnsName" />.</returns>
      <param name="dnsName">The name for the DNS identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dnsName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
      <summary>Creates an identity with the specified claim.</summary>
      <returns>An <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="identity" />.</returns>
      <param name="identity">A <see cref="T:System.IdentityModel.Claims.Claim" /> used to create the new identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Creates an RSA identity with the specified X.509 certificate.</summary>
      <returns>An RSA <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="certificate" />.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />  that contains the certificate for the RSA identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="certificate" /> is not an RSA certificate.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
      <summary>Creates an RSA identity with the specified public key.</summary>
      <returns>An RSA <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="publicKey" />.</returns>
      <param name="publicKey">The public key for the RSA identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKey" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
      <summary>Creates a server principal name (SPN) identity with a specified name.</summary>
      <returns>An SPN <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="spnName" />.</returns>
      <param name="spnName">The name for the SPN identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spnName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
      <summary>Creates a user principal name (UPN) identity with a specified name.</summary>
      <returns>A UPN <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="upnName" />.</returns>
      <param name="upnName">The name for the UPN identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="upnName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Creates an X509Certificate identity with the specified certificate.</summary>
      <returns>An X509Certificate <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="certificate" />.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />  that contains the certificate for the identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Creates an X509Certificate identity with the specified primary and supporting certificates.</summary>
      <returns>A secure WCF client that connects to an endpoint with this identity verifies that the claims presented by the server contain the claim that contains the thumbprint of the certificate used to construct this identity.An X509Certificate <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="primaryCertificate" /> and<paramref name=" supportingCertificates." /></returns>
      <param name="primaryCertificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the primary certificate for the identity.</param>
      <param name="supportingCertificates">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> that contains the supporting certificates for the identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="primaryCertificate" /> or <paramref name="supportingCertificates" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <summary>Returns a value that determines whether a specified object is equal to the current identity object or if they have equal security properties.</summary>
      <returns>true if the specified object <paramref name="obj" /> is equivalent to the current identity or contains the same security properties; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> compared for equality with the current identity.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <summary>Provides a hash code for the current instance of the identity.</summary>
      <returns>The hash code for the current identity.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
      <summary>Gets the identity claim that corresponds to the identity. </summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> that represents the identity claim.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)">
      <summary>Initializes an <see cref="T:System.ServiceModel.EndpointIdentity" /> with the specified claim.</summary>
      <param name="identityClaim">The <see cref="T:System.IdentityModel.Claims.Claim" /> used to initialize the <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})">
      <summary>Initializes an <see cref="T:System.ServiceModel.EndpointIdentity" /> with the specified claim and an interface and compares equality.</summary>
      <param name="identityClaim">The <see cref="T:System.IdentityModel.Claims.Claim" /> used to initialize the <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
      <param name="claimComparer">The <see cref="T:System.Collections.IEqualityComparer" /> used to compare claims.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.ToString">
      <summary>Returns the identity.</summary>
      <returns>A <see cref="T:System.String" /> of the form "identity(string)" where string = <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>The exception that is thrown when a remote endpoint could not be found or reached.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class with a specified error message and the inner exception that caused the current exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Contains information related to the version of SOAP associated with a message and its exchange.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Gets a string that contains the URI name for the SOAP role associated with the current message version for the ultimate destination.</summary>
      <returns>An empty string if SOAP1.1 is used; a string that contains http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver if SOAP1.2 is used.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Gets a string that contains the URI name for the SOAP role associated with the current message version for the next destination.</summary>
      <returns>A string that contains http://schemas.xmlsoap.org/soap/actor/next if SOAP1.1 is used; a string that contains http://www.w3.org/2003/05/soap-envelope/role/next if SOAP1.2 is used; and an empty string if the message version is none.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Gets the envelope version not using a version of SOAP.</summary>
      <returns>The envelope version not using a SOAP formatting.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Gets the SOAP1.1 envelope version.</summary>
      <returns>The SOAP1.1 <see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Gets the SOAP1.2 envelope version.</summary>
      <returns>The SOAP1.2 <see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Gets a string that represents the current envelope version.</summary>
      <returns>The current envelope version.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Represents fault detail information.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ExceptionDetail" /> class from the exception. </summary>
      <param name="exception">The exception to be serialized as an <see cref="T:System.ServiceModel.ExceptionDetail" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="exception" /> parameter is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <summary>Gets or sets the help link from the exception passed to the constructor.</summary>
      <returns>The help link information of the exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.ExceptionDetail" /> object that represents the inner exception.</summary>
      <returns>The inner exception information.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Gets or sets the message from the exception passed to the constructor.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Gets or sets the stack trace information from the exception passed to the constructor.</summary>
      <returns>The stack trace of the exception.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Returns the exception detail information for the exception passed to the constructor.</summary>
      <returns>The message and stack trace of the exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Gets or sets the type string for the exception passed to the constructor.</summary>
      <returns>The type string for the exception passed to the constructor.</returns>
    </member>
    <member name="T:System.ServiceModel.ExtensionCollection`1">
      <summary>Represents a collection of extensions.</summary>
      <typeparam name="T">The type for the collection.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ExtensionCollection`1" /> class with a specified owner.</summary>
      <param name="owner">The owner of the collection.</param>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ExtensionCollection`1" /> class with a specified owner and synchronization root.</summary>
      <param name="owner">The owner of the collection.</param>
      <param name="syncRoot">The object used to synchronize.</param>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.Find``1">
      <summary>Returns an extension if it is in the collection.</summary>
      <returns>An extension of the type sought, or null if no extensions implement the type. If more than one extension implements the type, the most recently added is returned.</returns>
      <typeparam name="E">The type of extension sought.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.FindAll``1">
      <summary>Returns a collection of extensions if found in the collection.</summary>
      <returns>A collection of extensions of the type sought. If no extensions implement this type, a non-null empty collection is returned.</returns>
      <typeparam name="E">The type for which the collection of extensions is sought.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets whether the collection is read-only.</summary>
      <returns>
        <see cref="T:System.ServiceModel.ExtensionCollection`1" /> always returns false.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Represents a SOAP fault code. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class. </summary>
      <param name="name">The name of the fault code.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class.</summary>
      <param name="name">The name of the fault code.</param>
      <param name="subCode">The fault subcode.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class with the specified name and namespace. </summary>
      <param name="name">The local name of the fault code. </param>
      <param name="ns">The namespace name of the fault code. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is an empty string. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class with the specified name, namespace, and fault subcode. </summary>
      <param name="name">The local name of the fault code. </param>
      <param name="ns">The namespace name of the fault code. </param>
      <param name="subCode">A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is an empty string. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.ServiceModel.FaultCode)">
      <summary>Creates a receiver fault code with the specified subcode. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object with the created SOAP fault subcode in the <see cref="P:System.ServiceModel.FaultCode.SubCode" /> property. </returns>
      <param name="subCode">A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.String,System.String)">
      <summary>Creates a receiver fault code with the specified subcode. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> instance with the created SOAP fault subcode in the <see cref="P:System.ServiceModel.FaultCode.SubCode" /> property. </returns>
      <param name="name">The local name for the fault subcode. </param>
      <param name="ns">The namespace name for the fault subcode. </param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Creates a sender fault code with the specified subcode. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object with the created SOAP fault subcode in the <see cref="P:System.ServiceModel.FaultCode.SubCode" /> property. </returns>
      <param name="subCode">A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.String,System.String)">
      <summary>Creates a sender fault code with the specified subcode.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object with the created SOAP fault subcode in <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="name">The local name for the fault subcode. </param>
      <param name="ns">The namespace name for the fault subcode. </param>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Gets a value that indicates whether the fault is a SOAP 1.1 or SOAP 1.2 fault.</summary>
      <returns>true if the fault is a SOAP 1.1 or SOAP 1.2 fault; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Gets a value that indicates whether the fault is a SOAP 1.1 server fault or a SOAP 1.2 receiver fault.</summary>
      <returns>true if the fault is a SOAP 1.1 server fault or a SOAP 1.2 receiver fault; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Gets a value that indicates whether the fault is a SOAP 1.1 client fault or a SOAP 1.2 sender fault.</summary>
      <returns>true if the fault is a SOAP 1.1 client fault or a SOAP 1.2 sender fault; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Gets the local name of the fault code. </summary>
      <returns>The local name of the fault code. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Gets the namespace for the fault code. </summary>
      <returns>A Uniform Resource Identifier (URI) for the namespace name. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Gets the fault subcode. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultContractAttribute" /> class. </summary>
      <param name="detailType">The serializable type that contains error information for the caller.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="detailType" /> argument is null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.</summary>
      <returns>The value of the action for the SOAP fault message.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Gets the type of a serializable object that contains error information.</summary>
      <returns>The type that represents the serializable error class.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
      <summary>Gets a value that indicates whether the SOAP fault message has a protection level assigned.</summary>
      <returns>true if the fault message has a protection level; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Gets or sets the name of the fault message in Web Services Description Language (WSDL).</summary>
      <returns>The fault messagename. The default is the name of the type used as the fault detail.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Gets or sets the namespace of the SOAP fault.</summary>
      <returns>The namespace of the SOAP fault.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
      <summary>Specifies the level of protection the SOAP fault requires from the binding.</summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Represents a SOAP fault.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified serialization information and context when deserializing a stream into a <see cref="T:System.ServiceModel.FaultException" /> object.</summary>
      <param name="info">The serialization information necessary to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object from a stream.</param>
      <param name="context">The streaming context required to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified message fault values.</summary>
      <param name="fault">The message fault that contains the default SOAP fault values.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified message fault values and the provided action string.</summary>
      <param name="fault">The message fault that contains the default SOAP fault values to use.</param>
      <param name="action">The action of the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason and fault code.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason, fault code, and action value.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action value for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class with the specified fault reason.</summary>
      <param name="reason">The reason for the fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason and SOAP fault code.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The SOAP fault code for the fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason, fault code, and action value.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action value for the SOAP fault.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Gets the value of the SOAP action for the fault message.</summary>
      <returns>The value of the SOAP action for the fault message.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Gets the fault code for the SOAP fault.</summary>
      <returns>The fault code for the SOAP fault.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.FaultException" /> object from the specified message fault, action and an array of detail types.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultException" /> object that you can throw to indicate that a SOAP fault message was received.</returns>
      <param name="messageFault">The message fault that contains default SOAP fault information.</param>
      <param name="action">The fault action value.</param>
      <param name="faultDetailTypes">An array of types that contains fault details.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.FaultException" /> object from the specified message fault and an array of detail types.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultException" /> object that you can throw to indicate that a SOAP fault message was received.</returns>
      <param name="messageFault">The message fault that contains default SOAP fault information.</param>
      <param name="faultDetailTypes">An array of types that contains fault details.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</summary>
      <returns>The in-memory representation of a SOAP fault that can be passed to <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> to create a message that contains a fault. For <see cref="T:System.ServiceModel.FaultException" /> objects that result from fault messages, this <see cref="T:System.ServiceModel.Channels.MessageFault" /> object is the fault that arrives.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementation of the <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method that is called when the object is serialized into a stream.</summary>
      <param name="info">The serialization information to which the object data is added when serialized.</param>
      <param name="context">The destination for the serialized object.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Gets the message for the exception.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Gets the <see cref="T:System.ServiceModel.FaultReason" /> for the SOAP fault.</summary>
      <returns>The reason for the SOAP fault.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Used in a client application to catch contractually-specified SOAP faults.</summary>
      <typeparam name="TDetail">The serializable error detail type.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class using the specified serialization information and context when deserializing a stream into a <see cref="T:System.ServiceModel.FaultException" /> object.</summary>
      <param name="info">The serialization information necessary to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object from the <paramref name="context" />.</param>
      <param name="context">The stream from which to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object and fault reason. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, fault reason, and fault code. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, and SOAP fault reason, code and action values. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action of the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail and fault reason. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, fault reason, and fault code. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, and SOAP fault reason, code and action values. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action of the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that can be used to create a <see cref="T:System.ServiceModel.Channels.Message" /> that represents the SOAP fault.</summary>
      <returns>The message fault created.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Gets the object that contains the detail information of the fault condition.</summary>
      <returns>The detail object that is the type parameter of the <see cref="T:System.ServiceModel.FaultException`1" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementation of the <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method that is called when the object is serialized into a stream.</summary>
      <param name="info">The serialization information to which the object data is added when serialized.</param>
      <param name="context">The destination for the serialized object.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Returns a string for the <see cref="T:System.ServiceModel.FaultException`1" /> object.</summary>
      <returns>The string for the SOAP fault.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Provides a text description of a SOAP fault. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReason" /> class using the specified list of fault translations. </summary>
      <param name="translations">A list of <see cref="T:System.ServiceModel.FaultReasonText" /> objects; each object describes the fault in a specific language. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> is empty or one or more items is null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReason" /> class using the specified text element that describes the fault in a specific language. </summary>
      <param name="translation">An array of <see cref="T:System.ServiceModel.FaultReasonText" /> objects that correspond to fault descriptions in different languages. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReason" /> class using the specified fault description. </summary>
      <param name="text">A description of the reason the fault occurred. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Gets the fault description in the language used by the current thread. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultReasonText" /> object that contains the fault description. </returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Gets the fault description in the specified language. </summary>
      <returns>The fault text in the specified language.</returns>
      <param name="cultureInfo">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the language of the fault description. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Globalization.CultureInfo" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Returns the fault reason as a string.</summary>
      <returns>A string containing the reason for the fault.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>Gets a collection of fault descriptions in different languages. </summary>
      <returns>A collection of <see cref="T:System.ServiceModel.FaultReasonText" /> objects, where each object describes the fault in a different language. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Represents the text of the reason of a SOAP fault.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReasonText" /> class that uses the specified fault text.</summary>
      <param name="text">The text that is the SOAP fault reason.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.Globalization.CultureInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReasonText" /> class that uses the specified SOAP fault text and the specified <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <param name="text">The text that is the reason of the SOAP fault.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> describing the language of the description.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReasonText" /> class.</summary>
      <param name="text">The text of the fault reason.</param>
      <param name="xmlLang">The language of the fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Returns a value that indicates whether the language of the description matches provided <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <returns>true if the specified <see cref="T:System.Globalization.CultureInfo" /> matches; otherwise, false.</returns>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> object to compare with the language of the description.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Gets the text of the SOAP fault reason.</summary>
      <returns>The text of the SOAP fault reason.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Gets the language of the SOAP fault reason.</summary>
      <returns>The language of the SOAP fault reason.</returns>
    </member>
    <member name="T:System.ServiceModel.FederatedMessageSecurityOverHttp">
      <summary>Configures the message-level security of the WSFederationHttpBinding binding.</summary>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite">
      <summary>Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements">
      <summary>Gets a collection of the <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> instances for this binding.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />. The default is an empty collection.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType">
      <summary>Specifies the type of key to be issued.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />. The default is <see cref="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />.</exception>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType">
      <summary>Specifies the type of token which should be issued by the security token service.</summary>
      <returns>The type of token to be issued. The default is null, which causes WCF to request a SAML security token from the STS.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress">
      <summary>Gets or sets the endpoint address of the security token service that issues credentials for the service.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the security token service.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding">
      <summary>Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals <see cref="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> to be used by the client when communicating with the security token service.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress">
      <summary>Gets or sets the endpoint address for communicating with the security token service out of band.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> to be used when communicating with the security token service out of band.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential">
      <summary>Specifies whether a message level SSL negotiation is done to obtain the service’s certificate.</summary>
      <returns>true if the service certificate is negotiated; false if the service certificate is available out of band. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters">
      <summary>Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.HostNameComparisonMode">
      <summary>Specifies how the host name should be used in URI comparisons when dispatching an incoming message to a service endpoint.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard">
      <summary>Ignores the hostname when dispatching incoming messages to this endpoint. This is the default value.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.Exact">
      <summary>Uses the hostname when dispatching incoming messages to this endpoint, if no strong match was found.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.WeakWildcard">
      <summary>If no strong or exact match was found, ignores the hostname when matching.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpClientCredentialType">
      <summary>Enumerates the valid credential types for HTTP clients.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Basic">
      <summary>Specifies Basic authentication. For more information, see RFC 2617 – HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Digest">
      <summary>Specifies Digest authentication. For more information, see RFC 2617 – HTTP Authentication: Basic and Digest Authentication. </summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Ntlm">
      <summary>Specifies client authentication using NTLM.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Windows">
      <summary>Specifies client authentication using Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Certificate">
      <summary>Specifies client authentication using a certificate.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpProxyCredentialType">
      <summary>Enumerates the valid credential types for HTTP proxy authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Basic">
      <summary>Specifies basic authentication. For more information, see RFC 2617 – HTTP Authentication: Basic and Digest Authentication. </summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Digest">
      <summary>Specifies digest authentication. For more information, see RFC 2617 – HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Ntlm">
      <summary>Specifies NTLM authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Windows">
      <summary>Specifies Windows authentication.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpTransportSecurity">
      <summary>Represents the transport-level security settings for the <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType">
      <summary>Gets or sets the type of client credential to be used for authentication.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.HttpClientCredentialType" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Setting the property to an undefined value.</exception>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType">
      <summary>Gets or sets the type of client credential to be used for authentication against the proxy.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.HttpProxyCredentialType" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Setting the property to an undefined value.</exception>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.Realm">
      <summary>Gets or sets the authentication realm for digest or basic authentication.</summary>
      <returns>The authentication realm. The default value is "".</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Defines the behavior of outbound request and request/reply channels used by client applications.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Gets or sets a value indicating whether <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> attempts to call the <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> objects in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> property or throws if that collection is not empty. </summary>
      <returns>true if Windows Communication Foundation (WCF) is permitted to invoke interactive channel initializers; otherwise, false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>An asynchronous call to begin using a user interface to obtain credential information.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</returns>
      <param name="callback">The method that is called when this method completes.</param>
      <param name="state">Information about the state of the channel.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Gets a value indicating whether a call was done to a user interface to obtain credential information. </summary>
      <returns>true if the <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> method was called (or the <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> and <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> methods; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>A call to a user interface to obtain credential information.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Called when the call to <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> has finished.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Reserved. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Gets the URI that contains the transport address to which messages are sent on the client channel.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the channel.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Defines the contract for the basic state machine for all communication-oriented objects in the system, including channels, the channel managers, factories, listeners, and dispatchers, and service hosts.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Causes a communication object to transition immediately from its current state into the closed state.  </summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object with a specified timeout.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Causes a communication object to transition from its current state into the closed state.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default close timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Causes a communication object to transition from its current state into the closed state.  </summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Occurs when the communication object completes its transition from the closing state into the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Occurs when the communication object first enters the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> method.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" /> method.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Occurs when the communication object first enters the faulted state.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Causes a communication object to transition from the created state into the opened state.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Occurs when the communication object completes its transition from the opening state into the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Occurs when the communication object first enters the opening state.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Gets the current state of the communication-oriented object.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Defines the interface for the context control of a channel.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Gets or sets a value that instructs Windows Communication Foundation (WCF) to store a set of messages before giving the messages to the transport.</summary>
      <returns>true if the batching of outgoing messages is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Gets the input session for the channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IInputSession" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Gets the local endpoint for the channel.</summary>
      <returns>The local <see cref="T:System.ServiceModel.EndpointAddress" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Gets or sets the time period within which an operation must complete or an exception is thrown.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the time period within which an operation must complete.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Gets the output session associated with the channel, if any.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IOutputSession" /> implementation if an input session exists; otherwise, null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Gets the remote address associated with the channel.</summary>
      <returns>The remote <see cref="T:System.ServiceModel.EndpointAddress" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Returns an identifier for the current session, if any.</summary>
      <returns>The current session identifier, if any.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Gets the interval of time after which the close method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the close method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Gets the interval of time after which the open method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the open method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Gets the interval of time after which the receive method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the receive method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Gets the interval of time after which the send method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the send method to time out.</returns>
    </member>
    <member name="T:System.ServiceModel.IDuplexContextChannel">
      <summary>Defines the interface a client channel must implement to exchange messages in a duplex session. </summary>
    </member>
    <member name="P:System.ServiceModel.IDuplexContextChannel.AutomaticInputSessionShutdown">
      <summary>Gets or sets a value that indicates whether the input session is shutdown automatically.</summary>
      <returns>true if the input session is shutdown automatically; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close an output session on the client that has a specified time out and state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation close completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
    </member>
    <member name="P:System.ServiceModel.IDuplexContextChannel.CallbackInstance">
      <summary>Gets or sets the instance context associated with the duplex message exchange.</summary>
      <returns>The <see cref="T:System.ServiceModel.InstanceContext" /> associated with the duplex message exchange.</returns>
    </member>
    <member name="M:System.ServiceModel.IDuplexContextChannel.CloseOutputSession(System.TimeSpan)">
      <summary>Closes the output session on the client associated with the duplex channel. </summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.IDuplexContextChannel.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close an output session on the client.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Enable an object to participate in custom behavior, such as registering for events, or watching state transitions.</summary>
      <typeparam name="T">The type of the extension class.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Gets a collection of extension objects for this extensible object.</summary>
      <returns>A <see cref="T:System.ServiceModel.IExtensionCollection`1" /> of extension objects.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Enables an object to extend another object through aggregation.</summary>
      <typeparam name="T">The object that participates in the custom behavior.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Enables an extension object to find out when it has been aggregated. Called when the extension is added to the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Enables an object to find out when it is no longer aggregated. Called when an extension is removed from the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>A collection of the <see cref="T:System.ServiceModel.IExtension`1" /> objects that allow for retrieving the <see cref="T:System.ServiceModel.IExtension`1" /> by its type.</summary>
      <typeparam name="T">The type of the extension objects.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Finds the specified extension object in the collection.</summary>
      <returns>The extension object that was found.</returns>
      <typeparam name="E">The type of extension object.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Finds all extension object in the collection specified by <paramref name="E" />.</summary>
      <returns>A collection of all extension objects in the collection that implement the specified type.</returns>
      <typeparam name="E">The type of extension object.</typeparam>
    </member>
    <member name="T:System.ServiceModel.ImpersonationOption">
      <summary>Specifies the impersonation behavior for a service operation on a service instance.</summary>
    </member>
    <member name="F:System.ServiceModel.ImpersonationOption.NotAllowed">
      <summary>Impersonation is not performed. If <see cref="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations" /> is equal to true, a validation exception occurs at service startup time.</summary>
    </member>
    <member name="F:System.ServiceModel.ImpersonationOption.Allowed">
      <summary>Impersonation is performed if credentials are available and <see cref="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations" /> is equal to true.</summary>
    </member>
    <member name="F:System.ServiceModel.ImpersonationOption.Required">
      <summary>Impersonation is required. </summary>
    </member>
    <member name="T:System.ServiceModel.InstanceContext">
      <summary>Represents the context information for a service instance.</summary>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class for a specified object that implements the service instance.</summary>
      <param name="implementation">The object that implements the service instance.</param>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class for a service hosted by a specified host.</summary>
      <param name="host">The <see cref="T:System.ServiceModel.ServiceHostBase" /> that hosts the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class for a specified object that implements the service instance and is hosted by a specified host.</summary>
      <param name="host">The <see cref="T:System.ServiceModel.ServiceHostBase" /> that hosts the service.</param>
      <param name="implementation">The object that implements the service instance.</param>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.Extensions">
      <summary>Gets the extension collection, if any, associated with the service instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.IExtensionCollection`1" /> of type <see cref="T:System.ServiceModel.InstanceContext" /> that contains the instance contexts for the extensions of the service instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The service instance associated with this context is closed, but was not aborted.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance associated with this context is in a faulted state.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance">
      <summary>Returns the instance of the service for the instance context.</summary>
      <returns>The object that represents the service instance.</returns>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state or is not initialized.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance is aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)">
      <summary>Returns the instance of the service for the instance context in response to an incoming message.</summary>
      <returns>The object that represents the service instance.</returns>
      <param name="message">The incoming message that triggered the creation of a service object.</param>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state or is not initialized.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance is aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.Host">
      <summary>Gets the host for the service instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.ServiceHostBase" /> that hosts the service instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The service instance associated with this context is closed, but was not aborted.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance associated with this context is in a faulted state.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.IncomingChannels">
      <summary>Gets the sessionful channels that are incoming to the service instance.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> that contains the sessionful channels incoming to the service instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The service instance is closed and cannot be used.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is in a faulted state.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(System.Int32)">
      <summary>Increases the number of messages that can be processed by the service instance.</summary>
      <returns>The new limit on the number of messages, after <paramref name="incrementBy" /> is added, that can be processed by the service instance.</returns>
      <param name="incrementBy">The additional number of messages that can be processed by the service instance.</param>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.ManualFlowControlLimit">
      <summary>Gets or sets a limit on the number of messages that can be processed by the instance context.  </summary>
      <returns>The number of messages that can be processed by the instance context. </returns>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.OutgoingChannels">
      <summary>Gets the sessionful channels that are outgoing from the service instance.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> that contains the sessionful channels outgoing from the service instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The service instance is closed and cannot be used.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is in a faulted state.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.ReleaseServiceInstance">
      <summary>Releases the service instance.</summary>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state and cannot be used.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance has been aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance is closing or has been closed already and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.SynchronizationContext">
      <summary>Gets or sets the context used for thread synchronization with the current instance context.</summary>
      <returns>The <see cref="T:System.Threading.SynchronizationContext" /> used for thread synchronization with the current instance context.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is opened or closing and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The communication object has been aborted and cannot be modified in these states.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="T:System.ServiceModel.InstanceContextMode">
      <summary>Specifies the number of service instances available for handling calls that are contained in incoming messages.</summary>
    </member>
    <member name="F:System.ServiceModel.InstanceContextMode.PerSession">
      <summary>A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created for each session.</summary>
    </member>
    <member name="F:System.ServiceModel.InstanceContextMode.PerCall">
      <summary>A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created prior to and recycled subsequent to each call. If the channel does not create a session this value behaves as if it were <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</summary>
    </member>
    <member name="F:System.ServiceModel.InstanceContextMode.Single">
      <summary>Only one <see cref="T:System.ServiceModel.InstanceContext" /> object is used for all incoming calls and is not recycled subsequent to the calls. If a service object does not exist, one is created.</summary>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Represents a message contract that is not valid.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class when deserializing from a stream into an object.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The stream from which to deserialize.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class using the specified message.</summary>
      <param name="message">The message for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class that uses the specified message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:System.ServiceModel.IOnlineStatus">
      <summary>Defines the properties and events used by network-enabled objects to indicate network availability.</summary>
    </member>
    <member name="P:System.ServiceModel.IOnlineStatus.IsOnline">
      <summary>Gets whether the instance has network connectivity and is connected to a resource.</summary>
      <returns>True if the current instance is available on the network; false if it is not.</returns>
    </member>
    <member name="E:System.ServiceModel.IOnlineStatus.Offline">
      <summary>Signals that the instance has disconnected from a network resource.</summary>
    </member>
    <member name="E:System.ServiceModel.IOnlineStatus.Online">
      <summary>Signals that the instance has connected to a network resource.</summary>
    </member>
    <member name="T:System.ServiceModel.IServiceChannel">
      <summary>Defines the interface for a service channel.</summary>
    </member>
    <member name="P:System.ServiceModel.IServiceChannel.ListenUri">
      <summary>Gets the URI at which the service listens for incoming requests.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the service listens for incoming requests on the channel.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Specifies that a member is serialized as an element inside the SOAP body.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Gets or sets a value that indicates the position in which the member is serialized into the SOAP body.</summary>
      <returns>The location of the element in the SOAP body.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value passed to the property setter is a negative integer.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Defines a strongly-typed class that corresponds to a SOAP message.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.HasProtectionLevel">
      <summary>Gets a value that indicates whether the message has a protection level. </summary>
      <returns>true if the message must be encrypted, signed, or both; otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Gets or sets a value that specifies whether the message body has a wrapper element.</summary>
      <returns>true if the message body has a wrapper element; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.ProtectionLevel">
      <summary>Gets or sets a value that specified whether the message must be encrypted, signed, or both. </summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value passed to the property when the setting is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. </exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Gets or sets the name of the wrapper element of the message body.</summary>
      <returns>The name of the wrapper element in the message body.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Gets or sets the namespace of the message body wrapper element.</summary>
      <returns>The wrapper element namespace.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Declares the base members for <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> and <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel">
      <summary>When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned. </summary>
      <returns>true if the member has a protection level; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Specifies the name of the element that corresponds to this member. </summary>
      <returns>The name of the element that corresponds to this member. This string must be a valid XML element name. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Specifies the namespace of the element that corresponds to this member. </summary>
      <returns>A namespace URI of the element that corresponds to this member. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
      <summary>Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted. </summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageCredentialType">
      <summary>Enumerates the valid message credential types.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Windows">
      <summary>Specifies client authentication using Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.UserName">
      <summary>Specifies client authentication using UserName.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Certificate">
      <summary>Specifies client authentication using a certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <summary>Specifies client authentication using an issued token.</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeader`1">
      <summary>Represents the content of a SOAP header.</summary>
      <typeparam name="T">The message header type.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeader`1" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeader`1" /> class with the specified header content.</summary>
      <param name="content">The content of the new header.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeader`1" /> class with the specified header content and metadata. </summary>
      <param name="content">The content of the new header.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
      <param name="relay">A value that indicates whether the header should be relayed.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Actor">
      <summary>Gets or sets the targeted recipient of the message header.</summary>
      <returns>The targeted recipient of the message header. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Content">
      <summary>Gets or sets the content of the header.</summary>
      <returns>The content of the header.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <summary>Gets the message header with the specified namespace and local name.</summary>
      <returns>A message header with the specified namespace and local name.</returns>
      <param name="name">The local name of the header XML element</param>
      <param name="ns">The namespace URI of the header XML element.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <summary>Gets or sets a value that indicates whether the header must be understood, as stated in the SOAP 1.1/1.2 specification. </summary>
      <returns>true if the header must be understood; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Relay">
      <summary>Gets a value that indicates whether the header should be relayed.</summary>
      <returns>true if the header should be relayed; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderArrayAttribute">
      <summary>Specifies that the default wrapper element in the SOAP message must not be written around array types in a header element.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderArrayAttribute" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderAttribute">
      <summary>Specifies that a data member is a SOAP message header.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.Actor">
      <summary>Gets or sets a URI that indicates the node at which this header is targeted. Maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used. </summary>
      <returns>A URI that indicates the node at which this header is targeted. This URI maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand">
      <summary>Specifies whether the node acting in the <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> role must understand this header. This is mapped to the mustUnderstand SOAP header attribute.</summary>
      <returns>true if the node acting in the <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> role must understand this header; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.Relay">
      <summary>Specifies whether this header is to be relayed to downstream nodes. This is mapped to the relay SOAP header attribute.</summary>
      <returns>true if this header is to be relayed to downstream nodes; otherwise, false. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class used to deserialize data into a <see cref="T:System.ServiceModel.MessageHeaderException" /> object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class with the specified message.</summary>
      <param name="message">The message carried in the exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.</summary>
      <param name="message">The exception message.</param>
      <param name="isDuplicate">true if the multiple message header is a duplicate; false if there are no message headers.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message and the inner exception that caused the exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that contains the inner exception that caused the exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
      <param name="isDuplicate">true if the multiple message header is a duplicate; false if there are no message headers.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
      <param name="isDuplicate">true if the multiple message header is a duplicate; false if there are no message headers.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that contains the inner exception that caused the exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace, and the inner exception that caused the exception.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that contains the inner exception that caused the exception.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Gets the name of the SOAP header that caused the exception.</summary>
      <returns>The name of the SOAP header.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Gets the namespace of the SOAP header that caused the exception.</summary>
      <returns>The namespace of the SOAP header.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Gets a value that indicates whether there are multiple message headers or no message headers.</summary>
      <returns>true if the multiple message header is a duplicate; false if there are no message headers.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Controls the name of the request and response parameter names. Cannot be used with <see cref="T:System.ServiceModel.Channels.Message" /> or message contracts.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageParameterAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Obtains or sets the name attribute of the parameter in the XML Schema (XSD).</summary>
      <returns>The name attribute of the parameter in the XSD.</returns>
    </member>
    <member name="T:System.ServiceModel.MessagePropertyAttribute">
      <summary>Represents data that is passed locally with a custom message type but not serialized into a SOAP message.</summary>
    </member>
    <member name="M:System.ServiceModel.MessagePropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessagePropertyAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessagePropertyAttribute.Name">
      <summary>Gets or sets the name of the property.</summary>
      <returns>The name of the <see cref="T:System.ServiceModel.MessagePropertyAttribute" /> attribute.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverHttp">
      <summary>Enables setting message-level security properties on the wsDualHttpBinding binding.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite">
      <summary>Specifies the algorithm suite used for security messages at the SOAP level. </summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType">
      <summary>Specifies the type of client credential used for client authentication in the wsHttpBinding or wsDualHttpBinding bindings.</summary>
      <returns>A <see cref="T:System.ServiceModel.MessageCredentialType" />. The default is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> is not a valid <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled">
      <summary>Only used in extensibility scenarios to indicate whether an instance of a class derived from <see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> is configured to perform secure conversation as described in WS-SecurityConversation. </summary>
      <returns>Always returns true, unless overridden in a derived class.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential">
      <summary>Gets or sets a value that indicates whether the service credential is provisioned at the client out of band or is obtained from the service through a process of negotiation.</summary>
      <returns>true if service credential is obtained through a process of negotiation; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverMsmq">
      <summary>Enables setting message-level security properties on the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite">
      <summary>Specifies the algorithm suite used for security messages at the SOAP level.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> setting for messages sent over the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MessageCredentialType" /> security setting for messages sent over the MSMQ transport.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageCredentialType" /> security setting for messages sent over the MSMQ transport.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverTcp">
      <summary>Configures the message-level security for a message sent using the TCP transport. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite">
      <summary>Specifies the algorithm suite to be used for securing messages at the SOAP level. </summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType">
      <summary>Specifies the type of client credential the client uses to authenticate itself to the service at the SOAP level. </summary>
      <returns>A <see cref="T:System.ServiceModel.MessageCredentialType" />. The default is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType" /> is not a valid <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityVersion">
      <summary>An abstract container class that, when implemented by several of its static properties, contains version information for security components. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.BasicSecurityProfileVersion">
      <summary>Gets the version information for the Basic Security Profile.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.BasicSecurityProfileVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.Default">
      <summary>Gets the version information for default message security.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityTokenVersion">
      <summary>Gets the security token version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityVersion">
      <summary>Gets the WS-Security version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <summary>Gets the message security version that requires the Basic Security Profile 1.0 based on WS-Security 1.0, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11">
      <summary>Gets the message security version that requires the WS-Security 1.1, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <summary>Gets the message security version that requires the Basic Security Profile based on WS-Security 1.1, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqAuthenticationMode">
      <summary>Specifies the type of authentication used for the binding.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqAuthenticationMode.None">
      <summary>No security is used with this binding.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqAuthenticationMode.WindowsDomain">
      <summary>Kerberos is used for authentication. The client and server must be joined to a trusted domain.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqAuthenticationMode.Certificate">
      <summary>The client is authenticated using X.509 certificates. The client certificate must be present in the certificate store of the server.</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqBindingBase">
      <summary>The base class for <see cref="T:System.ServiceModel.NetMsmqBinding" /> and <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqBindingBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqBindingBase" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue">
      <summary>Gets or sets a URI that contains the location of the dead-letter queue for each application, where messages that have expired or that have failed transfer or delivery are placed.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the location of the dead-letter queue for each application. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue">
      <summary>Gets or sets an enumeration value that indicates the type of dead-letter queue to use.</summary>
      <returns>A <see cref="T:System.ServiceModel.DeadLetterQueue" /> enumeration value that indicates the type of dead-letter queue to use.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.Durable">
      <summary>Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile.</summary>
      <returns>true if the messages processed by this binding are durable; false if they are volatile. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce">
      <summary>Gets or sets a value that indicates whether messages processed by this binding are received exactly once.</summary>
      <returns>true if messages processed by this binding are received exactly once; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that is processed by this binding.</summary>
      <returns>The maximum size (in bytes) for a message that is processed by this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles">
      <summary>Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</summary>
      <returns>The maximum number of retry cycles to attempt delivery of messages to the application. The default value is 2.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling">
      <summary>Gets or sets an enumeration value that specifies how poison messages are handled.</summary>
      <returns>A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and other messages that cannot be dispatched are handled.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount">
      <summary>Gets or sets the maximum number of immediate delivery attempts on a message that is read from the application queue.</summary>
      <returns>The maximum number of immediate delivery attempts. The default is 5.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay">
      <summary>Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that cannot be delivered immediately.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application. The default value is 10 minutes.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.Scheme">
      <summary>Returns the scheme for this binding.</summary>
      <returns>The scheme for this binding. The scheme returned depends on the implementation of <see cref="T:System.ServiceModel.MsmqBindingBase" />. The <see cref="T:System.ServiceModel.NetMsmqBinding" /> implementation returns "net.msmq". The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> implementation returns "msmq.formatname".</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</summary>
      <returns>true if requests can be handled more efficiently synchronously; otherwise false. The default is false, to handle requests asynchronously.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.TimeToLive">
      <summary>Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that indicates how long the messages can be in the queue before they expire. The default value is 1 day.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing">
      <summary>Gets or sets a value that indicates whether messages processed by this binding should be traced.</summary>
      <returns>true if messages processed by this binding should be traced; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal">
      <summary>Gets or sets a value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</summary>
      <returns>true if copies of messages processed by this binding should be stored in the source journal queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqEncryptionAlgorithm">
      <summary>Contains the set of encryption algorithms that can be used to encrypt messages on the wire.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqEncryptionAlgorithm.RC4Stream">
      <summary>A stream cipher defined by RSA Security.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqEncryptionAlgorithm.Aes">
      <summary>The Advanced Encryption Standard (AES) defined by the National Institute of Standards and Technology (NIST).</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqException">
      <summary>Encapsulates errors returned by Message Queuing (MSMQ). This exception is thrown by the Message Queuing transport and the Message Queuing integration channel.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class with additional serialized information about the exception.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized data associated with the <see cref="T:System.ServiceModel.MsmqException" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the <see cref="T:System.ServiceModel.MsmqException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class with the message provided.</summary>
      <param name="message">The message with which to initialize the new instance.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class with the message and inner exception provided.</summary>
      <param name="message">The message with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</param>
      <param name="inner">The inner exception to be encapsulated by the new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class with the message and error code provided.</summary>
      <param name="message">The message with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</param>
      <param name="error">The error code, returned by the Message Queuing (MSMQ) infrastructure, with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</param>
    </member>
    <member name="T:System.ServiceModel.MsmqPoisonMessageException">
      <summary>Encapsulates the exception that is thrown when the channel detects that the message is a poison message.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class by using the specified lookup ID of the poison message.</summary>
      <param name="messageLookupId">The lookup ID of the poison message.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class by using the specified lookup ID of the poison message, and the inner exception.</summary>
      <param name="messageLookupId">The lookup ID of the poison message.</param>
      <param name="innerException">The inner exception to be encapsulated by the new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class with additional serialized information about the exception.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that holds the serialized data associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the source and destination of the serialized stream associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class by using the specified message text.</summary>
      <param name="message">The message with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class by using the specified message text and the inner exception.</summary>
      <param name="message">The message with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</param>
      <param name="innerException">The inner exception to be encapsulated by the new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Retrieves the serialized data associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />, and the source and destination of the serialized stream associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance to hold the serialized data associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance to hold the source and destination of the serialized stream associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
    </member>
    <member name="P:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId">
      <summary>Gets the lookup ID of the poison message.</summary>
      <returns>The lookup ID of the poison message.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqSecureHashAlgorithm">
      <summary>Contains the hashing algorithms that Message Queuing (MSMQ) can use to sign messages.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.MD5">
      <summary>The Message Digest Algorithm 5 (MD5).</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha1">
      <summary>The Secure Hash Algorithm (SHA-1).</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha256">
      <summary>The SHA-256 algorithm.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha512">
      <summary>The SHA 512 algorithm.</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqTransportSecurity">
      <summary>The <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class encapsulates the transport security settings for queued transports.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqTransportSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqTransportSecurity.#ctor(System.ServiceModel.MsmqTransportSecurity)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class, using an existing instance.</summary>
      <param name="other">The existing instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class, to be used in initializing the new instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqAuthenticationMode" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqAuthenticationMode" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of <see cref="T:System.ServiceModel.MsmqAuthenticationMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqEncryptionAlgorithm">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel">
      <summary>Gets or sets the <see cref="T:System.Net.Security.ProtectionLevel" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqSecureHashAlgorithm">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" /> values.</exception>
    </member>
    <member name="T:System.ServiceModel.NamedPipeTransportSecurity">
      <summary>Provides properties that control protection level for a named pipe.</summary>
    </member>
    <member name="P:System.ServiceModel.NamedPipeTransportSecurity.ProtectionLevel">
      <summary>Specifies the protection for the named pipe.</summary>
      <returns>A <see cref="T:System.Net.Security.ProtectionLevel" />. The default is <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
    </member>
    <member name="T:System.ServiceModel.NetMsmqBinding">
      <summary>Represents a queued binding that is suitable for cross-machine communication.</summary>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetMsmqBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.#ctor(System.ServiceModel.NetMsmqSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetMsmqBinding" /> class using the specified security mode.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> with which to initialize the new instance.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> values.</exception>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetMsmqBinding" /> class from the settings of a specified configuration binding element.</summary>
      <param name="configurationName">The value of the configurationName attribute that identifies the binding element whose settings are used to initialize the binding.</param>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered collection of binding elements described by the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The default value is SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory that is allocated for use by the message buffer manager that receives messages from the channel.</summary>
      <returns>The maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524288 (0x80000) bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.QueueTransferProtocol">
      <summary>Gets or sets an enumeration value that indicates the queued communication channel transport that this binding uses.</summary>
      <returns>A <see cref="T:System.ServiceModel.QueueTransferProtocol" /> enumeration value that indicates the transport between queue managers that this binding uses.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.Security">
      <summary>Gets the <see cref="T:System.ServiceModel.NetMsmqSecurity" /> that is associated with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetMsmqSecurity" /> that is associated with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.UseActiveDirectory">
      <summary>Returns a Boolean value that indicates whether queue addresses should be converted using Active Directory.</summary>
      <returns>true if queue addresses should be converted using Active Directory; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.NetMsmqSecurity">
      <summary>The <see cref="T:System.ServiceModel.NetMsmqSecurity" /> class encapsulates the MSMQ security features available when using the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
    </member>
    <member name="P:System.ServiceModel.NetMsmqSecurity.Message">
      <summary>Gets the <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqSecurity.Mode">
      <summary>Gets the <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not one of <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.NetMsmqSecurity.Transport">
      <summary>Gets the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="T:System.ServiceModel.NetMsmqSecurityMode">
      <summary>The <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> enumeration specifies security modes that can be used by the MSMQ transport.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.None">
      <summary>Disables both MSMQ transport security and SOAP security.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.Transport">
      <summary>Enables MSMQ transport security.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.Message">
      <summary>Enables SOAP security.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.Both">
      <summary>Enables both MSMQ transport security and SOAP security.</summary>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeBinding">
      <summary>Provides a secure and reliable binding that is optimized for on-machine communication.</summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class with a specified security mode.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> value that specifies whether Windows security is used with named pipes.</param>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class with a specified configuration name.</summary>
      <param name="configurationName">The binding configuration name for the netNamedPipeBinding Element.</param>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding. </summary>
      <returns>
        <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum number of bytes that are used to buffer incoming messages in memory.</summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize">
      <summary>Gets or sets the maximum number of bytes used to buffer incoming messages in memory.  </summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections">
      <summary>Gets or sets the maximum number of connections, both inbound and outbound, that are allowed to endpoints configured with the named pipe binding.</summary>
      <returns>The maximum number of named pipe connections that are allowed with this binding. The default value is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
      <returns>The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>Returns "net.pipe".</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.Security">
      <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetNamedPipeSecurity" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />. </returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>false to indicate that the incoming requests are handled asynchronously.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransactionFlow">
      <summary>Gets or sets a value that determines whether transactions should be flowed to the service.</summary>
      <returns>true if the client’s transactions should be flowed to the service; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol">
      <summary>Gets or sets the transactions protocol used by the service to flow transactions.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransactionProtocol" /> used by the service to flow transactions. The default protocol is <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer. The default is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeSecurity">
      <summary>Provides access to the security settings for endpoints configured with the named pipe binding.</summary>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeSecurity.Mode">
      <summary>Gets or sets the security mode for the named pipe binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> for the named pipe binding. The default value is <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeSecurity.Transport">
      <summary>Gets the transport security for the named pipe binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.NamedPipeTransportSecurity" /> for the named pipe binding.</returns>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeSecurityMode">
      <summary>Specifies whether transport-level security is used with named pipes.</summary>
    </member>
    <member name="F:System.ServiceModel.NetNamedPipeSecurityMode.None">
      <summary>Indicates no security is used with the named pipe transport.</summary>
    </member>
    <member name="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport">
      <summary>Indicates that transport-level security is used with the named pipe transport.</summary>
    </member>
    <member name="T:System.ServiceModel.NetPeerTcpBinding">
      <summary>Provides a secure binding for peer-to-peer network applications.</summary>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class with a specified configuration name. </summary>
      <param name="configurationName">The value of the configurationName attribute that identifies the binding element whose settings are used to initialize the binding.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The configuration is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion">
      <summary>Gets the SOAP version used with this binding.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> that specifies the version of SOAP to use with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable">
      <summary>Gets whether the PNRP service is installed and available on the computer.</summary>
      <returns>true if PNRP is installed and configured; false if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress">
      <summary>Gets or sets the IP address used for listening by the local peer node.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening.</returns>
      <exception cref="T:System.ArgumentException">The provided address is invalid or incorrectly formed.</exception>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size of the memory pool used for the peer TCP buffer.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size of TCP messages handled by peer channels created by this binding.</summary>
      <returns>
        <see cref="T:System.Int32" /> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding. The default value is 65,536 (64 KB).</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Port">
      <summary>Gets or sets the network port on which to bind.</summary>
      <returns>A <see cref="T:System.Int32" /> value that represents the network port on which this binding instance will process peer-specific TCP messages. </returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</returns>
      <exception cref="T:System.ArgumentNullException">The application attempted to set this property to null.</exception>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Resolver">
      <summary>Gets the <see cref="T:System.ServiceModel.PeerResolver" /> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh.</summary>
      <returns>A <see cref="T:System.ServiceModel.PeerResolver" /> used to resolve a peer mesh ID to a set of <see cref="T:System.ServiceModel.PeerNodeAddress" /> instances representing several nodes participating in the mesh.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Scheme">
      <summary>Gets the URI scheme used for the transport protocol associated with this binding.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the URI scheme for the specific transport protocol used for this binding. </returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Security">
      <summary>Gets and sets the security to set on peer channels created by this binding.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerSecuritySettings" /> enumeration value that indicates the security to set on peer channels created by this binding. Security can be either message- or transport-specific.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously.</summary>
      <returns>If true, incoming requests are handled synchronously; if false, they are handled asynchronously. The default value is false, with requests handled asynchronously.</returns>
    </member>
    <member name="T:System.ServiceModel.NetTcpBinding">
      <summary>A secure, reliable binding suitable for cross-machine communication.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with the type of security used specified.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.SecurityMode" /> value that specifies the type of security used with the binding.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with the type of security used specified and with a value that indicates whether reliable sessions are explicitly enabled.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.SecurityMode" /> value that specifies the type of security used with the binding.</param>
      <param name="reliableSessionEnabled">true if reliable sessions are enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with a specified configuration name.</summary>
      <param name="configurationName">The binding configuration name for the netTcpBinding element.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding. </summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value is SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.HostnameComparisonMode" /> values that indicates whether the hostname is used to reach the service when matching the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ListenBacklog">
      <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
      <returns>Returns the maximum number of queued connection requests that can be pending. The default is 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value cannot be less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</summary>
      <returns>The maximum size allowed for a buffer pool that stores TCP messages processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxBufferSize">
      <summary>Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
      <returns>The maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxConnections">
      <summary>Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.</summary>
      <returns>On the client, the maximum number of connections to be pooled for subsequent reuse; on the server, the maximum number of connections allowed to be pending dispatch.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
      <returns>The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.PortSharingEnabled">
      <summary>Gets or sets a value that indicates whether TCP port sharing is enabled for the connection configured with this binding.</summary>
      <returns>true if TCP port sharing is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on soap messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ReliableSession">
      <summary>Gets an object that indicates whether a reliable session is established between channel endpoints.</summary>
      <returns>An <see cref="T:System.ServiceModel.OptionalReliableSession" /> that indicates whether a WS-RM reliable session is established between channel endpoints. The default value for <see cref="P:System.ServiceModel.OptionalReliableSession.Enabled" /> is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>The URI scheme for the transport, which is "net.tcp".</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.Security">
      <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetTcpSecurity" /> that contains the types of security used with this binding. The default mode of security for the NetTCPBinding is <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>true if incoming requests are handled synchronously; false.if incoming requests are handled asynchronously. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransactionFlow">
      <summary>Gets or sets a value that determines whether transaction flow is enabled.</summary>
      <returns>true if transaction flow is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransactionProtocol">
      <summary>Gets or sets the transactions protocol used by the service to flow transactions.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransactionProtocol" /> used by the service to flow transactions.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</returns>
    </member>
    <member name="T:System.ServiceModel.NetTcpSecurity">
      <summary>Specifies the types of transport-level and message-level security used by an endpoint configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Message">
      <summary>Gets the type of message-level security requirements for a service configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityOverTcp" /> that indicates the type of message-level security requirements for an endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Mode">
      <summary>Gets or sets whether message-level and transport-level security are used by an endpoint configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>A value of the <see cref="T:System.ServiceModel.SecurityMode" /> that indicates whether message-level or transport-level security are used by an endpoint. The default value is <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not defined.</exception>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Transport">
      <summary>Gets the type of message-level security requirements for an endpoint configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.TcpTransportSecurity" /> that indicates the type of transport-level security requirements for an endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.NonDualMessageSecurityOverHttp">
      <summary>Represents the security settings of the wsHttpBinding binding.</summary>
    </member>
    <member name="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext">
      <summary>Gets or sets a Boolean value that specifies whether a security context token is established.</summary>
      <returns>true if a security context token is established; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationBehaviorAttribute">
      <summary>Specifies the local execution behavior of a service method. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters">
      <summary>Gets or sets whether parameters are to be automatically disposed.</summary>
      <returns>true if the parameters are to be automatically disposed; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation">
      <summary>Gets or sets a value that indicates the level of caller impersonation that the operation supports.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.ImpersonationOption" /> values. The default is <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode">
      <summary>Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values. The default is <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values.</exception>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="description">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</param>
      <param name="parameters">Binding parameters passed to support binding behaviors.</param>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements the client operation behavior.</summary>
      <param name="description">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</param>
      <param name="proxy">The extensibility access point to insert custom client modifications for this operation.</param>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements the service operation behavior.</summary>
      <param name="description">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</param>
      <param name="dispatch">The extensibility point to insert custom service modifications for this operation.</param>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implements the validation behavior.</summary>
      <param name="description">The operation description to validate.</param>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete">
      <summary>Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.</summary>
      <returns>true to complete the transaction scope automatically on successful execution of the operation; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired">
      <summary>Gets or sets a value that indicates whether the method requires a transaction scope for its execution.</summary>
      <returns>true if the method requires a transaction scope to execute; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Provides access to the execution context of a service method.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContext" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> in a client application. </summary>
      <param name="channel">The <see cref="T:System.ServiceModel.IContextChannel" /> used to create a new client <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">The channel is null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Channel">
      <summary>Gets the channel associated with the current <see cref="T:System.ServiceModel.OperationContext" /> object.</summary>
      <returns>An <see cref="T:System.ServiceModel.IContextChannel" /> associated with the current <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Gets or sets the execution context for the current thread.</summary>
      <returns>The <see cref="T:System.ServiceModel.OperationContext" /> that represents the messaging and execution context of the current method.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.EndpointDispatcher">
      <summary>Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</summary>
      <returns>The endpoint dispatcher for the endpoint to inspect or modify.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Extensions">
      <summary>Gets the collection of service extensions from the current message context.</summary>
      <returns>A collection of extensions of <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
      <summary>Gets a channel to the client instance that called the current operation.</summary>
      <returns>A channel to the client instance that called the operation of the type specified in the <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> property.</returns>
      <typeparam name="T">The type of channel used to call back to the client.</typeparam>
    </member>
    <member name="P:System.ServiceModel.OperationContext.HasSupportingTokens">
      <summary>Gets a value that indicates whether the incoming message has supporting tokens.</summary>
      <returns>true if the incoming message has supporting tokens; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Host">
      <summary>Gets the <see cref="T:System.ServiceModel.ServiceHost" /> for the current service object.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceHost" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Gets the incoming message headers for the <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains the incoming message headers.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Gets the message properties for the incoming message in the <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the incoming message.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Gets the incoming SOAP message version for the <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>The SOAP version of the incoming message.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.InstanceContext">
      <summary>Gets the <see cref="T:System.ServiceModel.InstanceContext" /> object that manages the current service instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.InstanceContext" /> object for the current service.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>This property is intended for system use and should not be called by users.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Occurs when the operation has completed. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Gets the outgoing message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains outbound message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Gets the message properties for the outbound message in the active <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the outbound message.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation for this method.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation, or null if there is no request context.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> within which this method executes.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceSecurityContext" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.SessionId">
      <summary>Gets the <see cref="T:System.String" /> used to identify the current session.</summary>
      <returns>The session identifier.</returns>
    </member>
    <member name="M:System.ServiceModel.OperationContext.SetTransactionComplete">
      <summary>Commits the currently executing transaction.</summary>
      <exception cref="T:System.InvalidOperationException">There is no transaction in the context.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.SupportingTokens">
      <summary>Gets a <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</summary>
      <returns>A collection of security tokens.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Creates a block within which an <see cref="T:System.ServiceModel.OperationContext" /> object is in scope.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> to create a new <see cref="T:System.ServiceModel.OperationContext" /> for the scope.</summary>
      <param name="channel">The channel to use when creating the scope for a new <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class to create a scope for the specified <see cref="T:System.ServiceModel.OperationContext" /> object.</summary>
      <param name="context">The active <see cref="T:System.ServiceModel.OperationContext" /> in the created scope.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Restores the original <see cref="T:System.ServiceModel.OperationContext" /> to the active context and recycles the <see cref="T:System.ServiceModel.OperationContextScope" /> object.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Indicates that a method defines an operation that is part of a service contract in a Windows Communication Foundation (WCF) application. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Gets or sets the WS-Addressing action of the request message. </summary>
      <returns>The action to use in generating the WS-Addressing Action header.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Indicates that an operation is implemented asynchronously using a Begin&lt;methodName&gt; and End&lt;methodName&gt; method pair in a service contract. </summary>
      <returns>true if the Begin&lt;methodName&gt;method is matched by an End&lt;methodName&gt; method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
      <summary>Gets a value that indicates whether the messages for this operation must be encrypted, signed, or both.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> property is set to a value other than <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
      <summary>Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists). </summary>
      <returns>true if the operation is permitted to initiate a session on the server, otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Gets or sets a value that indicates whether an operation returns a reply message.</summary>
      <returns>true if this method receives a request message and returns no reply message; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
      <summary>Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</summary>
      <returns>true if the operation causes the server to close the session, otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Gets or sets the name of the operation.</summary>
      <returns>The name of the operation.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
      <summary>Gets or sets a value that specifies whether the messages of an operation must be encrypted, signed, or both. </summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Gets or sets the value of the SOAP action for the reply message of the operation.</summary>
      <returns>The value of the SOAP action for the reply message.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Represents the SOAP style that determines how the WSDL metadata for the service is formatted.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Causes the WSDL representation to contain a single element that represents the document that is exchanged for the operation.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Causes the WSDL representation of messages exchanged for an operation and contains parameters as if it were a remote procedure call.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationFormatUse">
      <summary>Determines the format of the message.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatUse.Literal">
      <summary>Implies that the message is a literal instance of the schema in the WSDL.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatUse.Encoded">
      <summary>Implies that the schemas in the WSDL are abstract specifications that are encoded according to the rules found in SOAP 1.1 section 5.</summary>
    </member>
    <member name="T:System.ServiceModel.OptionalReliableSession">
      <summary>Provides convenient access to whether a reliable session is enabled when using one of the predefined bindings where it is optional.</summary>
    </member>
    <member name="M:System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OptionalReliableSession" /> class from a reliable session binding element.</summary>
      <param name="reliableSessionBindingElement">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property value is used to initialize the reliable session.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="reliableSessionBindingElement" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.OptionalReliableSession.Enabled">
      <summary>Gets or sets a value that indicates whether the reliable session is enabled.</summary>
      <returns>true if the reliable session is enabled; otherwise, false. The default value depends on the binding being used.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerHopCountAttribute">
      <summary>Specifies the peer hop count member of a SOAP message header block.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerHopCountAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerHopCountAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Actor">
      <summary>Gets the URI that indicates the node at which this header is targeted.</summary>
      <returns>
        <see cref="T:System.String" /> value that contains the name of the actor node at which this header value is targeted.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.MustUnderstand">
      <summary>Specifies whether the node acting in the <see cref="P:System.ServiceModel.PeerHopCountAttribute.Actor" /> role must understand this header.</summary>
      <returns>True if the node acting in the <see cref="P:System.ServiceModel.PeerHopCountAttribute.Actor" /> role must understand this header; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Name">
      <summary>Specifies the name of the element that corresponds to the peer hop count member.</summary>
      <returns>
        <see cref="T:System.String" /> value that contains the names of the XML element in the SOAP message that corresponds to the peer hop count.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Namespace">
      <summary>Gets the namespace of the element that corresponds to the peer hop count member.</summary>
      <returns>
        <see cref="T:System.String" /> value that contains the namespace of the XML element in the SOAP message that corresponds to the peer hop count.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.ProtectionLevel">
      <summary>Gets whether the peer hop count member is to be transmitted as-is, signed, or signed and encrypted.</summary>
      <returns>
        <see cref="T:System.Net.Security.ProtectionLevel" /> enumeration value that indicates the security protection level. The default value is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Relay">
      <summary>Gets whether this peer hop count is relayed to downstream nodes.</summary>
      <returns>True if the peer hop count is relayed to downstream nodes; false if it is not.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerMessageOrigination">
      <summary>Indicates the network origin of a peer channel message.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessageOrigination.Local">
      <summary>The message originated on the local computer.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessageOrigination.Remote">
      <summary>The message originated from a remote computer.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerMessagePropagation">
      <summary>Indicates the recipient of a message sent over a peer channel.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.None">
      <summary>The recipient of the message is not known or available.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.Local">
      <summary>The message is intended for the local peer node.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.Remote">
      <summary>The message is intended for a remote peer node in the peer mesh.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.LocalAndRemote">
      <summary>The message is intended for both the local peer node and a remote peer node in the peer mesh.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerMessagePropagationFilter">
      <summary>Defines the base class for peer channel message filters.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerMessagePropagationFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerMessagePropagationFilter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerMessagePropagationFilter.ShouldMessagePropagate(System.ServiceModel.Channels.Message,System.ServiceModel.PeerMessageOrigination)">
      <summary>Returns whether or not a message received on a peer channel should be propagated, and if so, the destination of the message.</summary>
      <returns>A <see cref="T:System.ServiceModel.PeerMessagePropagation" /> enumeration value that indicates the destination of the message (local, remote, both, or no propagation at all).</returns>
      <param name="message">The message to evaluate for propagation. </param>
      <param name="origination">A <see cref="T:System.ServiceModel.PeerMessageOrigination" /> enumeration value that specifies the origin (local or remote) of the message under evaluation.</param>
    </member>
    <member name="T:System.ServiceModel.PeerNode">
      <summary>Defines the instance of of a peer node used by an application participating in a specific peer mesh.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerNode.IsOnline">
      <summary>Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.</summary>
      <returns>true if the peer node is online; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerNode.MessagePropagationFilter">
      <summary>Gets and sets a custom filter for messages received over the peer channel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerMessagePropagationFilter" /> that contains a custom message filter.</returns>
      <exception cref="T:System.InvalidOperationException">No channel is open for listening.</exception>
    </member>
    <member name="E:System.ServiceModel.PeerNode.Offline">
      <summary>Signals when the peer node goes offline from the peer mesh.</summary>
    </member>
    <member name="E:System.ServiceModel.PeerNode.Online">
      <summary>Signals when a peer node comes online within the peer mesh.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerNode.Port">
      <summary>Gets the network port on which the peer node is listening.</summary>
      <returns>
        <see cref="T:System.Int32" /> that specifies the network port on which the peer node is listening.</returns>
      <exception cref="T:System.InvalidOperationException">No channel is open for listening.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerNode.RefreshConnection">
      <summary>Refreshes the connection with the peer mesh.</summary>
      <exception cref="T:System.InvalidOperationException">No channel is open for listening.</exception>
      <exception cref="T:System.TimeOutException">The refresh operation timed out.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">A network error occurred during the refresh attempt.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The connection aborted during the refresh attempt.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The connection faulted during the refresh attempt.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerNode.ToString">
      <summary>Provides a string representation of a peer node.</summary>
      <returns>
        <see cref="T:System.String" /> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerNodeAddress">
      <summary>Specifies a type that contains the <see cref="T:System.ServiceModel.EndpointAddress" /> for a peer node as well as an optional collection of multihoming IP addresses.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.PeerNodeAddress" /> with the supplied <see cref="T:System.ServiceModel.EndpointAddress" /> and a collection of multihoming IP addresses also configured for the local computer.</summary>
      <param name="endpointAddress">A <see cref="T:System.ServiceModel.EndpointAddress" /> that represents the address of the peer node within the mesh. </param>
      <param name="ipAddresses">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains IP addresses configured for the local computer, and which can be used to connect to the peer node.</param>
      <exception cref="T:System.ArgumentNullException">One of the arguments supplied to the constructor is set to null.</exception>
    </member>
    <member name="P:System.ServiceModel.PeerNodeAddress.EndpointAddress">
      <summary>Gets the <see cref="T:System.ServiceModel.EndpointAddress" /> associated with this <see cref="T:System.ServiceModel.PeerNodeAddress" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.EndpointAddress" /> associated with this <see cref="T:System.ServiceModel.PeerNodeAddress" />.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerNodeAddress.IPAddresses">
      <summary>Gets a collection of multihoming IP addresses for this <see cref="T:System.ServiceModel.PeerNodeAddress" />.</summary>
      <returns>A collection of multihoming IP addresses associated with this <see cref="T:System.ServiceModel.PeerNodeAddress" />.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolver">
      <summary>Specifies a base type used to define the contract for the registration and resolution of a peer mesh ID to the endpoint addresses of nodes participating in the mesh.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolver" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerResolver.CanShareReferrals">
      <summary>Gets whether the peer name resolver can share referrals.</summary>
      <returns>If true, the peer name resolver can share referrals; if false, it cannot.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
      <summary>Initializes the current peer resolver instance with the new supplied endpoint address and settings.</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> that contains the new endpoint address of this peer resolver instance.</param>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> that specifies the new network binding for this peer resolver.</param>
      <param name="credentials">
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> that specifies the new client credentials for this peer resolver.</param>
      <param name="referralPolicy">
        <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the new referral policy for this peer resolver.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
      <summary>Registers a <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a specific peer mesh.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the registration ID. This registration ID object is passed to the <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> and <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /> methods. </returns>
      <param name="meshId">The ID of the peer mesh in which the peer node is to be registered.</param>
      <param name="nodeAddress">The <see cref="T:System.ServiceModel.PeerNodeAddress" /> to be registered with the peer mesh. </param>
      <param name="timeout">The length of time to wait for success before aborting the attempt to register with the peer mesh. If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
      <summary>Resolves the supplied mesh ID to zero or more endpoint addresses of nodes participating in the peer mesh.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing nodes participating in the peer mesh.</returns>
      <param name="meshId">The mesh ID of the peer mesh within which the <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing participating nodes are to be obtained.</param>
      <param name="maxAddresses">The number of endpoint addresses to return.</param>
      <param name="timeout">The length of time to wait for success before aborting the attempt to resolve endpoint addresses within the peer mesh. If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
      <summary>Removes the registration entry for a node from a peer mesh.</summary>
      <param name="registrationId">A registration ID for the node obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</param>
      <param name="timeout">The length of time to wait for a successful removal of the registration from the peer mesh. If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
      <summary>Updates the <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a node registered with a specific peer mesh.</summary>
      <param name="registrationId">A registration ID token for the node, obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></param>
      <param name="updatedNodeAddress">The updated endpoint address (and other multihoming IP addresses). </param>
      <param name="timeout">The length of time to wait for success before aborting the attempt to update the node's registration within the peer mesh. If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</param>
    </member>
    <member name="T:System.ServiceModel.PeerSecuritySettings">
      <summary>Contains the security settings associated with a peer channel, including the type of authentication used and the security used for the message transport.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerSecuritySettings.Mode">
      <summary>Gets and sets the value that indicates the security mode of the peer channel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.SecurityMode" /> enumeration value that indicates the security mode for the peer channel. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value is not an enumerated value from <see cref="T:System.ServiceModel.SecurityMode" /></exception>
    </member>
    <member name="P:System.ServiceModel.PeerSecuritySettings.Transport">
      <summary>Gets the value that indicates the security settings for the transport used for messages transmitted over the peer channel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerTransportSecuritySettings" /> that contains the transport security settings for the peer channel.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerTransportCredentialType">
      <summary>Specifies the set of credential types used to authenticate a peer channel transport.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerTransportCredentialType.Password">
      <summary>Authentication of the peer channel transport requires a correct password.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerTransportCredentialType.Certificate">
      <summary>Authentication of the peer channel transport requires an X509 certificate.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerTransportSecuritySettings">
      <summary>Contains the security settings for a peer channel transport.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerTransportSecuritySettings.CredentialType">
      <summary>Gets and sets the type of credential used to authenticate the peer channel transport.</summary>
      <returns>A <see cref="T:System.ServiceModel.PeerTransportCredentialType" /> enumeration value that specifies the type of credentials to provide for authentication.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The credential type is an invalid <see cref="T:System.ServiceModel.PeerTransportCredentialType" /> enumeration value.</exception>
    </member>
    <member name="T:System.ServiceModel.PoisonMessageException">
      <summary>An exception that is thrown when the message is deemed poison. A message is poisoned if it fails repeated attempts to deliver the message.</summary>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PoisonMessageException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PoisonMessageException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />  that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PoisonMessageException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PoisonMessageException" /> class with a specified error message and a reference to the inner exception that is the cause of the current exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>The exception seen on the client that is thrown when communication with the remote party is impossible due to mismatched data transfer protocols.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class with serialization information and streaming context specified.  </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.QueuedDeliveryRequirementsMode">
      <summary>The <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> enumeration specifies queued delivery requirements.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed">
      <summary>Queued delivery is allowed.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Required">
      <summary>Queued delivery is required.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.NotAllowed">
      <summary>Queued delivery is not allowed.</summary>
    </member>
    <member name="T:System.ServiceModel.QueueTransferProtocol">
      <summary>Indicates the protocol to be used in transferring messages between queue managers.</summary>
    </member>
    <member name="F:System.ServiceModel.QueueTransferProtocol.Native">
      <summary>Use the native MSMQ protocol.</summary>
    </member>
    <member name="F:System.ServiceModel.QueueTransferProtocol.Srmp">
      <summary>Use the Soap Reliable Messaging Protocol (SRMP).</summary>
    </member>
    <member name="F:System.ServiceModel.QueueTransferProtocol.SrmpSecure">
      <summary>Use the Soap Reliable Messaging Protocol Secure (SRMPS) transport.</summary>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>The exception that is thrown when a message quota has been exceeded.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="T:System.ServiceModel.ReceiveErrorHandling">
      <summary>An enumeration that specifies handling for a poison message.</summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Fault">
      <summary>This option sends a fault to the listener that caused the ServiceHost to fault. The message must be removed from the application queue by some external mechanism before the application can continue to process messages from the queue. </summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Drop">
      <summary>This option drops the poison message. The message never gets delivered to the application. If the message's TTL had already expired at this point, then the message may appear in the sender's Dead Letter Queue. If not, the message does not appear anywhere. This option indicates that the user does not really care if the message is lost.</summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Reject">
      <summary>This instructs MSMQ to send a negative acknowledgement back to the sending queue manager that the message cannot be received by the application. The message is placed in the sending queue manager's Dead Letter Queue. </summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Move">
      <summary>This moves the poison message to a Poison Message Queue for later processing by a poison message handling application. </summary>
    </member>
    <member name="T:System.ServiceModel.ReleaseInstanceMode">
      <summary>Specifies when the system recycles the service object in the operation invocation process.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.None">
      <summary>Recycles the object according to the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> value.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.BeforeCall">
      <summary>Recycles the object prior to calling the operation.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.AfterCall">
      <summary>Recycles the object subsequent to the completion of the operation.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall">
      <summary>Recycles the object prior to calling the operation and subsequent to the completion of the operation.</summary>
    </member>
    <member name="T:System.ServiceModel.ReliableSession">
      <summary>Provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</summary>
    </member>
    <member name="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class from a reliable session binding element.</summary>
      <param name="reliableSessionBindingElement">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property values are used to initialize the reliable session.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="reliableSessionBindingElement" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ReliableSession.InactivityTimeout">
      <summary>Gets or sets an interval of time that a service can remain inactive before closing.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service remains inactive before closing. The default value is 10 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.ReliableSession.Ordered">
      <summary>Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.</summary>
      <returns>true if messages must be delivered in the order in which they are sent; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.RsaEndpointIdentity">
      <summary>Specifies an RSA identity for the service endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.RsaEndpointIdentity" /> class from a claim.</summary>
      <param name="identity">The <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="identity" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Rsa" />.</exception>
    </member>
    <member name="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.RsaEndpointIdentity" /> class.</summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="certificate" /> public key is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate's public key cannot be accessed.</exception>
    </member>
    <member name="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.RsaEndpointIdentity" /> class from a public key.</summary>
      <param name="publicKey">The public key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKey" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.SecurityMode">
      <summary>Determines the security settings for a binding.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.None">
      <summary>Security is disabled.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Transport">
      <summary>Security is provided using a secure transport (for example, HTTPS).</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Message">
      <summary>Security is provided using SOAP message security.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <summary>A secure transport (for example, HTTPS) provides integrity, confidentiality, and authentication while SOAP message security provides client authentication.</summary>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>The exception that is thrown when a server is too busy to accept a message.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>The exception that is thrown when a service fails to activate.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class with a specified error message and the inner exception provided.  </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceAuthorizationManager">
      <summary>Provides authorization access checking for service operations.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
      <summary>Checks authorization for the given operation context.</summary>
      <returns>true if access is granted; otherwise; otherwise false. The default is true.</returns>
      <param name="operationContext">The <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
      <summary>Checks authorization for the given operation context based on default policy evaluation.</summary>
      <returns>true if access is granted; otherwise, false. The default is true.</returns>
      <param name="operationContext">The <see cref="T:System.ServiceModel.OperationContext" /> for the current authorization request.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
      <summary>Gets the set of policies that participate in policy evaluation.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
      <param name="operationContext">The <see cref="T:System.ServiceModel.OperationContext" /> of the current authorization request.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceBehaviorAttribute">
      <summary>Specifies the internal execution behavior of a service contract implementation.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceBehaviorAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.AddressFilterMode" /> that is used by the dispatcher to route incoming messages to the correct endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.AddressFilterMode" /> object that is used by the dispatcher to route incoming messages to the correct endpoint.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.AddressFilterMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Specifies whether to automatically close a session when a client closes an output session.</summary>
      <returns>true if services automatically close a session when the client closes an output session; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
      <summary>Gets or sets whether a service supports one thread, multiple threads, or reentrant calls.  </summary>
      <returns>One of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values; the default is <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
      <summary>Gets or sets the value used to locate the service element in an application configuration file.</summary>
      <returns>The value to locate in the configuration file. The default value is the fully qualified type name without assembly information.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton">
      <summary>Retrieves an object that implements the service and that is used as the singleton instance of the service, or null if there is no singleton instance.</summary>
      <returns>An implementation of the service. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
      <summary>Gets or sets a value that specifies whether to send unknown serialization data onto the wire.</summary>
      <returns>true if unknown serialization data is never sent; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that specifies that general unhandled execution exceptions are to be converted into a <see cref="T:System.ServiceModel.FaultException`1" /> of type <see cref="T:System.ServiceModel.ExceptionDetail" /> and sent as a fault message. Set this to true only during development to troubleshoot a service.</summary>
      <returns>true if unhandled exceptions are to be returned as SOAP faults; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
      <summary>Gets or sets the value that indicates when new service objects are created.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.InstanceContextMode" /> values; the default value is <see cref="F:System.ServiceModel.InstanceContextMode.PerSession" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.InstanceContextMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph">
      <summary>Gets or sets the maximum number of items allowed in a serialized object.</summary>
      <returns>The maximum number of items allowed in an object. The default is 65536 bytes (64KB).</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.Name">
      <summary>Gets or sets the value of the name attribute in the service element in Web Services Description Language (WSDL).</summary>
      <returns>The value of the name attribute in the &lt;wsdl:service&gt; element when exported. </returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace">
      <summary>Gets or sets the value of the target namespace for the service in Web Services Description Language (WSDL).</summary>
      <returns>The value of the targetNamespace attribute for the &lt;wsdl:definitions&gt; element that contains the &lt;wsdl:service&gt; element.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
      <summary>Gets or sets a value that specifies whether the service object is released when the current transaction completes.</summary>
      <returns>true if the service object is to be released; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)">
      <summary>Specifies an object that implements the service and that is used as the singleton instance of the service.</summary>
      <param name="value">The singleton instance of the service. The default value is null.</param>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Passes custom data objects to the bindings that support the behavior properties.</summary>
      <param name="description">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
      <param name="endpoints">The service endpoints.</param>
      <param name="parameters">The data objects needed by bindings to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Customizes the service run time to support the behavior properties.</summary>
      <param name="description">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Confirms that the service description and service host are capable of supporting the behavior.</summary>
      <param name="description">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose">
      <summary>Gets or sets a value that specifies whether pending transactions are completed when the current session closes without error.</summary>
      <returns>true if pending transactions are to be completed when the current session closes without error; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
      <summary>Specifies the transaction isolation level for new transactions created inside the service, and incoming transactions flowed from a client.</summary>
      <returns>A <see cref="T:System.Transactions.IsolationLevel" /> value that specifies the transaction isolation level. The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Transactions.IsolationLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
      <summary>Gets or sets the period within which a transaction must complete.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that represents the time within which transactions must complete or be automatically aborted.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
      <summary>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</summary>
      <returns>true if all calls to the service must run on the thread specified by the <see cref="T:System.Threading.SynchronizationContext" />; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
      <summary>Gets or sets a value that specifies whether the system or the application enforces SOAP MustUnderstand header processing.</summary>
      <returns>true if the system is to perform SOAP header MustUnderstand processing; otherwise false, which indicates that the application performs this processing. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Gets or sets the type of callback contract when the contract is a duplex contract.</summary>
      <returns>A <see cref="T:System.Type" /> that indicates the callback contract. The default is null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Gets or sets the name used to locate the service in an application configuration file.</summary>
      <returns>The name used to locate the service element in an application configuration file. The default is the name of the service implementation class.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
      <summary>Gets a value that indicates whether the member has a protection level assigned.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property is not <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Gets or sets the name for the &lt;portType&gt; element in Web Services Description Language (WSDL). </summary>
      <returns>The default value is the name of the class or interface to which the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> is applied. </returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Gets or sets the namespace of the &lt;portType&gt; element in Web Services Description Language (WSDL).</summary>
      <returns>The WSDL namespace of the &lt;portType&gt; element. The default value is "http://tempuri.org". </returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
      <summary>Specifies whether the binding for the contract must support the value of the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property.</summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
      <summary>Gets or sets whether sessions are allowed, not allowed or required.</summary>
      <returns>A <see cref="T:System.ServiceModel.SessionMode" /> that indicates whether sessions are allowed, not allowed, or required.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.SessionMode" /> values.</exception>
    </member>
    <member name="T:System.ServiceModel.ServiceHost">
      <summary>Provides a host for services.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the instance of the service and its base addresses specified.</summary>
      <param name="singletonInstance">The instance of the hosted service.</param>
      <param name="baseAddresses">An <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="singletonInstance" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the type of service and its base addresses specified.</summary>
      <param name="serviceType">The type of hosted service.</param>
      <param name="baseAddresses">An array of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The <see cref="T:System.Type" /> of contract for the endpoint added.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The address for the endpoint added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The <see cref="T:System.Type" /> of contract for the endpoint added.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The endpoint address for the service.</param>
      <param name="listenUri">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The <see cref="T:System.Type" /> of contract for the endpoint added.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The <see cref="T:System.Type" /> of contract for the endpoint added.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</param>
      <param name="listenUri">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The contracts are not initialized or the contract keys cannot be found.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <summary>Creates a description of the service hosted.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the hosted service.</returns>
      <param name="implementedContracts">The <see cref="T:System.Collections.Generic.IDictionary`2" /> with key pairs of type (<see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" />) that contains the keyed-contracts of the hosted service that have been implemented.</param>
      <exception cref="T:System.InvalidOperationException">The type of service hosted is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
      <summary>Initializes a description of the service hosted based on its instance and specified base addresses.</summary>
      <param name="singletonInstance">The instance of the hosted service.</param>
      <param name="baseAddresses">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="singletonInstance" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
      <summary>Initializes a description of the service hosted based on its type and specified base addresses.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of service hosted.</param>
      <param name="baseAddresses">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.OnClosed">
      <summary>Disposes of disposable services that are being hosted when the service host is closed.</summary>
    </member>
    <member name="P:System.ServiceModel.ServiceHost.SingletonInstance">
      <summary>Gets the singleton instance of the hosted service.</summary>
      <returns>The hosted service object.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceHostBase">
      <summary>Extends the <see cref="T:System.ServiceModel.ServiceHostBase" /> class to implement hosts that expose custom programming models.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHostBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
      <summary>Adds a base address to the service host.</summary>
      <param name="baseAddress">A <see cref="T:System.Uri" /> that contains the base address for services hosted on the current host.</param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="baseAddress" /> cannot be called.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The contract implemented by the endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The address for the endpoint added. This can be an absolute or relative URI. If it is a relative URI, one of the base address of the <see cref="T:System.ServiceModel.ServiceHost" /> (depending on the binding protocol) is used as the endpoint's base address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> or is null.</exception>
      <exception cref="T:System.InvalidOperationException">The host is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state or there is no <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service and so an endpoint cannot be added or the binding lacks a transport of binding scheme.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, endpoint address and URI that contains the address at which it listens.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The contract implemented by the endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The address for the endpoint added. This address can be an absolute or relative URI. </param>
      <param name="listenUri">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> or is null.</exception>
      <exception cref="T:System.InvalidOperationException">The host is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state or there is no <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service and so an endpoint cannot be added.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, and a URI that contains the endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The contract implemented by the endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> or is null.</exception>
      <exception cref="T:System.InvalidOperationException">The host is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state or there is no <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service and so an endpoint cannot be added.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with the specified contract, binding, and URIs that contain the endpoint and listening addresses.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The contract implemented by the endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</param>
      <param name="listenUri">The <see cref="T:System.Uri" /> that contains the address at which the endpoint listens for incoming messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> or is null.</exception>
      <exception cref="T:System.InvalidOperationException">The host is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state or there is no <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service and so an endpoint cannot be added.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration">
      <summary>Loads the service description information from the configuration file and applies it to the runtime being constructed.</summary>
      <exception cref="T:System.InvalidOperationException">The description of the service hosted is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Authorization">
      <summary>Gets the authorization behavior for the service hosted.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" /> for the service hosted.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.BaseAddresses">
      <summary>Gets the base addresses used by the hosted service.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers">
      <summary>Gets the collection of channel dispatchers used by the service host.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" /> that contains the channel dispatchers used by the service host.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
      <summary>Gets or sets the interval of time allowed for the service host to close.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time allowed for the service host to close.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value, in milliseconds, is less than zero or is larger than <see cref="F:System.Int32.MaxValue" /> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).</exception>
      <exception cref="T:System.InvalidOperationException">The host is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Closing" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The host is already in a <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The host is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <summary>When implemented in a derived class, creates the description of the hosted service.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service.</returns>
      <param name="implementedContracts">The <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the <see cref="T:System.ServiceModel.Description.ContractDescription" /> objects for the service.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Credentials">
      <summary>Gets the credential for the service hosted.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> for the service hosted.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time allowed for the service host to close.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the default interval of time allowed for the service host to close.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time allowed for the service host to open.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the default interval of time allowed for the service host to open.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Description">
      <summary>Gets the description of the service hosted.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Extensions">
      <summary>Gets the extensions for the current specified service host.</summary>
      <returns>An <see cref="T:System.ServiceModel.IExtensionCollection`1" /> of type <see cref="T:System.ServiceModel.ServiceHostBase" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.ImplementedContracts">
      <summary>Retrieves the contracts implemented by the service hosted.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the <see cref="T:System.ServiceModel.Description.ContractDescription" /> objects for the service.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
      <summary>Increases the limit on the flow rate of messages to the hosted service by a specified increment.</summary>
      <returns>The new limit after the increment is added.</returns>
      <param name="incrementBy">The number of messages by which to increase the flow control limit.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)">
      <summary>Creates and initializes the service host with the contract and service descriptions.</summary>
      <param name="baseAddresses">A <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the service hosted.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
      <summary>Initializes the runtime for the service host.</summary>
      <exception cref="T:System.InvalidOperationException">The description of the service hosted is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
      <summary>Loads the service element from the configuration file of the hosted service.</summary>
      <param name="serviceSection">The <see cref="T:System.ServiceModel.Configuration.ServiceElement" /> to be loaded from configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceSection" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The description of the service hosted is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
      <summary>Gets or sets the flow control limit for messages received by the service hosted.</summary>
      <returns>The flow control limit for messages received by the service hosted.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnAbort">
      <summary>Aborts the service.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation invoked on the close of the service host.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on-close operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on-close completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on-close operation.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation invoked on the opening of the service host.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on-open operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-open operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on-open completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on-open operation.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
      <summary>Closes down the hosted service, including their channel dispatchers and associated instance contexts and listeners.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation invoked on the closing of the service host.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation invoked on the opening of the service host.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)">
      <summary>Opens the channel dispatchers.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-open operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnOpened">
      <summary>Gets the service credentials and service authorization behavior for the hosted service.</summary>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
      <summary>Gets or sets the interval of time allowed for the service host to open.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time allowed for the service host to open.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or is larger than <see cref="F:System.Int32.MaxValue" /> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).</exception>
      <exception cref="T:System.InvalidOperationException">The host is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Closing" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The host is already in a <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The host is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters">
      <summary>Releases the service and channel dispatcher performance counters for the hosted service.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose">
      <summary>Closes the service host.</summary>
    </member>
    <member name="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
      <summary>Occurs when an unknown message is received.</summary>
    </member>
    <member name="T:System.ServiceModel.ServiceHostingEnvironment">
      <summary>Provides information about the current hosting environment in which Windows Communication Foundation (WCF) services are running. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceHostingEnvironment.AspNetCompatibilityEnabled">
      <summary>Gets a value that indicates whether this service is running in the context of the ASP.NET HTTP application pipeline.</summary>
      <returns>true if ASP.NET compatibility is enabled for the current AppDomain; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceHostingEnvironment.EnsureServiceAvailable(System.String)">
      <summary>Ensures that a service is activated at the provided virtual path.</summary>
      <param name="virtualPath">The virtual path to the service.</param>
      <exception cref="T:System.ServiceModel.EndpointNotFoundException">A service at given virtual path cannot be found.</exception>
      <exception cref="T:System.ServiceModel.ServiceActivationException">The service fails to activate successfully.</exception>
      <exception cref="T:System.InvalidOperationException">The service is not running in the hosted environment.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="virtualPath" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="virtualPath" /> is an absolute URI or not valid.</exception>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Specifies known types to be used by a service when serializing or deserializing.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class and specifies the name of a method that returns the known types.</summary>
      <param name="methodName">The name of a method that returns the known types.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class with the name of a method that returns the known types and the type that contains the method (or methods) that returns the known types.</summary>
      <param name="methodName">The name of a method that returns the known types.</param>
      <param name="declaringType">The type that can use the known types in its object graph.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class with the specified known type.</summary>
      <param name="type">Specifies a known type that can be used in a parameter or return value defined by the service.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Gets the type that contains the methods that return the known types.</summary>
      <returns>The <see cref="T:System.Type" /> that contains the methods that return the known types.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Gets the name of a method that returns the collection of known types.</summary>
      <returns>The name of the method that returns the known types.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>The known type that can be included in an object graph.</summary>
      <returns>The <see cref="T:System.Type" /> of the known type.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceSecurityContext">
      <summary>Represents the security context of a remote party. On the client, represents the service identity and, on the service, represents the client identity.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class with the collection of policies object.</summary>
      <param name="authorizationPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />  of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the authorization policies.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class with the specified authorization parameters.</summary>
      <param name="authorizationContext">An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains authorization information.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class with the specified authorization parameters and collection of policies.</summary>
      <param name="authorizationContext">An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains authorization settings.</param>
      <param name="authorizationPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />  of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the authorization policies.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.Anonymous">
      <summary>Returns an instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class that contains an empty collection of claims, identities, and other context data that is usually used to represent an anonymous party.</summary>
      <returns>An empty instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext">
      <summary>Gets the authorization information for an instance of this class. The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> contains a collection of <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that the application can interrogate and retrieve the information of the party.</summary>
      <returns>An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains the authorization settings.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies">
      <summary>Gets the collection of policies associated with an instance of this class.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the policies.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.Current">
      <summary>Gets the current <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</summary>
      <returns>The current <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous">
      <summary>Gets a value that indicates whether the current client has provided credentials to the service.</summary>
      <returns>true if the client has provided credentials; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
      <summary>Gets the primary identity associated with the current setting.</summary>
      <returns>An <see cref="T:System.Security.Principal.IIdentity" /> associated with the current setting.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity">
      <summary>Gets the Windows identity of the current setting. </summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents the Windows domain user.</returns>
    </member>
    <member name="T:System.ServiceModel.SessionMode">
      <summary>Specifies the values available to indicate the support for reliable sessions that a contract requires or supports.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.Allowed">
      <summary>Specifies that the contract supports sessions if the incoming binding supports them.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.Required">
      <summary>Specifies that the contract requires a sessionful binding. An exception is thrown if the binding is not configured to support session.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.NotAllowed">
      <summary>Specifies that the contract never supports bindings that initiate sessions.</summary>
    </member>
    <member name="T:System.ServiceModel.SpnEndpointIdentity">
      <summary>Represents a service principal name (SPN) for an identity when the binding uses Kerberos.</summary>
    </member>
    <member name="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.SpnEndpointIdentity" /> with the specified identity claim.</summary>
      <param name="identity">The identity for this service principal name (SPN).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="identity" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Spn" />.</exception>
    </member>
    <member name="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.SpnEndpointIdentity" /> with the specified service principal name (SPN).</summary>
      <param name="spnName">The SPN.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spnName" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.SpnEndpointIdentity.SpnLookupTime">
      <summary>Specifies the maximum time allowed to look up the service principal name (SPN).</summary>
      <returns>A <see cref="T:System.TimeSpan" />. The default is 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is set to less than 0.</exception>
    </member>
    <member name="T:System.ServiceModel.TcpClientCredentialType">
      <summary>Enumerates the valid credential types for TCP clients.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.Windows">
      <summary>Specifies client authentication using Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.Certificate">
      <summary>Specifies client authentication using a certificate.</summary>
    </member>
    <member name="T:System.ServiceModel.TcpTransportSecurity">
      <summary>Provides properties that control authentication parameters and protection level for the TCP transport.</summary>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ClientCredentialType">
      <summary>Gets or sets the type of client credential used for authentication.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.TcpClientCredentialType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel">
      <summary>Gets or sets the <see cref="T:System.Net.Security.ProtectionLevel" /> for the TCP stream.</summary>
      <returns>Returns the <see cref="T:System.Net.Security.ProtectionLevel" />.</returns>
    </member>
    <member name="T:System.ServiceModel.TransactionFlowAttribute">
      <summary>Specifies whether a service operation accepts incoming transactions from a client.</summary>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.TransactionFlowAttribute" /> class. </summary>
      <param name="transactions">A <see cref="T:System.ServiceModel.TransactionFlowOption" />.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds extra parameters (settings) to the binding context to support this operation’s behavior. This method cannot be inherited.</summary>
      <param name="description">The operation description for which the attribute adds extra functionality.</param>
      <param name="parameters">The collection of parameter objects on the binding context.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Attaches the attribute functionality to the ProxyOperation object for the method that the attribute marks. This method cannot be inherited.</summary>
      <param name="description">The operation to which the attribute attaches functionality.</param>
      <param name="proxy">The <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> object that represents the current operation.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Attaches the attribute functionality to the <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> object for the method that the attribute marks. This method cannot be inherited.</summary>
      <param name="description">The description for this operation.</param>
      <param name="dispatch">The <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> object for this operation.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Verifies that the operation can support this behavior. This method cannot be inherited.</summary>
      <param name="description">The operation to validate.</param>
    </member>
    <member name="P:System.ServiceModel.TransactionFlowAttribute.Transactions">
      <summary>Gets a value that indicates whether the incoming transaction is supported.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionFlowOption" /> that indicates whether the incoming transaction is supported.</returns>
    </member>
    <member name="T:System.ServiceModel.TransactionFlowOption">
      <summary>An enumeration that is used with the <see cref="T:System.ServiceModel.TransactionFlowAttribute" /> to specify the transaction flow policy for a service operation.</summary>
    </member>
    <member name="F:System.ServiceModel.TransactionFlowOption.NotAllowed">
      <summary>A transaction should not be flowed. This is the default value.</summary>
    </member>
    <member name="F:System.ServiceModel.TransactionFlowOption.Allowed">
      <summary>Transaction may be flowed.</summary>
    </member>
    <member name="F:System.ServiceModel.TransactionFlowOption.Mandatory">
      <summary>Transaction must be flowed.</summary>
    </member>
    <member name="T:System.ServiceModel.TransactionProtocol">
      <summary>Specifies the transaction protocol used in flowing transactions.</summary>
    </member>
    <member name="M:System.ServiceModel.TransactionProtocol.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.TransactionProtocol" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.Default">
      <summary>Gets the default value for the transaction protocol.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.TransactionProtocol" /> value that specifies the default transaction protocol to be used in flowing a transaction.</returns>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.OleTransactions">
      <summary>Gets the OleTransactions transaction protocol value.</summary>
      <returns>An <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" /> value.</returns>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004">
      <summary>Gets the WSAtomicTransactionOctober2004 transaction protocol value.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionProtocol" /> value.</returns>
    </member>
    <member name="T:System.ServiceModel.TransferMode">
      <summary>Indicates whether a channel uses streamed or buffered modes for the transfer of request and response messages.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Buffered">
      <summary>The request and response messages are both buffered.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Streamed">
      <summary>The request and response messages are both streamed.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedRequest">
      <summary>The request message is streamed and the response message is buffered.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedResponse">
      <summary>The request message is buffered and the response message is streamed.</summary>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Contains the message received by a channel and cannot be associated with any callback operation or pending request.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Gets the unknown message that caused the event.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that caused the event.</returns>
    </member>
    <member name="T:System.ServiceModel.UpnEndpointIdentity">
      <summary>Represents a user principal name (UPN) for an identity which is used when the binding utilizes the SSPINegotiate authentication mode.</summary>
    </member>
    <member name="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.UpnEndpointIdentity" /> class from a claim.</summary>
      <param name="identity">The <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="identity" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Upn" />.</exception>
    </member>
    <member name="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.UpnEndpointIdentity" /> class.</summary>
      <param name="upnName">The UPN name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="upnName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="upnName" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Upn" />.</exception>
    </member>
    <member name="T:System.ServiceModel.UriSchemeKeyedCollection">
      <summary>Provides a thread-safe collection that contains URIs that are keyed by their transport scheme name.</summary>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> class. </summary>
      <param name="addresses">A variable length <see cref="T:System.Array" /> of <see cref="T:System.Uri" /> objects used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)">
      <summary>Gets the key for a specified URI from the collection.</summary>
      <returns>The key for the specified URI from the collection.</returns>
      <param name="item">The <see cref="T:System.Uri" /> whose key is being retrieved.</param>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)">
      <summary>Inserts a URI into the collection at a specified location.</summary>
      <param name="index">The zero-based index that specifies the insertion location for the item in the collection.</param>
      <param name="item">The <see cref="T:System.Uri" /> to be inserted into the collection.</param>
      <exception cref="T:System.InvalidOperationException">The<paramref name=" item" /> URI is not an absolute URI.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> URI already contains a scheme name already in the collection.</exception>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)">
      <summary>Replaces a URI at a specified location of the collection with a new URI.</summary>
      <param name="index">The zero-based index that specifies the insertion location for the URI in the collection.</param>
      <param name="item">The <see cref="T:System.Uri" /> to be placed into the collection.</param>
      <exception cref="T:System.InvalidOperationException">The<paramref name=" item" /> URI is not an absolute URI.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> URI already contains a scheme name already in the collection.</exception>
    </member>
    <member name="T:System.ServiceModel.WSDualHttpBinding">
      <summary>A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.</summary>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a binding specified by its configuration name.</summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configurationName" /> was not found.</exception>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress">
      <summary>Gets or sets the base address of the client.</summary>
      <returns>The <see cref="T:System.Uri" /> that is the base address of the client. The default value is "".</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that includes a <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> and, because a reliable session is required for the <see cref="T:System.ServiceModel.WSDualHttpBinding" />, a <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value must always be SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.</summary>
      <returns>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524288 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be received on a channel configured with this binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates that MTOM or Text/XML is used to encode SOAP messages. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ReliableSession">
      <summary>Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</summary>
      <returns>The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>The transport scheme: "http".</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.Security">
      <summary>Gets an object that specifies the security settings used with this binding. </summary>
      <returns>The <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> that specifies security settings used with the binding. The default value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> is <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />. </returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>true if requests are handled synchronously; false if handled asynchronously. The value returned is always is false, to handle requests asynchronously.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow">
      <summary>Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</summary>
      <returns>true if the flowing of transactions is supported; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.  </returns>
    </member>
    <member name="T:System.ServiceModel.WSDualHttpSecurity">
      <summary>Specifies the security settings for the <see cref="T:System.ServiceModel.WsDualHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpSecurity.Message">
      <summary>Gets the message-level security properties for the <see cref="T:System.ServiceModel.WsDualHttpBinding" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> value. The default values include: <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, and <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> is true.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpSecurity.Mode">
      <summary>Gets or sets the security mode for the parent <see cref="T:System.ServiceModel.WSDualHttpBinding" />.</summary>
      <returns>A value from the <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> enumeration. The default is <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" />.</exception>
    </member>
    <member name="T:System.ServiceModel.WSDualHttpSecurityMode">
      <summary>Specifies the different security modes for <see cref="T:System.ServiceModel.WsDualHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.WSDualHttpSecurityMode.None">
      <summary>No security is used.</summary>
    </member>
    <member name="F:System.ServiceModel.WSDualHttpSecurityMode.Message">
      <summary>SOAP message-level security is used and the settings in the <see cref="P:System.ServiceModel.WsDualHttpSecurity.Message" /> property become effective.</summary>
    </member>
    <member name="T:System.ServiceModel.WSFederationHttpBinding">
      <summary>A secure and interoperable binding that supports federated security.</summary>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> class with a binding specified by its configuration name.</summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configurationName" /> was not found.</exception>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.CreateMessageSecurity">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that has enabled a reliable session.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that has enabled a reliable session.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.GetTransport">
      <summary>Returns the transport binding element from the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeAt">
      <summary>Gets or sets the URI at which the privacy notice is located.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the privacy notice is located.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeVersion">
      <summary>Gets or sets the privacy notice version number for the binding.</summary>
      <returns>The version number of the privacy notice.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpBinding.Security">
      <summary>Gets the type of security used with this binding.  </summary>
      <returns>The <see cref="T:System.ServiceModel.WSFederationHttpSecurity" /> that specifies the mode of security used with this binding. The default value of the <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> for this binding is <see cref="F:System.ServiceModel.WSFederationHttpSecurityMode.Message" />. </returns>
    </member>
    <member name="T:System.ServiceModel.WSFederationHttpSecurity">
      <summary>Specifies the security settings for the <see cref="T:System.ServiceModel.WSFederationHttpBinding" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpSecurity.Message">
      <summary>Indicates the message security settings for the <see cref="T:System.ServiceModel.WSFederationHttpBinding" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.FederatedMessageSecurityOverHttp" /> value.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpSecurity.Mode">
      <summary>Gets or sets the type of security to be applied.</summary>
      <returns>A <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" />. The default is <see cref="F:System.ServiceModel.WSFederationHttpSecurityMode.Message" />.</returns>
    </member>
    <member name="T:System.ServiceModel.WSFederationHttpSecurityMode">
      <summary>Specifies the different security modes for <see cref="T:System.ServiceModel.WsFederationHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.WSFederationHttpSecurityMode.None">
      <summary>The SOAP message is not secure during transfer. No Security Token Service is contacted. This mode is equivalent to using the wsHttpBinding binding with SecurityMode.None.</summary>
    </member>
    <member name="F:System.ServiceModel.WSFederationHttpSecurityMode.Message">
      <summary>Integrity, confidentiality, server authentication and client authentication are provided using SOAP message security. By default, the body is encrypted and signed. The service must be configured with a certificate. Client authentication is based on the token issued to the client by a security token service.</summary>
    </member>
    <member name="F:System.ServiceModel.WSFederationHttpSecurityMode.TransportWithMessageCredential">
      <summary>Integrity, confidentiality and server authentication are provided by HTTPS. The service must be configured with a certificate. Client authentication is provided by means of SOAP message security and is based on the token issued to the client by a security token service. </summary>
    </member>
    <member name="T:System.ServiceModel.WSHttpBinding">
      <summary>Represents an interoperable binding that supports distributed transactions and secure, reliable sessions.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class with a specified type of security used by the binding. </summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled. </summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class with a binding specified by its configuration name.</summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configName" /> was not found.</exception>
    </member>
    <member name="P:System.ServiceModel.WSHttpBinding.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.WSHttpBinding" /> binding.</returns>
      <exception cref="T:System.InvalidOperationException">The transport security mode set cannot provide the reliable session that has been enabled.</exception>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity">
      <summary>Returns the security binding element from the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.GetTransport">
      <summary>Returns the transport binding element from the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBinding.Security">
      <summary>Gets the security settings used with this binding.  </summary>
      <returns>The <see cref="T:System.ServiceModel.WSHttpSecurity" /> that is used with this binding. The default value <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> property is <see cref="P:System.ServiceModel.WSHttpSecurity.Message" />. </returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpBindingBase">
      <summary>Provides the base class with members common to the <see cref="T:System.ServiceModel.WSHttpBinding" /> and the <see cref="T:System.ServiceModel.WSFederationHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBindingBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBindingBase" /> class with a value that indicates whether a reliable session is enabled.</summary>
      <param name="reliableSessionEnabled">true, if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the <see cref="T:System.ServiceModel.Channels.BindingElement" /> objects for the binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity">
      <summary>When implemented in a derived class, returns the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value is always SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.GetTransport">
      <summary>When implemented in a derived class, returns the transport binding element from the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers required by endpoints using this binding.</summary>
      <returns>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be processed by the binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">A message exceeded the maximum size allocated.</exception>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text is used to encode SOAP messages. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ReliableSession">
      <summary>Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</summary>
      <returns>The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>"http" if the security mode of the transport binding element is set to <see cref="F:System.ServiceModel.SecurityMode.None" /> or <see cref="F:System.ServiceModel.SecurityMode.Message" />; "https" if the security mode is set otherwise.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>true if requests are handled synchronously; false if handled asynchronously. The default is false, to handle requests asynchronously.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow">
      <summary>Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</summary>
      <returns>true if the flowing of transactions is supported; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.  </returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpSecurity">
      <summary>Represents the security settings for the <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Message">
      <summary>Gets the message-level security settings for this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.NonDualMessageSecurityOverHttp" /> instance. The default value includes: <see cref="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext" /> with default set to true, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, and <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> is true.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Mode">
      <summary>Specifies the message <see cref="T:System.ServiceModel.SecurityMode" /> for this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.SecurityMode" /> for this binding. The default is <see cref="F:System.ServiceModel.SecurityMode.Message" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> set is not defined.</exception>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Transport">
      <summary>Gets an object that contains the transport-level security settings for this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.HttpTransportSecurity" /> for this binding. The default value includes a <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> of <see cref="F:System.ServiceModel.HttpClientCredentialType.None" /> and a <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> of <see cref="F:System.ServiceModel.HttpProxyCredentialType.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.WSMessageEncoding">
      <summary>Specifies whether Message Transmission Optimization Mechanism (MTOM) or text is used to encode SOAP messages.</summary>
    </member>
    <member name="F:System.ServiceModel.WSMessageEncoding.Text">
      <summary>Text is used to encode the SOAP messages.</summary>
    </member>
    <member name="F:System.ServiceModel.WSMessageEncoding.Mtom">
      <summary>MTOM is used to encode the SOAP messages.</summary>
    </member>
    <member name="T:System.ServiceModel.X509CertificateEndpointIdentity">
      <summary>Represents a certificate identity for the service endpoint. Clients that attempt to communicate with that service endpoint should authenticate the service based on the certificate provided in the endpoint identity.</summary>
    </member>
    <member name="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of a <see cref="T:System.ServiceModel.X509CertificateEndpointIdentity" /> object using an existing certificate.</summary>
      <param name="certificate">The certificate to clone.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Initializes a new instance of this class using the primary (leaf) certificate and certificates that are part of its trust chain.</summary>
      <param name="primaryCertificate">The primary certificate representing the service's identity.</param>
      <param name="supportingCertificates">The certificates that are part of the trust chain of the primary certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="primaryCertificate" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="supportingCertificates" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.X509CertificateEndpointIdentity.Certificates">
      <summary>Gets the collection of certificates for this identity.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />. </returns>
    </member>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Instructs the Windows Communication Foundation (WCF) infrastructure to use the <see cref="T:System.Xml.Serialization.XmlSerializer" /> instead of the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>Gets or sets the SOAP style of the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatStyle" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Use">
      <summary>Gets or sets a value that specifies the format to use.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatUse" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatUse.Literal" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Replicates the behavior of the default keyword in C#.</summary>
      <returns>Returns null if T is a reference type and zero if T is a numeric value type.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Provides support for implementing the event-based asynchronous pattern. For more information about  this pattern, see Event-based Asynchronous Pattern Overview.</summary>
      <param name="beginOperationDelegate">A delegate that is used for calling the asynchronous operation.</param>
      <param name="inValues">The input values to the asynchronous call.</param>
      <param name="endOperationDelegate">A delegate that is used to end the asynchronous call after it has completed.</param>
      <param name="operationCompletedCallback">A client-supplied callback that is invoked when the asynchronous method is complete. The callback is passed to the <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">The <paramref name="userState" /> object to associate with the asynchronous call.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>A delegate that is used by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> for calling asynchronous operations on the client. </summary>
      <returns>The result of the asynchronous call.</returns>
      <param name="inValues">The input values to the asynchronous call.</param>
      <param name="asyncCallback">Reference to the method to be called when the corresponding asynchronous operation completes.</param>
      <param name="state">An <see cref="T:System.Object" /> that lets the client distinguish between different asynchronous calls. It is made available to the client in the arguments parameter of the event completion callback.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>A delegate that is invoked by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> on successful completion of the call made by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> to <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <returns>An array of <see cref="T:System.Object" /> that contains the results of the call to the asynchronous method. The operation may have multiple return values, which are all returned in this object array.</returns>
      <param name="result">The result returned by the call made by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />to <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Stores the results from an asynchronous call made by the client.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Gets the results from an asynchronous call made by the client.</summary>
      <returns>An array of <see cref="T:System.Object" /> that contains the results from an asynchronous call made by the client.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultImportOptions">
      <summary>Indicates whether to use the <see cref="T:System.Xml.XmlSerializer" /> for reading and writing faults.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultImportOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultImportOptions" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.FaultImportOptions.UseMessageFormat">
      <summary>Gets or sets a value that indicates that the <see cref="T:System.Xml.XmlSerializer" /> should be used for reading and writing faults.</summary>
      <returns>true if the <see cref="T:System.Xml.XmlSerializer" /> should be used for reading and writing faults; false if the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> should be used. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecureConversationVersion">
      <summary>Gets the WS-SecureConversation version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecureConversationVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityPolicyVersion">
      <summary>Gets the WS-SecurityPolicy version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityPolicyVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.TrustVersion">
      <summary>Gets the WS-Trust version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.TrustVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <summary>Gets the message security version that requires the Basic Security Profile 1.0 based on WS-Security 1.0, WS-Trust 1.3, WS-SecureConversation 1.3 and WS-SecurityPolicy 1.2 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12">
      <summary>Gets the message security version that requires the WS-Security 1.1, WS-Trust 1.3, WS-SecureConversation 1.3 and WS-SecurityPolicy 1.2 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <summary>Gets the message security version that requires the WS-Security1.1, WS-Trust 1.3, WS-SecureConversation 1.3, WS-SecurityPolicy 1.2, and BasicSecurityProfile 1.0 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.ReliableMessagingVersion">
      <summary>Contains the settings for the supported versions of the WS-ReliableMessaging protocol. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.Default">
      <summary>Returns the default version of WS-ReliableMessaging protocol.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the default version of the WS-ReliableMessaging protocol. The default version is WS-ReliableMessagingFebruary2005.</returns>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessaging11">
      <summary>Gets version 1.1 of the WS-ReliableMessaging protocol.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the WS-ReliableMessaging1.1 version.</returns>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessagingFebruary2005">
      <summary>Gets the February 2005 version of the WS-ReliableMessaging protocol.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the WS-ReliableMessagingFebruary2005 version.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
      <summary>Checks authorization for the given operation context when access to a message is required.</summary>
      <returns>true if access is granted; otherwise; otherwise false. The default is true.</returns>
      <param name="operationContext">The <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to be examined to determine authorization.</param>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.WSAtomicTransaction11">
      <summary>Gets the WSAtomicTransaction11 transaction protocol value.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionProtocol" /> value.</returns>
    </member>
    <member name="T:System.ServiceModel.WS2007FederationHttpBinding">
      <summary>A secure and interoperable binding that derives from <see cref="T:System.ServiceModel.WS2007HttpBinding" /> and supports federated security.</summary>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> class with a specified type of security used by the binding. </summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled. </summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> class with a binding specified by its configuration name. </summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configurationName" /> was not found.</exception>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.CreateMessageSecurity">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> using the settings provided by this instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> using the settings provided by this instance.</returns>
    </member>
    <member name="T:System.ServiceModel.WS2007HttpBinding">
      <summary>Represents an interoperable binding that derives from <see cref="T:System.ServiceModel.WSHttpBinding" /> and provides support for the updated versions of the <see cref="P:System.ServiceModel.WSHttpBinding.Security" />, <see cref="T:System.ServiceModel.ReliableSession" />, and <see cref="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" /> binding elements.</summary>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class with a binding specified by its configuration name. </summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configName" /> was not found.</exception>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.CreateMessageSecurity">
      <summary>Returns the security binding element from the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>Gets or sets a value that indicates that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should be used for reading and writing faults. </summary>
      <returns>true if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should be used for reading and writing faults; false if the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> should be used. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute">
      <summary>Applied to a Windows Communication Foundation (WCF) service to indicate whether that service can be run in ASP.NET compatibility code.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.RequirementsMode">
      <summary>Gets or sets the level of ASP.NET compatibility required by the service.</summary>
      <returns>The <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" /> that indicates the services required degree of ASP.NET compatibility. The default value is <see cref="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.NotAllowed" />, so that users must explicitly design a WCF service to be running in the compatibility mode.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not a valid one for the <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" />enum.</exception>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds custom data that the binding elements can access to support the implementation of the contract.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the service. </param>
      <param name="serviceHostBase">The <see cref="T:System.ServiceModel.ServiceHostBase" /> used to host the service.</param>
      <param name="endpoints">The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> that contains the endpoints for the service.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that contains the parameters that the binding elements for the service can access.</param>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Checks that the type of hosting is consistent with the ASP.NET compatibility requirements.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the service. </param>
      <param name="serviceHostBase">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for hosting the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="description" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The service hosting is not compatible with the ASP.NET compatibility requirements.</exception>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Validates the service behavior.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the service. </param>
      <param name="serviceHostBase">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for hosting the service.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode">
      <summary>Specifies whether a Windows Communication Foundation (WCF) service runs, or can run, in a mode that is compatible with ASP.NET.</summary>
    </member>
    <member name="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.NotAllowed">
      <summary>WCF services must run in an application domain with ASP.NET compatibility mode set to false. </summary>
    </member>
    <member name="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed">
      <summary>WCF services can run in an application domain with ASP.NET compatibility mode set to true or false.</summary>
    </member>
    <member name="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required">
      <summary>WCF services must run in an application domain with ASP.NET compatibility mode set to true.</summary>
    </member>
    <member name="T:System.ServiceModel.Activation.HostedTransportConfiguration">
      <summary>Provides transport-specific configuration for transport implementations hosted in Windows Process Activation Service (WAS).</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.HostedTransportConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.HostedTransportConfiguration" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.HostedTransportConfiguration.GetBaseAddresses(System.String)">
      <summary>When overridden in a derived class, retrieves the base address of the host.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the base address of the host.</returns>
      <param name="virtualPath">The virtual path to the service.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.ServiceHostFactory">
      <summary>Factory that provides instances of <see cref="T:System.ServiceModel.ServiceHost" /> in managed hosting environments where the host instance is created dynamically in response to incoming messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.ServiceHostFactory" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
      <summary>Creates a <see cref="T:System.ServiceModel.ServiceHost" /> with specific base addresses and initializes it with specified data.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceHost" /> with specific base addresses.</returns>
      <param name="constructorString">The initialization data passed to the <see cref="T:System.ServiceModel.ServiceHostBase" /> instance being constructed by the factory. </param>
      <param name="baseAddresses">The <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the service hosted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">There is no hosting context provided or <paramref name="constructorString" /> is null or empty.</exception>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>Creates a <see cref="T:System.ServiceModel.ServiceHost" /> for a specified type of service with a specific base address. </summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceHost" /> for the type of service specified with a specific base address.</returns>
      <param name="serviceType">Specifies the type of service to host. </param>
      <param name="baseAddresses">The <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the service hosted.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.ServiceHostFactoryBase">
      <summary>Provides the base implementation for the factory that allows application code to participate in the creation of service hosts in managed hosting environments where the host instance is created dynamically in response to incoming messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.ServiceHostFactoryBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])">
      <summary>When overridden in a derived class, creates a <see cref="T:System.ServiceModel.ServiceHostBase" /> with a specific base address using custom initiation data. </summary>
      <returns>The <see cref="T:System.ServiceModel.ServiceHostBase" /> object with the specified base addresses and initialized with the custom initiation data.</returns>
      <param name="constructorString">The initialization data that is passed to the <see cref="T:System.ServiceModel.ServiceHostBase" /> instance being constructed by the factory. </param>
      <param name="baseAddresses">An <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses of the host.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.VirtualPathExtension">
      <summary>Contains the service's virtual path when the service is hosted in Internet Information Services (IIS) or Windows Process Activation Service (WAS).</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.VirtualPathExtension.Attach(System.ServiceModel.ServiceHostBase)">
      <summary>This method is provided to support the Windows Communication Foundation (WCF) infrastructure.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.ServiceHostBase" /> using the virtual path.</param>
    </member>
    <member name="M:System.ServiceModel.Activation.VirtualPathExtension.Detach(System.ServiceModel.ServiceHostBase)">
      <summary>This method is provided to support the WCF infrastructure.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.ServiceHostBase" /> using the virtual path.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.VirtualPathExtension.VirtualPath">
      <summary>Gets the virtual path used by a service.</summary>
      <returns>The virtual path used by a service.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.DiagnosticSection">
      <summary>Represents a configuration element for specifying Windows Communication Foundation (WCF) listener's diagnostics functionalities. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.DiagnosticSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.DiagnosticSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.DiagnosticSection.PerformanceCountersEnabled">
      <summary>Gets or sets a Boolean value that indicates whether performance counters are enabled for diagnostic purpose.</summary>
      <returns>true if performance counters are enabled; otherwise, false. </returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.NetPipeSection">
      <summary>Contains configuration elements for the NetPipeActivator sharing service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.NetPipeSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.NetPipeSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.AllowAccounts">
      <summary>Gets the user accounts for processes that host Windows Communication Foundation (WCF) services and are granted connection access to the sharing service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection" /> that contains user accounts for processes that host WCF services and are granted connection access to the sharing service. The default values returned are LocalSystem, Admin, NS, LS, and IIS_USRS.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.MaxPendingAccepts">
      <summary>Gets or sets the maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service.</summary>
      <returns>The maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service. The default is 2.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.MaxPendingConnections">
      <summary>Gets or sets the maximum number of pending connections for this sharing service.</summary>
      <returns>The maximum number of pending connections for this sharing service.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.ReceiveTimeout">
      <summary>Gets or sets the timeout for the NetPipeActivator sharing service. </summary>
      <returns>The default is 00:00:60.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.NetTcpSection">
      <summary>Contains configuration elements for the NetTcpPortSharing sharing service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.NetTcpSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.NetTcpSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts">
      <summary>Gets the user accounts for processes that host Windows Communication Foundation (WCF) services and are granted connection access to the sharing service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection" /> that contains user accounts for processes that host WCF services and are granted connection access to the sharing service. The default values returned are LocalSystem, Admin, NS, LS, and IIS_USRS.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog">
      <summary>Gets or sets the maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to WCF services.</summary>
      <returns>The maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to WCF. The default is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts">
      <summary>Gets or sets the maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service.</summary>
      <returns>The maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service. The default is 2.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections">
      <summary>Gets or sets the maximum number of pending connections for this sharing service.</summary>
      <returns>The maximum number of pending connections for this sharing service.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout">
      <summary>Gets or sets the timeout for the NetTcpPortSharing sharing service.</summary>
      <returns>The default is 00:00:60.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled">
      <summary>Gets or sets a Boolean value that indicates whether the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of WCF services.</summary>
      <returns>true if the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of WCF services; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement">
      <summary>Represents a configuration element that contains user accounts for processes that host WCF services, and are granted connection access to the sharing service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement.#ctor(System.Security.Principal.SecurityIdentifier)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" /> class wit the specified security identifier.</summary>
      <param name="sid">A security identifier.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement.SecurityIdentifier">
      <summary>Gets or sets the security identifier that this element associates with.</summary>
      <returns>The security identifier that this element associates with.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection">
      <summary>Contains a collection of <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup">
      <summary>Contains the configuration section for the SMSvcHost.exe tool. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.Diagnostics">
      <summary>Gets the diagnostics configuration section.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.DiagnosticSection" /> instance that contains the diagnostics configuration section.</returns>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
      <summary>Gets the System.ServiceModel.Activation configuration section group from the specified configuration file. </summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup" /> that represents the System.ServiceModel.Activation settings in the configuration file.</returns>
      <param name="config">A <see cref="T:System.Configuration.Configuration" /> that represents a configuration file.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.NetPipe">
      <summary>Gets the configuration settings for the NetPipeActivator sharing service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.NetPipeSection" /> that contains configuration settings for the NetPipeActivator sharing service.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.NetTcp">
      <summary>Gets the configuration settings for the NetTcpPortSharing sharing service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.NetTcpSection" /> that contains configuration settings for the NetTcpPortSharing sharing service.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Represents a header that encapsulates an address information item used to identify or interact with an endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class with a specified value.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains the information item specified by the <paramref name="value" /> parameter.</returns>
      <param name="value">The information item for the address header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class using a specified formatter to serialize the information item from a specified object.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains the information item specified by the value parameter.</returns>
      <param name="value">The information item for the address header.</param>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> used to serialize the specified object in the <paramref name="value" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="formatter" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class with a specified value, name and namespace.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> with the specified <paramref name="name" /> and <paramref name="ns" /> that contains the information item specified by <paramref name="value" />.</returns>
      <param name="name">The name of the address header.</param>
      <param name="ns">The namespace of the address header.</param>
      <param name="value">The information item for the address header.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> is null or <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class with a specified name and namespace that uses a specified formatter to serialize the information item from a specified object.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> with the specified <paramref name="name" /> and <paramref name="ns" /> that contains the information item specified by <paramref name="value" />.</returns>
      <param name="name">The name of the address header.</param>
      <param name="ns">The namespace of the address header.</param>
      <param name="value">The information item for the address header.</param>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> used to serialize the specified object in the <paramref name="value" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="serializer" /> is null or <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Determines whether the information item in a specified object is equal to the object contained in the current address header.</summary>
      <returns>true if the information item in a specified <paramref name="obj" /> is equivalent to the information item contained in the current address header; otherwise, false. In particular, returns false if <paramref name="obj" /> is null.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the object contained in the current address header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Returns an XML reader that can serialize the current address header object.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can serialize the current address header object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Provides a unique hash code for an address header. </summary>
      <returns>A unique hash code for the current address header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Deserializes the information item from the current address header to an object of a specified type.</summary>
      <returns>An instance of a class of type <paramref name="T" /> with its fields and properties set to the values supplied by the current address header object.</returns>
      <typeparam name="T">A class of type <paramref name="T" /> with its fields and properties set to the values supplied by the current address header object.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserializes the information item from the current address header to an object of a specified type that uses a specified formatter to serialize this information.</summary>
      <returns>An instance of a class of type <paramref name="T" /> with its fields and properties set to the values supplied by the current address header object.</returns>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> used to deserialize the information item from the current address header object.</param>
      <typeparam name="T">A class of type <paramref name="T" /> with its fields and properties set to the values supplied by the current address header object.</typeparam>
      <exception cref="T:System.ArgumentNullException">The <paramref name="serializer" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>When implemented, gets the name of the address header.</summary>
      <returns>The name of the address header.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>When implemented, gets the namespace of the address header.</summary>
      <returns>The namespace of the address header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>When overridden in a derived class, is invoked when the address header contents are written to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header contents to a stream or file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>When overridden in a derived class, is invoked when the address header contents begin to be written to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header to a stream or file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Wraps the address header as a message header.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageHeader" /> that wraps the current address header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the address header to a stream or file using a specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Writes the address header to a stream or file using a specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the address header to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the address header contents to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header contents to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Starts to write the address header contents to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Represents a thread-safe, read-only collection of address headers.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> class from an enumerable set of address headers.</summary>
      <param name="addressHeaders">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> set of <see cref="T:System.ServiceModel.Channels.AddressHeader" /> objects used to initialize the collection.</param>
      <exception cref="T:System.ArgumentException">One of the address headers in the <paramref name="addressHeaders" /> parameter is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Adds the headers in the collection to the headers of a specified message.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to which the headers are added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Finds all the address headers in the collection with the specified name and namespace.</summary>
      <returns>The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains all the headers in the collection with the specified name and namespace.</returns>
      <param name="name">The name of the address header to be found.</param>
      <param name="ns">The namespace of the address header to be found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Finds the first address header in the collection with a specified name and namespace.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> in the collection with the specified name and namespace.</returns>
      <param name="name">The name of the address header to be found.</param>
      <param name="ns">The namespace of the address header to be found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is null.</exception>
      <exception cref="T:System.ArgumentException">There is more than one header that has the specified <paramref name="name" /> and <paramref name="ns" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>The WS-Addressing version associated with a SOAP message or understood by an endpoint.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Gets the addressing version that indicates that no version of WS-Addressing is being used.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that does not use a version of WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>A string that represents the current addressing version.</summary>
      <returns>The current addressing version.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Gets an identifier for the address version associated with WS-Addressing 1.0.</summary>
      <returns>A singleton instance that identifies the <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that is associated with WS-Addressing 1.0.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressingAugust2004">
      <summary>Gets the version of WS-Addressing that is associated with WS-Addressing August 2004.</summary>
      <returns>A singleton instance that identifies the <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that is associated with WS-Addressing August 2004.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement">
      <summary>Represents a custom binding element that supports channel security using asymmetric encryption. This binding element signs the message using the sender's authentication token and encrypts the message using the recipient's token.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor">
      <summary>Creates an instance of this class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> with the specified recipient token parameters.</summary>
      <param name="recipientTokenParameters">Defines the token for the recipient (for example, the server's X.509 certificate).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> with the specified recipient and initiator token parameters.</summary>
      <param name="recipientTokenParameters">Defines the token for the recipient (for example the server's X.509 certificate).</param>
      <param name="initiatorTokenParameters">Defines the token for the initiator (for example, the client's X.509 certificate).</param>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply">
      <summary>Gets or sets a value that indicates whether serializing a signing token on a reply message is allowed. </summary>
      <returns>true if serializing a signing token on a reply message is allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone">
      <summary>Creates a new instance of this class initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object with property values equal to those of the current instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" /> or null if the object is not found.</returns>
      <param name="context"></param>
      <typeparam name="T">The object to get.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters">
      <summary>Specifies the token definition for the initiator.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> that holds the token definition.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder">
      <summary>Gets or sets the order of message encryption and signing for this binding.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Security.MessageProtectionOrder" /> values that specify how the message is protected. The default is <see cref="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid member of the enumeration.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters">
      <summary>Specifies the token definition for the recipient.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> that holds the token definition.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation">
      <summary>Gets or sets a value that indicates whether message signatures must be confirmed. </summary>
      <returns>true if message signatures must be confirmed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)">
      <summary>Sets a value that indicates whether derived keys are required. </summary>
      <param name="requireDerivedKeys">true if derived keys are required; otherwise, false. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about bindings, which is added to the Web Services Description Language (WSDL) information.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString">
      <summary>Returns a string that represents this <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> instance.</summary>
      <returns>The current <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>The binding element that specifies the .NET Binary Format for XML used to encode messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.</summary>
      <returns>true if the specified channel listener stack can be built on the service; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> object initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> object with property values equal to those of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Creates a factory for binary message encoders that employ the SOAP and WS-Addressing versions and the character encoding specified by the current encoding binding element.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that this binding element creates.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Gets or sets the maximum number of XML readers that are allocated to a pool and are ready for use to process incoming messages.</summary>
      <returns>The maximum number of readers to be kept in the pool. The default value is 64 readers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize">
      <summary>Gets or sets the maximum amount of memory available within a session for optimizing transmission procedures.</summary>
      <returns>The maximum size, in bytes, of a session. The default value is 2048 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Gets or sets the maximum number of XML writers that are allocated to a pool and are ready for use to process outgoing messages.</summary>
      <returns>The maximum number of writers to be kept in the pool. The default value is 16 writers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used or expected.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is an unsupported envelope version.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas">
      <summary>Gets constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following remarks section.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Writes custom binary message encoding elements into the generated metadata for an endpoint.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that exports the metadata information.</param>
      <param name="policyContext">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Writes custom binary message encoding elements into the generated WSDL for a contract.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Writes custom binary message encoding elements into the generated WSDL for an endpoint.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> object that provides mappings from exported WSDL elements to the endpoint description.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class with a default name and namespace. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class from a specified binding of the service.</summary>
      <param name="name">The <see cref="P:System.ServiceModel.Channels.Binding.Name" /> of the binding.</param>
      <param name="ns">The <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> of the binding.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</returns>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="parameters">The object array that specifies requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified by a collection of binding parameters.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="listenUriRelativeAddress">The address, relative to the base address, on which the service listens.</param>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="listenUriRelativeAddress">The address, relative to the base address, on which the service listens.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="listenUriRelativeAddress">The address, relative to the base address, on which the service listens.</param>
      <param name="listenUriMode">A value of the <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.</param>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="listenUriRelativeAddress">The address, relative to the base address, on which the service listens.</param>
      <param name="listenUriMode">A value of the <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.</summary>
      <returns>true if the specified channel factory stack can be build on the client; otherwise, false.</returns>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel for which the factory is being tested.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.</summary>
      <returns>true if the specified channel factory stack can be build on the client; otherwise, false.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel for which the factory is being tested.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])">
      <summary>Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the criteria specified in an array of objects.</summary>
      <returns>true if the specified channel listener stack can be build on the service; otherwise, false.</returns>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel for which the listener is being tested.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the collection of binding parameters specified.</summary>
      <returns>true if the specified channel listener stack can be build on the service; otherwise, false.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel for which the listener is being tested.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Gets or sets the interval of time provided for a connection to close before the transport raises an exception.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out. The default value is 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding. </summary>
      <returns>A <see cref="T:System.Collections.Generic.ICollection`1" /> object of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains the binding elements from the current binding object in the correct order.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Gets the message version used by clients and services configured with the binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by clients and services configured with the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Gets or sets the name of the binding.</summary>
      <returns>The name of the binding. The default name is null.</returns>
      <exception cref="T:System.ArgumentException">The value set cannot be null or an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Gets or sets the XML namespace of the binding.</summary>
      <returns>The XML namespace of the binding. The default value is "http://tempuri.org/".</returns>
      <exception cref="T:System.ArgumentNullException">The value set cannot be null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Gets or sets the interval of time provided for a connection to open before the transport raises an exception.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out. The default value is 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies how long the application has to receive a message before timing out. The default value is 10 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.</summary>
      <returns>The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies how long the write operation has to complete before timing out. The default value is 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Provides information about the addresses, bindings, binding elements and binding parameters required to build the channel listeners and channel factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingContext" /> class for a specified binding and collection of binding parameters.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.CustomBinding" /> for the channel.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> for the channel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection,System.Uri,System.String,System.ServiceModel.Description.ListenUriMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingContext" /> class for a specified binding, collection of binding parameters, and address for the endpoint at which the service listens.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.CustomBinding" /> for the channel.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> for the channel.</param>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> at which the service endpoint listens.</param>
      <param name="listenUriRelativeAddress">The relative address at which the service endpoint listens.</param>
      <param name="listenUriMode">The <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="T:System.ServiceModel.Description.ListenUriMode" /> is not defined.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Gets the binding for the channel built in the current context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.CustomBinding" /> for the channel built in the current context.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Gets the collection of binding parameters for the channel built in the current context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> for the channel built in the current context.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Builds the inner channel factory for channels of a specified type below the current channel factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> that represents the inner channel factory of the current channel factory.</returns>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object the inner channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelListener``1">
      <summary>Builds an inner channel listener that listens for a specified type of channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> that represents the inner channel listener of the current channel factory.</returns>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object for which the inner channel listener listens.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Returns a value that indicates whether the inner channel factory can produce a specified type of channel.</summary>
      <returns>true if the inner channel factory can produce the specified <paramref name="TChannel" />; otherwise, false.</returns>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object the inner channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelListener``1">
      <summary>Returns a value that indicates whether the inner channel listener can be built to listen for a specified type of channel.</summary>
      <returns>true if the inner channel listener can be built to listen for the <paramref name="TChannel" /> specified; otherwise, false.</returns>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object for which the inner channel listener listens.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Returns a copy of the current channel build context.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingContext" /> object that is a copy of the current channel build context.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.ListenUriBaseAddress">
      <summary>Gets or sets the URI that provides the base address at which the service endpoint listens.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the service endpoint listens.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.ListenUriMode">
      <summary>Gets or sets a value that indicates whether the transport must ensure that the URI provided for the service to listen on is unique. </summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.ListenUriRelativeAddress">
      <summary>Gets or sets the URI that provides the relative address at which the service endpoint listens.</summary>
      <returns>The relative address at which the service endpoint listens.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Gets the binding elements that are used by other binding elements to construct the channel stack.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the binding elements that are used by other binding elements to construct the channel stack.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel factory for producing channels of a specified type from the binding context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element. </param>
      <typeparam name="TChannel">The type of channel the factory builds.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel listener to accept channels of a specified type from the binding context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</param>
      <typeparam name="TChannel">The type of channel the listener is built to accept.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element. </param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> can be built by the binding element; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element. </param>
      <typeparam name="TChannel">The type of channel the listener accepts.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>When overridden in a derived class, returns a copy of the binding element object.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not present.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Represents the collection of binding elements used in a binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> class from an enumerable set of binding elements.</summary>
      <param name="elements">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> of generic type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> class from an array of binding elements.</summary>
      <param name="elements">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Adds binding elements from an array to the collection of binding elements.</summary>
      <param name="elements">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be added to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Creates a copy of the binding element collection.</summary>
      <returns>A copy of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Returns a value that indicates whether a specified type of binding element belongs to the collection of binding elements.</summary>
      <returns>true if the type of binding element specified is contained in the collection; otherwise, false.</returns>
      <param name="bindingElementType">The type of binding element being tested for inclusion in the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Returns the first item of a specified type from the collection of binding elements.</summary>
      <returns>The item of type <see cref="T:System.Type" /> if found; if not found, 0 if <paramref name="T" /> is a value type and null if <paramref name="T" /> is a reference type.</returns>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Returns all of the items of a specified type from the collection of binding elements.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of all of the items of type <see cref="T:System.Type" /> if found; if none are found, 0 if <paramref name="T" /> is a value type and null if <paramref name="T" /> is a reference type.</returns>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Inserts a binding element at a specified location within a collection of binding elements.</summary>
      <param name="index">The location at which to insert the binding element in the collection.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be inserted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Removes a binding element of a specified type from the collection of binding elements.</summary>
      <returns>The item of type <see cref="T:System.Type" /> removed.</returns>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Removes all of the binding elements of a specified type from the collection of binding elements.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of all of the items of type <see cref="T:System.Type" /> found.</returns>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Replaces a binding element at the specified index in the collection of binding elements.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for <see cref="T:System.ServiceModel.Channels.BindingElement" /> item at the specified <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Represents a collection of binding parameters that store information used by binding elements to build factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Represents the writer of the message body.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BodyWriter" /> class that explicitly indicates whether to buffer.</summary>
      <param name="isBuffered">true if the body writer can be called multiple times; otherwise false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)">
      <summary>Creates a buffered copy of the body.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BodyWriter" /> that contains a copy of this object.</returns>
      <param name="maxBufferSize">The maximum size of the buffer for the body.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="maxBufferSize" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">The body has already been written and cannot be written again, or the body writer is not buffered.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Gets a value that indicates whether the write method can be called multiple times.</summary>
      <returns>true if the body writer can be called multiple times; otherwise false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Provides an extensibility point when the body contents are written.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BodyWriter" /> with the specified maximum buffer size.</returns>
      <param name="maxBufferSize">The maximum size of the buffer for the body.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>When implemented, provides an extensibility point when the body contents are written.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write out the message body.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Writes out the contents of the message body.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write out the message body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Many Windows Communication Foundation (WCF) features require the use of buffers, which are expensive to create and destroy. You can use the <see cref="T:System.ServiceModel.Channels.BufferManager" /> class to manage a buffer pool. The pool and its buffers are created when you instantiate this class and destroyed when the buffer pool is reclaimed by garbage collection. Every time you need to use a buffer, you take one from the pool, use it, and return it to the pool when done. This process is much faster than creating and destroying a buffer every time you need to use one.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BufferManager" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Releases the buffers currently cached in the manager.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Creates a new BufferManager with a specified maximum buffer pool size and a maximum size for each individual buffer in the pool.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.BufferManager" /> object with the specified parameters.</returns>
      <param name="maxBufferPoolSize">The maximum size of the pool.</param>
      <param name="maxBufferSize">The maximum size of an individual buffer.</param>
      <exception cref="T:System.InsufficientMemoryException">There was insufficient memory to create the requested buffer pool.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> or <paramref name="maxBufferSize" /> was less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Returns a buffer to the pool.</summary>
      <param name="buffer">A reference to the buffer being returned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> reference cannot be null.</exception>
      <exception cref="T:System.ArgumentException">Length of <paramref name="buffer" /> does not match the pool's buffer length property.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Gets a buffer of at least the specified size from the pool. </summary>
      <returns>A byte array that is the requested size of the buffer.</returns>
      <param name="bufferSize">The size, in bytes, of the requested buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> cannot be less than zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Provides the base implementation for custom channels.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelBase" /> class. </summary>
      <param name="channelManager">The <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> that provides default timeouts for the channel operations (send, receive, open, and close).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Gets the default interval of time provided for a receive operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Gets the default interval of time provided for a send operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Returns the typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object <paramref name="T" /> requested, if it is present, or null, if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Gets the channel manager that is associated with the current channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> that is associated with the current channel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Uses diagnostic tracing during the transition into the closing state.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Gets the interval of time after which the close method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the close method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Gets the interval of time after which the open method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the open method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Gets the interval of time after which the receive method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the receive method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Gets the interval of time after which the send method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the send method to time out.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Provides a common base implementation for all custom channel factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> class with specified default communication timeouts.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> specifying the default timeouts for open, send, receive, and close operations when exchanging messages. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Gets the default interval of time provided for a receive operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Gets the default interval of time provided for a send operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object T requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close each of the channels that were created by the factory.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on close operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on close completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close channels that were opened by the factory.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.</summary>
      <typeparam name="TChannel">The type of channel the factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> class with the default communication timeouts specified.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Creates a particular type of channel with a specified endpoint address.</summary>
      <returns>A channel of type <paramref name="TChannel" /> with the specified <paramref name="address" />.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a particular type of channel with specified transport and endpoint addresses.</summary>
      <returns>A channel of type <paramref name="TChannel" /> with the specified remote and transport addresses.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Aborts each channel managed by the channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on-close operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the on-close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on-close operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Closes all the channels associated with the channel factory within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>When implemented in a derived class, provides an extensibility point when creating channels.</summary>
      <returns>A channel of type <paramref name="TChannel" /> with the specified addresses.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Confirms that the channel factory is opened and ready to create channels.</summary>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.InvalidOperationException">The current channel factory is not in the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelListenerBase">
      <summary>Provides a common base implementation for channel listeners on the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class with specified default communication timeouts.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous wait for a channel operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the wait for a channel operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.</param>
      <exception cref="T:System.InvalidOperationException">The channel listener has not been opened and so cannot be used.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout">
      <summary>Gets the default interval of time provided for a receive operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout">
      <summary>Gets the default interval of time provided for a send operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)">
      <summary>When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.</summary>
      <returns>true if a message arrived; otherwise false.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object T requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on begin wait operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on begin wait operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on begin wait completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)">
      <summary>When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.</summary>
      <returns>true if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise false.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)">
      <summary>When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.</summary>
      <returns>true if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise false.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on wait for a channel operation has to complete before timing out.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.Uri">
      <summary>When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.</summary>
      <returns>The <see cref="T:System.Uri" /> on which the channel listener listens for incoming channels.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)">
      <summary>When implemented in a derived class, waits for a channel to arrive.</summary>
      <returns>true if a channel arrived before the interval of time specified by the <paramref name="timeout" /> expired; otherwise false.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the wait for a channel operation has to complete before timing out.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelListenerBase`1">
      <summary>Provides a common base implementation for channel listeners on a service to accept channels produced by the client factories.</summary>
      <typeparam name="TChannel">The type of channel the channel listeners accept.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> class with specified default communication timeouts.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel">
      <summary>Accepts a channel of the type specified by the current channel listener.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)">
      <summary>Accepts a channel of the type specified by the current channel listener within a specified interval of time.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a channel of the type specified by the current channel listener.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation. </returns>
      <param name="callback">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
      <param name="state">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class, begins an asynchronous operation to accept a channel of the type specified by the current channel listener within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)">
      <summary>When implemented in a derived class, completes an asynchronous operation to accept a channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)">
      <summary>When implemented in a derived class, provides an extensibility point when accepting a channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class, provides an asynchronous extensibility point when beginning to accept a channel.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)">
      <summary>When implemented in a derived class, provides an asynchronous extensibility point when completing the acceptance a channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Provides a base implementation for managing the default timeouts that are associated with channel and listener factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>When overridden in a derived class, gets the default interval of time a channel has to complete the reception of a message.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the channel has to complete the reception of a message before timing out once the receive method has been invoked.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>When overridden in a derived class, gets the default interval of time a channel has to complete the sending of a message.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the channel has to complete the sending of a message before timing out once the send method has been invoked.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Gets the interval of time after which the close method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the close method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Gets the interval of time after which the open method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the open method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Gets the interval of time after which the receive method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the receive method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Gets the interval of time after which the send method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the send method to time out.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Represents a collection of channel parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> class. </summary>
      <param name="channel">The channel whose parameters are in this collection.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Gets the channel whose parameters are in this collection. </summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> whose parameters are in this collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Clears the collection of parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Inserts the specified item into the collection using the specified index.</summary>
      <param name="index">The index of the item in the collection.</param>
      <param name="item">The item to add to the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Adds the parameters in the current collection to a specified channel's <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />.</summary>
      <param name="innerChannel">The channel that receives the current collection's parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Removes a parameter from the collection.</summary>
      <param name="index">Index of the parameter to remove.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Replaces an item in the collection at a specified index.</summary>
      <param name="index">Index of the item to replace.</param>
      <param name="item">Value of the replacement item.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelPoolSettings">
      <summary>Specifies quotas for channels that belong to a pool of channels used by a service endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelPoolSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout">
      <summary>Get or sets the maximum interval of time for which the channels in the pool can be idle before being closed.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the maximum interval of time for which the channels in the pool can be idle before being closed. The default value is 2 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or greater than T:System.Int32.MaxValue in milliseconds.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout">
      <summary>Gets or sets the lifetime of a channel, after which it is closed.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the lifetime of a channel, after which it is closed. The default value is 10 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint">
      <summary>Gets or sets the maximum number of channels connecting to remote endpoints that can be initiated by the service.</summary>
      <returns>A positive integer that specifies the maximum number of channels to a remote endpoint in the pool that can be initiated by the service. The default value is 10 channels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Provides a common base implementation for the basic state machine common to all communication-oriented objects in the system, including channels, listeners, and the channel and listener factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> class with the mutually exclusive lock to protect the state transitions specified.</summary>
      <param name="mutex">The mutually exclusive lock that protects the class instance during a state transition.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Causes a communication object to transition immediately from its current state into the closing state.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> base class method not called.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object with a specified timeout.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Causes a communication object to transition from its current state into the closed state.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Causes a communication object to transition from its current state into the closed state within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Occurs when a communication object transitions into the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Occurs when a communication object transitions into the closing state.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>When overridden in a derived class, gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>When overridden in a derived class, gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Causes a communication object to transition from its current state into the faulted state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Occurs when a communication object transitions into the faulted state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Gets the type of communication object.</summary>
      <returns>The type of communication object.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Gets a value that indicates whether the communication object has been disposed.</summary>
      <returns>true if the communication object is in a closed state; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on close operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on open operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on open operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on close operation has to complete before timing out.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Invoked during the transition of a communication object into the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Invoked during the transition of a communication object into the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation on the close of a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> method.</param>
      <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation on the open of a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> method.</param>
      <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Inserts processing on a communication object after it transitions to the faulted state due to the invocation of a synchronous fault operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on open operation has to complete before timing out.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Invoked during the transition of a communication object into the opened state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Invoked during the transition of a communication object into the opening state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Causes a communication object to transition from the created state into the opened state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The interval of time specified by <paramref name="timeout" /> that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Occurs when a communication object transitions into the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Occurs when a communication object transitions into the opening state.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Gets a value that indicates the current state of the communication object.</summary>
      <returns>A value from the <see cref="T:System.ServiceModel.CommunicationState" /> enumeration that indicates the current state of the object.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Gets the mutually exclusive lock that protects the class instance during a state transition.</summary>
      <returns>The mutually exclusive lock that protects the class instance during a state transition.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>Throws an exception if the communication object is disposed.</summary>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>Throws an exception if the communication object the <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> property is not set to the <see cref="F:System.ServiceModel.CommunicationState.Created" /> state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>Throws an exception if the communication object is not in the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be used.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
      <summary>Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a channel factory that can create a composite duplex channel.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> that creates a composite duplex channel of type <paramref name="TChannel" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel factory.</param>
      <typeparam name="TChannel">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the factory produces.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> and is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a channel listener that can accept a composite duplex channel.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> that accepts a composite duplex channel of type <paramref name="TChannel" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</param>
      <typeparam name="TChannel">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IInputChannel" /> and is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</param>
      <typeparam name="TChannel">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the channel factory produces.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.</summary>
      <returns>true if the channel listener can be built for the build required to accept the specified type of channel; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</param>
      <typeparam name="TChannel">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
      <summary>Gets or sets the base address for the client.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the base address for the client.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
      <summary>Returns a deep clone of the current binding element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> that is a deep clone of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a typed object requested from the appropriate layer in one of the channel stacks.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is supported; or null if it is not.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel.</param>
      <typeparam name="T">The typed object whose support is being tested.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CompositeDuplexBindingElementImporter">
      <summary>Provides a policy import extension for mapping policy assertions into Windows Communication Foundation (WCF) bindings in which the client must expose an endpoint for the service to send messages back to the client. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElementImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Imports custom policy assertions for composite duplex bindings.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> that imports the metadata information.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> object that contains the policy assertions that can be imported and the collections of binding elements to which custom binding elements that implements the policy can be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="importer" /> or <paramref name="context" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement">
      <summary>An abstract class that supplements the base <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> with additional properties that are common to connection-oriented transports such as TCP and named pipes.  </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <returns>true if a channel factory can be built; otherwise false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel listener of the specified type can be built.</summary>
      <returns>true if a channel listener can be built; otherwise false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout">
      <summary>Gets or sets the time limit for initializing a channel to be accepted. </summary>
      <returns>A <see cref="T:System.TimeSpan" /> after which a channel initialization request times out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize">
      <summary>Gets or sets the size of the buffer used to transmit a chunk of the serialized message on the wire from the client or service.</summary>
      <returns>The size of the connection buffer. The default value is 8192 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets properties from the binding stack, if present.</summary>
      <returns>A <paramref name="T" /> object from the binding stack, if present.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="T">Type of the property.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostNameComparisonMode" /> value that indicates whether the hostname is included when routing incoming requests to an endpoint URI. The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname and port number in the comparison. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.ServiceModel.HostnameComparisonMode" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use. For streamed messages, this value should be at least the maximum possible size of the message headers, which are read in buffered mode.</summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay">
      <summary>Gets or sets the maximum interval of time that a chunk of a message or a full message can remain buffered in memory before being sent out.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the maximum interval of time that a chunk of a message or a full message can remain buffered in memory before being sent out. The default value is 2 seconds. This property is only meaningful if the <see cref="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching" /> property of an outgoing message is set to true. Otherwise, this value is ignored and messages are sent immediately. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts">
      <summary>Gets or sets the maximum number of pending asynchronous accept operations that are available for processing incoming connections to the service.  </summary>
      <returns>The maximum number of connections the service can accept simultaneously. The default value is 1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections">
      <summary>Gets or sets the maximum number of connections awaiting dispatch on the service.</summary>
      <returns>The maximum number of inbound connections awaiting dispatch on the service. The default value is 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about bindings.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exporter" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">Provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="endpointContext">Provides mappings from exported WSDL elements to the endpoint description.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode">
      <summary>Gets or sets a value that indicates whether the messages are buffered or streamed with the connection-oriented transport.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransferMode" /> value which indicates whether a channel uses streamed or buffered modes of message transfer. The default is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.ServiceModel.TransferMode" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Defines a binding from a list of binding elements. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class with the binding elements from a complete channel stack.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains the binding elements of the channel stack in top-down order.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class from the values of a specified binding.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> that is used to initialize the custom binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class from an array of binding elements.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the custom binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class. </summary>
      <param name="configurationName">A value of the configurationName attribute that identifies the binding element whose settings are used to initialize the binding.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element identified by the <paramref name="configurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class from an array of binding elements with a specified name and namespace.</summary>
      <param name="name">The name of the binding.</param>
      <param name="ns">The namespace of the binding.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the custom binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Returns a generic collection of the binding elements from the custom binding.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> object of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains the binding elements from the custom binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Gets the binding elements from the custom binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the binding elements from the custom binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Gets the URI scheme for transport used by the custom binding.</summary>
      <returns>The URI scheme for transport used by the custom binding; or an empty string if there is no transport (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> is null).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.DeliveryFailure">
      <summary>Specifies the possible types of delivery failure for a message read from the queue.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.Unknown">
      <summary>An unknown error occurred.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.AccessDenied">
      <summary>The sender does not have access rights to place messages in the destination queue.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.BadDestinationQueue">
      <summary>The destination queue was not found.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.BadEncryption">
      <summary>The destination queue manager cannot decrypt the message.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.BadSignature">
      <summary>The destination queue manager cannot authenticate the message because the attached signature is invalid.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.CouldNotEncrypt">
      <summary>The source queue manager cannot encrypt the message.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.HopCountExceeded">
      <summary>The message hop count was exceeded, which indicates the number of intermediate servers.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.NotTransactionalQueue">
      <summary>A transactional message was sent to a nontransactional queue.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.NotTransactionalMessage">
      <summary>A nontransactional message was sent to a transactional queue.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.Purged">
      <summary>The message was purged before reaching the destination queue.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.QueueDeleted">
      <summary>The destination queue was deleted before the message could be delivered to the application.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.QueueExceedMaximumSize">
      <summary>The message was not delivered because the destination queue is full.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.QueuePurged">
      <summary>The queue was purged and the message no longer exists.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.ReachQueueTimeout">
      <summary>The message did not reach the destination queue before timing out.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryFailure.ReceiveTimeout">
      <summary>The message was not delivered to the application on time. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.DeliveryStatus">
      <summary>An enumeration that specifies the delivery status of a message when the delivery of the message is in doubt, or when the message was not delivered.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryStatus.InDoubt">
      <summary>The delivery of the message is in doubt.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.DeliveryStatus.NotDelivered">
      <summary>The message was not delivered.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.FaultConverter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Gets the default fault converter.</summary>
      <returns>An instance of <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">The message version.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Tries to create the exception.</summary>
      <returns>true if fault was successfully converted; otherwise, false. The default is false.</returns>
      <param name="message">The fault message.</param>
      <param name="fault">The fault.</param>
      <param name="exception">If conversion is successful, the SOAP exception, returned as an out parameter.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Tries to create the fault message once the fault has been converted to a SOAP exception.</summary>
      <returns>true if fault message was successfully created; otherwise, false. The default is false.</returns>
      <param name="exception">The SOAP exception.</param>
      <param name="message">The fault message returned as an out parameter.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Wraps <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> with error checking.</summary>
      <returns>true if fault was successfully converted; otherwise, false. The default is false.</returns>
      <param name="message">The fault message.</param>
      <param name="fault">The fault.</param>
      <param name="exception">If conversion is successful, the SOAP exception, returned as an out parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> or <paramref name="fault" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> returned true but <paramref name="exception" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> returned false but <paramref name="exception" /> is not null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Wraps <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" /> with error checking.</summary>
      <returns>true if fault message was successfully created; otherwise, false. The default is false.</returns>
      <param name="exception">The SOAP exception.</param>
      <param name="message">The fault message returned as an out parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> returned true but <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> returned false but <paramref name="message" /> is not null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>Provides access to the HTTP request to access and respond to the additional information made available for requests over the HTTP protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>Gets the HTTP headers from the HTTP request.</summary>
      <returns>Returns a <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers in the HTTP request.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>Gets or sets the HTTP verb for the HTTP request.</summary>
      <returns>The HTTP verb for the HTTP request.</returns>
      <exception cref="T:System.ArgumentNullException">The value is set to null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>Gets the name of the message property associated with the <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> class.</summary>
      <returns>The value "httpRequest".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>Gets or sets the query string for the HTTP request.</summary>
      <returns>The query string from the HTTP request.</returns>
      <exception cref="T:System.ArgumentNullException">The value is set to null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>Gets or sets a value that indicates whether the body of the message is ignored and only the headers are sent.</summary>
      <returns>true if the message body is suppressed; otherwise, false. The default is false. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>Provides access to the HTTP response in order to access and respond to the additional information made available for requests over the HTTP protocol. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>Gets the HTTP headers from the HTTP response.</summary>
      <returns>Returns a <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers in the HTTP response.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>Gets the name of the message property associated with the <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" /> class.</summary>
      <returns>Returns "httpResponse".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>Gets or sets the status code of the current HTTP response to which this property is attached.</summary>
      <returns>Returns the <see cref="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode" /> to send on the HTTP response.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is set to less than 100 or greater than 599.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>Gets or sets the description of the status code of the current HTTP response to which this property is attached.</summary>
      <returns>Returns the <see cref="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription" /> to send for the HTTP response.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.SuppressEntityBody">
      <summary>Gets or sets a value that indicates whether the body of the message is ignored and an empty message is sent.</summary>
      <returns>true if the message body is suppressed; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>Represents the binding element used to specify an HTTPS transport for transmitting messages. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> class.</summary>
      <param name="elementToBeCloned">An instance of the <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory of a specified type that can be used to create a channel.</summary>
      <returns>A channel factory of the specified type that is configured based on the values set in the transport binding element.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of a specified type that can be used to create a channel.</summary>
      <returns>A channel listener of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>A copy of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or null if the object isn't found.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetTransportTokenAssertion">
      <summary>Gets the <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the security binding.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the security binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.RequireClientCertificate">
      <summary>Gets or sets a value that indicates whether SSL client authentication is required.</summary>
      <returns>true if SSL client authentication is required; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport, which is "HTTPS".</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>Represents the binding element used to specify an HTTP transport for transmitting messages. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> class. </summary>
      <param name="elementToBeCloned">An instance of the <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> class.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme">
      <summary>Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP listener.</summary>
      <returns>The <see cref="T:System.Net.AuthenticationSchemes" /> enumeration that specifies the protocols used for client authentication. The default is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
      <exception cref="T:System.ArgumentException">The value for the <see cref="T:System.Net.AuthenticationSchemes" /> was already set.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <returns>A channel factory of the specified type.</returns>
      <param name="context"></param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of the specified type.</summary>
      <returns>A channel listener of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether proxies are ignored for local addresses.</summary>
      <returns>true if proxies are ignored for local addresses; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <returns>true if a channel factory can be built; otherwise false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel listener of the specified type can be built.</summary>
      <returns>true if a channel listener can be built; otherwise false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>A copy of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The property to get.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> enumeration value that indicates whether the hostname is included when routing incoming requests to an endpoint URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is not defined.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled">
      <summary>Gets or sets a value that indicates whether to make a persistent connection to a service endpoint.  </summary>
      <returns>true if the request to the service endpoint should contain a Connection HTTP header with the value Keep-alive; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use. For buffered messages this value is the same as <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />. For streamed messages, this value is the maximum size of the SOAP headers, which must be read in buffered mode.</summary>
      <returns>The maximum size, in bytes, of the buffer. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress">
      <summary>Gets or sets a URI that contains the address of the proxy to use for HTTP requests.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the address for the proxy. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme">
      <summary>Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP proxy.</summary>
      <returns>The <see cref="T:System.Net.AuthenticationSchemes" /> enumeration that specifies the protocols used for client authentication on the proxy. The default is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Realm">
      <summary>Gets or sets the authentication realm.</summary>
      <returns>The authentication realm. The default value is "".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>Returns <see cref="F:System.Uri.UriSchemeHttp" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about bindings.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">Provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="endpointContext">Provides mappings from exported WSDL elements to the endpoint description.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode">
      <summary>Gets or sets the transfer mode.</summary>
      <returns>One of the following member values of <see cref="P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode" />:BufferedStreamedStreamedRequestStreamedResponse</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.UnsafeConnectionNtlmAuthentication">
      <summary>Gets or sets a value that indicates whether Unsafe Connection Sharing is enabled on the server. If enabled, NTLM authentication is performed once on each TCP connection.</summary>
      <returns>true if Unsafe Connection Sharing is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user specific settings.</summary>
      <returns>true if the machine-wide proxy settings are used; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IBindingDeliveryCapabilities">
      <summary>Defines the interface that bindings must implement to describe and advertise the capabilities that clients and services may require.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.AssuresOrderedDelivery">
      <summary>Gets a value that indicates whether the binding can support assurances for the delivery of messages in the order they were sent.</summary>
      <returns>true if messages must be delivered in the order in which they were sent; false, if the messages might not be delivered in this order.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.QueuedDelivery">
      <summary>Gets a value that indicates whether the binding can support the queued delivery of messages.</summary>
      <returns>true if queued messages delivery is supported; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IBindingMulticastCapabilities">
      <summary>Defines the optional interface that a binding can implement to specify whether the service it configures has multicast capabilities.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingMulticastCapabilities.IsMulticast">
      <summary>Gets a value that indicates whether the binding configures the service to have multicast capabilities.</summary>
      <returns>true if the service has multicast capabilities.; false otherwise. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IBindingRuntimePreferences">
      <summary>Defines the optional contract that a binding can implement to specify whether incoming requests are handled synchronously or asynchronously by the service.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</summary>
      <returns>true if requests can be handled more efficiently synchronously; otherwise false. The default is false, to handle requests asynchronously.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Defines the basic interface that all channel objects must implement. It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Defines the interface that must be implemented by a channel factory to produce channels.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object <paramref name="T" /> requested, if it is present, or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Defines the interface that must be implemented by channel factories that create type-specific channels.</summary>
      <typeparam name="TChannel">The type of channel that the channel factory creates.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Creates a channel of a specified type to a specified endpoint address.</summary>
      <returns>A channel of type <paramref name="TChannel" /> to the specified endpoint address.</returns>
      <param name="to">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.</summary>
      <returns>A channel of type <paramref name="TChannel" /> to the specified endpoint address and transport address.</returns>
      <param name="to">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelListener">
      <summary>Defines the interface that must be implemented by a channel listener to accept channels.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous wait for a channel operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the wait for a channel operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to wait for channels to arrive.</summary>
      <returns>true if a message arrived; otherwise false.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object <paramref name="T" /> requested, if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.IChannelListener.Uri">
      <summary>Gets the URI on which the listeners that are generated by the factory listen.</summary>
      <returns>The <see cref="T:System.Uri" /> on which the listeners that are generated by the factory listen.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)">
      <summary>Waits for a channel to arrive.</summary>
      <returns>true if a channel arrived before the interval of time specified by the <paramref name="timeout" />; otherwise false.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the wait for a channel operation has to complete before timing out.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelListener`1">
      <summary>Defines the interface that must be implemented by channel listeners to accept type-specific channels.</summary>
      <typeparam name="TChannel">The type of channel that the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel">
      <summary>Accepts a channel of a specified type for communication with a client.</summary>
      <returns>A channel of type <paramref name="TChannel" /> accepted by the listener.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)">
      <summary>Accepts a channel of a specified type for communication with a client within a specified interval of time.</summary>
      <returns>A channel of type <paramref name="TChannel" /> accepted by the listener.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the wait for a channel operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a channel.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous acceptance of a channel operation. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a channel within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous acceptance of a channel operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the wait for a channel operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to accept a channel.</summary>
      <returns>A channel of type <paramref name="TChannel" /> accepted by the listener.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel" /> method.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Defines the interface that a channel must implement to both send and receive messages. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to terminate the outbound session.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination. </returns>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session. </summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> methods.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Defines the interface that associates a duplex channel with a session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Defines the interface that a channel must implement to receive a message. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message that has a state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message reception. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for a message to become available.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for a message to become available.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous wait-for-a-message-to-arrive operation that has a specified time out and state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to wait for a message to arrive.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for a message to become available.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to receive a message. </summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received. </returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> methods.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Completes the specified asynchronous operation to receive a message.</summary>
      <returns>true if a message is received before the specified interval of time elapses; otherwise false.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> received. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Completes the specified asynchronous wait-for-a-message operation.</summary>
      <returns>true if a message has arrived before the <paramref name="timeout" /> has been exceeded; otherwise false.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that identifies the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> operation to finish, and from which to retrieve an end result.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Gets the address on which the input channel receives messages. </summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> on which the input channel receives messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Returns the message received, if one is available. If a message is not available, blocks for a default interval of time.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Returns the message received, if one is available. If a message is not available, blocks for a specified interval of time.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the receive operation has to complete before timing out and throwing a <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Tries to receive a message within a specified interval of time. </summary>
      <returns>true if a message is received before the <paramref name="timeout" /> has been exceeded; otherwise false.</returns>
      <param name="timeout">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> methods.</param>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> received. </param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Returns a value that indicates whether a message has arrived within a specified interval of time.</summary>
      <returns>true if a message has arrived before the <paramref name="timeout" /> has been exceeded; otherwise false.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> specifies the maximum interval of time to wait for a message to arrive before timing out.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Defines the interface for the session implemented on the receiving side of a one-way communication between messaging endpoints. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Defines the interface that associates an input channel with a session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Defines an interface that you can implement to describe a set of properties for a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Creates a copy of the current instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.InvalidChannelBindingException">
      <summary>The exception that is thrown when the binding specified is not consistent with the contract requirements for the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.InvalidChannelBindingException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.InvalidChannelBindingException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.InvalidChannelBindingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.InvalidChannelBindingException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.InvalidChannelBindingException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.InvalidChannelBindingException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.InvalidChannelBindingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.InvalidChannelBindingException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Defines the interface that a channel must implement to send a message. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a message to the destination of the output channel. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission. </returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous send operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous send operation.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation send completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous send operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to transmit a message to the destination of the output channel. </summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />  method. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Gets the destination of the service to which messages are sent out on the output channel. </summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the service to which the output channel sends messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Transmits a message to the destination of the output channel. </summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sends a message on the current output channel within a specified interval of time.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Gets the URI that contains the transport address to which messages are sent on the output channel.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Defines the interface for the session implemented on the sending side of a one-way communication between messaging endpoints. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Defines the interface that associates an output channel with a session. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IReplyChannel">
      <summary>Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive an available request with a default timeout.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous reception of the request. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive an available request with a specified timeout.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous reception of the request. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the reception of an available request.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive request operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the receive request operation has to complete before timing out and returning false.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request operation that has a specified time out and state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to wait for a request message to arrive.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the reception of an available request.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to receive an available request. </summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct a reply to the request. </returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
      <summary>Completes the specified asynchronous operation to receive a request message.</summary>
      <returns>true if a request message is received before the specified interval of time elapses; otherwise false.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> received.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest(System.IAsyncResult)">
      <summary>Completes the specified asynchronous wait-for-a-request message operation.</summary>
      <returns>true if a request is received before the specified interval of time elapses; otherwise false.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that identifies the <see cref="M:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)" /> operation to finish, and from which to retrieve an end result.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IReplyChannel.LocalAddress">
      <summary>Gets the address on which this reply channel receives messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> on which this reply channel receives messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest">
      <summary>Returns the context of the request received, if one is available. If a context is not available, waits until there is one available. </summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct replies. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest(System.TimeSpan)">
      <summary>Returns the context of the request received, if one is available. If a context is not available, waits until there is one available. </summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext" /> used to construct replies. </returns>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the receive of a request operation has to complete before timing out and returning false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
      <summary>Returns a value that indicates whether a request is received before a specified interval of time elapses. </summary>
      <returns>true if a request message is received before the specified interval of time elapses; otherwise false.</returns>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the receive of a request operation has to complete before timing out and returning false.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.RequestContext" /> received.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IReplyChannel.WaitForRequest(System.TimeSpan)">
      <summary>Returns a value that indicates whether a request message is received before a specified interval of time elapses.</summary>
      <returns>true if a request is received before the specified interval of time elapses; otherwise false.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long a request operation has to complete before timing out and returning false.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IReplySessionChannel">
      <summary>Defines the interface to associate a reply channel with a session</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Defines the contract that a channel must implement to be on the requesting side of a request-reply communication between messaging endpoints. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission. </returns>
      <param name="message">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission. </returns>
      <param name="message">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</param>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received. (For defaults, see the Remarks section.)</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to return a message-based response to a transmitted request. </summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request. </returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Gets the remote address to which the request channel sends messages. </summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> to which the request channel sends messages. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Sends a message-based request and returns the correlated message-based response. </summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request. </returns>
      <param name="message">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sends a message-based request and returns the correlated message-based response within a specified interval of time.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request. </returns>
      <param name="message">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</param>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Gets the transport address to which the request is send.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Defines the interface to associate a request channel with a session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISecurityCapabilities">
      <summary>Defines the contract for specifying the security capabilities for bindings.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel">
      <summary>Gets the protection level requests supported by the binding.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> that specifies the protection level requests supported by the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel">
      <summary>Gets the protection level responses supported by the binding.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> that specifies the protection level responses supported by the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportsClientAuthentication">
      <summary>Gets a value that indicates whether the binding supports client authentication.</summary>
      <returns>true if the binding can support client authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity">
      <summary>Gets a value that indicates whether the binding supports client Windows identity.</summary>
      <returns>true if the binding can support client Windows identity; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportsServerAuthentication">
      <summary>Gets a value that indicates whether the binding supports server authentication.</summary>
      <returns>true if the binding can support server authentication; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Defines the interface to establish a shared context among parties that exchange messages by providing an ID for the communication session. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Gets the ID that uniquely identifies the session. </summary>
      <returns>The ID that uniquely identifies the session. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Defines the interface that associates a channel with a specific type of session.</summary>
      <typeparam name="TSession">The type of <see cref="T:System.ServiceModel.Channels.ISession" /> associated with the cannel.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Gets the type of session associated with this channel. </summary>
      <returns>The type of <see cref="T:System.ServiceModel.Channels.ISession" /> associated with this channel. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ITransactedBindingElement">
      <summary>Represents an interface that should be implemented by binding elements that require the dispatcher to create a transaction before dispatching to the service method. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ITransactedBindingElement.TransactedReceiveEnabled">
      <summary>Gets a boolean value that specifies whether the transaction is enabled for a receive operation.</summary>
      <returns>true if transaction is enabled for a receive operation; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ITransportTokenAssertionProvider">
      <summary>Provides a transport token assertion (for example, an HTTPS token assertion) for use in policy exports.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ITransportTokenAssertionProvider.GetTransportTokenAssertion">
      <summary>Gets a transport token assertion.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents a transport token assertion.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>Specifies local client security settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.CacheCookies">
      <summary>Gets or sets a value that indicates whether secure conversation cookies are cached. </summary>
      <returns>true if cookies are cached; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>Creates a new instance of this class, which is a copy or clone of the current instance.</summary>
      <returns>A new instance of <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.CookieRenewalThresholdPercentage">
      <summary>Gets or sets the threshold percentage for renewal of secure conversation cookies.</summary>
      <returns>The threshold percentage for renewing secure conversation cookies. The default is 60 percent.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0 or greater than 100.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays">
      <summary>Gets or sets a value that indicates whether replay detection is enabled on messages the client receives from the service.</summary>
      <returns>true if replay detection is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.IdentityVerifier">
      <summary>Gets or sets the identity verifier.</summary>
      <returns>An instance of an implementation of the abstract class <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating. </summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum allowable time difference between the system clocks of the two parties that are communicating. The default is 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxCookieCachingTime">
      <summary>Gets or sets the maximum caching time for secure conversation cookies. </summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum caching time for secure conversation cookies. The default is 10675199 days.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReconnectTransportOnFailure">
      <summary>Gets or sets a value that indicates whether security sessions attempt to reconnect after transport failures.</summary>
      <returns>true if security sessions attempt to reconnect after transport failures; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayCacheSize">
      <summary>Gets or sets the number of cached nonces used for replay detection. </summary>
      <returns>The number of cached nonces used for replay detection. The default is 900000.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>Gets or sets the maximum time that a message nonce is valid.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum time that a message nonce is valid. The default is five minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.SessionKeyRenewalInterval">
      <summary>Gets or sets the time span after which the initiator renews the key for the security session.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the time span after which the initiator renews the key for the security session. The default is 10 hours.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.SessionKeyRolloverInterval">
      <summary>Gets or sets the time interval for which the previous session key is valid on incoming messages during a key renewal.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the time interval for which the previous session key is valid on incoming messages after a key renewal. The default is 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>Gets or sets the maximum duration that the messages are valid when sent by the client. If a message is received by the service after this duration, it should discard the message.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum duration that the messages are valid when sent by the client. The default is 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a valueless than 0.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalServiceSecuritySettings">
      <summary>Provides local service security properties that can be set.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone">
      <summary>Creates a new instance of this class from the current instance.</summary>
      <returns>A new instance of <see cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays">
      <summary>Gets or sets a value that indicates whether replay detection is enabled on the service. </summary>
      <returns>true if replay detection is enabled on the service; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout">
      <summary>Gets or sets the duration to wait before the channel is closed due to inactivity.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the duration to wait before the security session with the client is closed due to inactivity. The default is 2 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime">
      <summary>Gets or sets the lifetime for the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" /> that the service issues for the client.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the lifetime for new security cookies. The default is 10 hours.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies">
      <summary>Gets or sets the maximum number of <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />s that the service allows to cache at once.</summary>
      <returns>The maximum number of secure conversation cookies that can be cached by the service. When this limit is reached the service removes the oldest cached secure conversation cookies to make room for new secure conversation cookies. The default is 1000.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew">
      <summary>Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum allowable time difference between the system clocks of the two parties that are communicating. The default is 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions">
      <summary>Gets or sets the maximum number of concurrent security sessions that are established with the server for which it has issued a session token but for which no application messages are sent.</summary>
      <returns>The maximum number of concurrent security sessions. The default is 128.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations">
      <summary>Gets or sets the maximum number of concurrent security negotiations with clients that the service can participate in.</summary>
      <returns>The maximum number of concurrent security negotiations with clients that the service can participate in. The default is 128.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout">
      <summary>Gets or sets the maximum duration of the security negotiation phase between client and service.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum duration of the security negotiation phase between client and service. Any negotiation with the service (for example during message level SPNego or SSL authentication) must complete within this time. The default is 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure">
      <summary>Gets or sets a value that indicates whether security sessions attempt to reconnect after transport failures.</summary>
      <returns>true if security sessions attempt to reconnect after transport failures; otherwise false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize">
      <summary>Gets or sets the size of the nonce cache used for replay detection.</summary>
      <returns>The size of the nonce cache used for replay detection. The default is 900,000.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow">
      <summary>Gets or sets the maximum amount of time within which the service can accept a message.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum amount of time within which the service can accept a message. The default is 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval">
      <summary>Gets or sets the lifetime of a key used in a security session. When this interval expires the key is automatically renewed.</summary>
      <returns>The time span after which the service requires that the initiator renew the key used for the security session. If the initiator does not renew the key within this time the service sends back a fault to the initiator. The default is 15 hours.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval">
      <summary>Gets or sets the time interval after key renewal for which the previous session key is valid on incoming messages during a key renewal.</summary>
      <returns>The time interval after key renewal for which the previous session key is valid on incoming messages after a key renewal. The default is 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration">
      <summary>Gets or sets the maximum duration of time that messages are valid when sent by the service. If the client receives the service's message after this duration, it discards the message.</summary>
      <returns>The maximum duration of time that messages are valid when sent by the service. The default is 5 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than 0.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Represents the unit of communication between endpoints in a distributed environment. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Message" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Closes the <see cref="T:System.ServiceModel.Channels.Message" /> and releases any resources. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)">
      <summary>Stores an entire <see cref="T:System.ServiceModel.Channels.Message" /> into a memory buffer for future access.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</returns>
      <param name="maxBufferSize">The maximum size of the buffer to be created.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize " />is smaller than zero.</exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Creates a message that contains a SOAP fault, a version and an action.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="fault">A <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that represents a SOAP fault. </param>
      <param name="action">A description of how the message should be processed. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Version" />, <paramref name="fault" /> or <paramref name="action" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.FaultCode,System.String,System.Object,System.String)">
      <summary>Creates a message that contains a SOAP fault, a reason and the detail for the fault, version and action.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="faultCode">A <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that represents a SOAP fault. </param>
      <param name="reason">The reason of the SOAP fault. </param>
      <param name="detail">The details of the SOAP fault.</param>
      <param name="action">A description of how the message should be processed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" />, <paramref name="action" />, <paramref name="detail" /> or <paramref name="faultCode" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.FaultCode,System.String,System.String)">
      <summary>Creates a message that contains a SOAP fault, the reason for the fault, a version and an action.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="faultCode">A <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that represents a SOAP fault. </param>
      <param name="reason">The reason of the SOAP fault. </param>
      <param name="action">A description of how the message should be processed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" />, <paramref name="action" /> or <paramref name="faultCode" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Creates a message that contains a version and an action.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="action">A description of how the message should be processed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> or <paramref name="action" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Creates a message with the specified version, action and body. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message. </param>
      <param name="action">A description of how the message should be processed. </param>
      <param name="body">The body of the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> or <paramref name="body" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a message using the specified version, action, message body and serializer.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message. </param>
      <param name="action">A description of how the message should be processed. </param>
      <param name="body">The body of the message. </param>
      <param name="serializer">A <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> or <paramref name="action" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Creates a message with a body that consists of an array of bytes. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message. </param>
      <param name="action">A description of how the message should be processed. </param>
      <param name="body">A <see cref="T:System.ServiceModel.Channels.BodyWriter" /> of type byte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Version" />, <paramref name="action" /> or <paramref name="body" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Creates a message with the specified version, action and body. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message. </param>
      <param name="action">A description of how the message should be processed. </param>
      <param name="body">The body of the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> or <paramref name="body" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Creates a message using the specified reader, action and version. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message. </param>
      <param name="action">A description of how the message should be processed. </param>
      <param name="body">The <see cref="T:System.Xml.XmlReader" /> object to be used for reading the SOAP message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> or <paramref name="body" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlDictionaryReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Creates a message using the specified reader, action and version.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="envelopeReader">The <see cref="T:System.Xml.XmlDictionaryReader" /> object to be used for reading the SOAP message.</param>
      <param name="maxSizeOfHeaders">The maximum size in bytes of a header. </param>
      <param name="version">A valid <see cref="T:System.ServiceModel.Channels.MessageVersion" /> value that specifies the SOAP version to use for the message. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> or <paramref name="version" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Creates a message using the specified reader, action and version.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created. </returns>
      <param name="envelopeReader">The <see cref="T:System.Xml.XmlReader" /> object to be used for reading the SOAP message.</param>
      <param name="maxSizeOfHeaders">The maximum size in bytes of a header. </param>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> or <paramref name="version" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Retrieves the body of this <see cref="T:System.ServiceModel.Channels.Message" /> instance.</summary>
      <returns>An object of type <paramref name="T" /> that contains the body of this message.</returns>
      <typeparam name="T">The body of the message.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Retrieves the body of this <see cref="T:System.ServiceModel.Channels.Message" /> using the specified serializer.</summary>
      <returns>An object of type <paramref name="T" /> that contains the body of this message.</returns>
      <param name="serializer">A <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">The body of the message.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Retrieves the attributes of the message body.</summary>
      <returns>The attributes of the message body.</returns>
      <param name="localName">The local name of the XML node.The name of the element that corresponds to this member. This string must be a valid XML element name.</param>
      <param name="ns">The namespace to which this XML element belongs.The namespace URI of the element that corresponds to this member. The system does not validate any URIs other than transport addresses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> or <paramref name="ns" /> is null. </exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Gets the XML dictionary reader that accesses the body content of this message.</summary>
      <returns>A <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message is empty, or has been copied, read or written.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>When overridden in a derived class, gets the headers of the message. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that represents the headers of the message. </returns>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Returns a value that indicates whether the <see cref="T:System.ServiceModel.Channels.Message" /> is disposed. </summary>
      <returns>true if the message is disposed; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Returns a value that indicates whether the <see cref="T:System.ServiceModel.Channels.Message" /> is empty. </summary>
      <returns>true if the message is empty; otherwise, false. </returns>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Gets a value that indicates whether this message generates any SOAP faults.</summary>
      <returns>true if this message generates any SOAP faults; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the message body is converted to a string.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to convert the message body to a string. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Called when the message is closing.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnCreateBufferedCopy(System.Int32)">
      <summary>Called when a message buffer is created to store this message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</returns>
      <param name="maxBufferSize">The maximum size of the buffer to be created.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Called when the attributes of the message body is retrieved.</summary>
      <returns>The attributes of the message body.</returns>
      <param name="localName">The local name of the XML node.The name of the element that corresponds to this member. This string must be a valid XML element name.</param>
      <param name="ns">The namespace to which this XML element belongs.The namespace URI of the element that corresponds to this member. The system does not validate any URIs other than transport addresses.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Called when an XML dictionary reader that can access the body content of this message can be retrieved.</summary>
      <returns>A <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the message body is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write this message body to an XML file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the entire message is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write this message to an XML file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the start body is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write the start body to an XML file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the start envelope is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write the start envelope to an XML file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the start header is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write the start header to an XML file.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>When overridden in a derived class, gets a set of processing-level annotations to the message. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> that contains a set of processing-level annotations to the message.</returns>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Gets the current state of this <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageState" /> that contains the current state of this <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Closes all the resources used by this message. This method cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>The current <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>When overridden in a derived class, gets the SOAP version of the message. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that represents the SOAP version. </returns>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the body element using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the body element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Serializes the message body using the specified <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> object to be used to write the body of the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null. </exception>
      <exception cref="T:System.ObjectDisposedException">The message is disposed. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the body content using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the body element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the entire message using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null. </exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Serializes the entire message using the specified <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> object to be used to write the body of the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null. </exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the start body using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the start body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Serializes the start body using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the start body of the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the start envelope using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the start envelope.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " />is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Represents a memory buffer that stores an entire message for future consumption.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Gets the approximate number of bytes consumed by this <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </summary>
      <returns>The approximate number of bytes consumed by this <see cref="T:System.ServiceModel.Channels.MessageBuffer" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Finishes working with the buffer.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Returns a copy of the original message.</summary>
      <returns>An identical copy of the original <see cref="T:System.ServiceModel.Channels.Message" /> instance you previously provided to the <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> method of a <see cref="T:System.ServiceModel.Channels.Message" /> instance. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
      <summary>Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
      <summary>Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object, with the navigator positioned on the node specified.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</returns>
      <param name="nodeQuota">The location you want the navigator to be positioned on initially.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
      <summary>Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object, with the navigator positioned on the specified node and xml:space scope.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</returns>
      <param name="nodeQuota">The location you want the navigator to be positioned on initially.</param>
      <param name="space">A valid <see cref="T:System.Xml.XmlSpace" /> space.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
      <summary>Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object, with the specified xml:space scope.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this object.</returns>
      <param name="space">A valid <see cref="T:System.Xml.XmlSpace" /> space.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Gets the type of message content stored in this buffer.</summary>
      <returns>The type of message content stored in this buffer.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> and optionally releases the managed resources. This method cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Writes the entire content of this buffer to the specified IO stream.</summary>
      <param name="stream">An IO stream that the entire content of this buffer is written to.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>The encoder is the component that is used to write messages to a stream and to read messages from a stream.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>When overridden in a derived class, gets the MIME content type used by the encoder.</summary>
      <returns>The content type that is supported by the message encoder.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object <paramref name="T " />requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Returns a value that indicates whether a specified message-level content-type value is supported by the message encoder.</summary>
      <returns>true if the message-level content-type specified is supported; otherwise false.</returns>
      <param name="contentType">The message-level content-type being tested.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>When overridden in a derived class, gets the media type value that is used by the encoder.</summary>
      <returns>The media type that is supported by the message encoder.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>When overridden in a derived class, gets the message version value that is used by the encoder.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used by the encoder.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>When overridden in a derived class, reads a message from a specified buffer.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the buffer specified.</returns>
      <param name="buffer">A <see cref="T:System.ArraySegment`1" /> of type <see cref="T:System.Byte" /> that provides the buffer from which the message is deserialized.</param>
      <param name="bufferManager">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer from which the message is deserialized.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>When overridden in a derived class, reads a message from a specified stream.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the stream specified.</returns>
      <param name="buffer">A <see cref="T:System.ArraySegment`1" /> of type <see cref="T:System.Byte" /> that provides the buffer from which the message is deserialized.</param>
      <param name="bufferManager">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer from which the message is deserialized.</param>
      <param name="contentType">The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>When overridden in a derived class, reads a message from a specified stream.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the stream specified.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> object from which the message is read.</param>
      <param name="maxSizeOfHeaders">The maximum size of the headers that can be read from the message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>When overridden in a derived class, reads a message from a specified stream.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the stream specified.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> object from which the message is read.</param>
      <param name="maxSizeOfHeaders">The maximum size of the headers that can be read from the message.</param>
      <param name="contentType">The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Returns the content type that is used by the message encoder.</summary>
      <returns>The content type that is used by the message encoder.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Writes a message less than a specified size to a byte array buffer.</summary>
      <returns>A <see cref="T:System.ArraySegment`1" /> of type byte that provides the buffer to which the message is serialized.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to write to the message buffer.</param>
      <param name="maxMessageSize">The maximum message size that can be written.</param>
      <param name="bufferManager">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer to which the message is written.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>When overridden in a derived class, writes a message of less than a specified size to a byte array buffer at the specified offset.</summary>
      <returns>A <see cref="T:System.ArraySegment`1" /> of type byte that provides the buffer to which the message is serialized.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to write to the message buffer.</param>
      <param name="maxMessageSize">The maximum message size that can be written.</param>
      <param name="bufferManager">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer to which the message is written.</param>
      <param name="messageOffset">The offset of the segment that begins from the start of the byte array that provides the buffer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>When overridden in a derived class, writes a message to a specified stream.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to write to the <paramref name="stream" />.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> object to which the <paramref name="message" /> is written.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>An abstract base class that represents the factory for producing message encoders that can read messages from a stream and write them to a stream for various types of message encoding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Returns a message encoder that can be used to correlate messages in session-based exchanges.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> that is used in session-based exchanges of messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>When overridden in a derived class, gets the message encoder that is produced by the factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> used by the factory.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>When overridden in a derived class, gets the message version that is used by the encoders produced by the factory to encode messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by the factory.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>The binding element that specifies the message version used to encode messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> class initialized from an existing element.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>When overridden in a derived class, creates a factory for producing message encoders.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> used to produce message encoders.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns the typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the current binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>When overridden in a derived class, gets or sets the message version that can be handled by the message encoders produced by the message encoder factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by the encoders produced by the message encoder factory.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElementImporter">
      <summary>Converts WSDL-based policies and contracts about message encoding into descriptions of the binding elements that can implement these policies for the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElementImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Defines a method that can import custom policy assertions for message encoding and that adds the binding elements that implement the policy.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> that imports the metadata information.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> object that contains the policy assertions that can be imported and the collections of binding elements to which custom binding elements that implement the encoding policy can be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="importer" /> or <paramref name="policyContext" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Called prior to importing the metadata documents associated with the encoding.</summary>
      <param name="wsdlDocuments">The <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" />  that describes the services.</param>
      <param name="xmlSchemas">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schema for the <paramref name="wsdlDocuments" />.</param>
      <param name="policy">The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.Xml.XmlElement" /> that contains the policy elements.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)"></member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Maps the custom WSDL extensions for encoding messages to the service description.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> that imports the WSDL extensions.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> that provides the context for the mapping.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Represents an in-memory representation of a SOAP fault that can be passed to <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> to create a message that contains a fault. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageFault" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Gets or sets the value of the actor.</summary>
      <returns>The value of the actor.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Gets the SOAP fault code. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> that contains the SOAP fault code.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Returns a new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that uses the specified <see cref="T:System.ServiceModel.Channels.Message" /> and the specified maximum buffer size for the message buffer.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</returns>
      <param name="message">The specified <see cref="T:System.ServiceModel.Channels.Message" /> to be used to create the <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</param>
      <param name="maxBufferSize">The specified maximum buffer size for the message buffer</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason)">
      <summary>Returns a new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that uses the specified <see cref="T:System.ServiceModel.FaultCode" /> and <see cref="T:System.ServiceModel.FaultReason" /> objects.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</returns>
      <param name="code">The fault code for the fault message.</param>
      <param name="reason">The reason for the fault.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason,System.Object)">
      <summary>Returns a new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that uses the specified <see cref="T:System.ServiceModel.FaultCode" />, <see cref="T:System.ServiceModel.FaultReason" />, and detail object.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</returns>
      <param name="code">The fault code for the fault message.</param>
      <param name="reason">The reason for the fault.</param>
      <param name="detail">The fault detail object.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Returns a new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that uses the specified <see cref="T:System.ServiceModel.FaultCode" />, <see cref="T:System.ServiceModel.FaultReason" />, detail object, and  <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> objects.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object with the specified values.</returns>
      <param name="code">The fault code for the fault message.</param>
      <param name="reason">The reason for the fault.</param>
      <param name="detail">The fault detail object.</param>
      <param name="serializer">The serializer to use when serializing the detail object.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.String)">
      <summary>Returns a new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that uses the specified <see cref="T:System.ServiceModel.FaultCode" />, <see cref="T:System.ServiceModel.FaultReason" />, detail object, <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, and actor.</summary>
      <returns>The created <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</returns>
      <param name="code">The fault code for the fault message.</param>
      <param name="reason">The reason for the fault.</param>
      <param name="detail">The fault detail object.</param>
      <param name="serializer">The serializer to use when serializing the detail object.</param>
      <param name="actor">The value of the actor.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.ServiceModel.FaultReason,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.String,System.String)">
      <summary>Returns a new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that uses the specified <see cref="T:System.ServiceModel.FaultCode" />, <see cref="T:System.ServiceModel.FaultReason" />, detail object, <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, actor, and node values.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</returns>
      <param name="code">The fault code for the fault message.</param>
      <param name="reason">The reason for the fault.</param>
      <param name="detail">The fault detail object.</param>
      <param name="serializer">The serializer to use when serializing the detail object.</param>
      <param name="actor">The value of the actor.</param>
      <param name="node">The value of the node.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.FaultCode,System.String)">
      <summary>Returns a new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that uses the specified <see cref="T:System.ServiceModel.FaultCode" /> and fault reason.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="code">The fault code for the fault message.</param>
      <param name="reason">The reason for the fault.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Returns the detail object of the message fault.</summary>
      <returns>The detail object of the message fault.</returns>
      <typeparam name="T">Type of the detail object.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Returns the detail object that uses the specified <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
      <returns>The detail object contained in the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use when deserializing the detail object. </param>
      <typeparam name="T">The type of the detail object.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Returns an <see cref="T:System.Xml.XmlDictionaryReader" /> object that is positioned on the detail object of the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> object that is positioned on the detail object of the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Gets a value that indicates whether the <see cref="T:System.ServiceModel.Channels.MessageFault" /> has a detail object.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageFault" /> has a detail object; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.IsMustUnderstandFault">
      <summary>Gets a value indicating whether this fault was caused by the failure to understand a SOAP header. </summary>
      <returns>true if this fault was caused by the failure to understand a SOAP header; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Gets the SOAP node.</summary>
      <returns>The SOAP node containing information about which SOAP node on a message path cause the fault.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>When called in a derived class, returns an <see cref="T:System.Xml.XmlDictionaryReader" /> object that is positioned on the detail object of the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> object that is positioned on the detail object of the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Invoked prior to writing the detail contents.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the detail element.</param>
      <param name="version">The version of the SOAP envelope to write.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>When overridden in a non-abstract derived class, writes the contents of the detail element. </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the detail element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Writes the start element using the specified <see cref="T:System.Xml.XmlDictionaryWriter" /> and SOAP envelope version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the detail element.</param>
      <param name="version">The version of the SOAP envelope to write.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Gets a textual description of a SOAP fault. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultReason" /> that contains a textual description of a SOAP fault.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.WasHeaderNotUnderstood(System.ServiceModel.Channels.MessageHeaders,System.String,System.String)">
      <summary>Gets a value indicating whether the SOAP message headers were understood. </summary>
      <returns>true if message headers were understood; otherwise, false. The default is false.</returns>
      <param name="headers">The SOAP message headers.</param>
      <param name="name">The name of the header element.</param>
      <param name="ns">The namespace of the header element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.WriteTo(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Writes the message fault that uses the specified <see cref="T:System.Xml.XmlDictionaryWriter" /> and SOAP envelope version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the message fault.</param>
      <param name="version">The version of the SOAP envelope to write.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.WriteTo(System.Xml.XmlWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Writes the message fault that uses the specified <see cref="T:System.Xml.XmlWriter" /> and SOAP envelope version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the message fault.</param>
      <param name="version">The version of the SOAP envelope to write.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Represents the content of a SOAP header.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeader" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Gets or sets the targeted recipient of the message header.</summary>
      <returns>The targeted recipient of the message header. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Creates a new message header with the specified data.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Creates a new message header with the specified data.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Creates a new message header with the specified data.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Creates a new message header with the specified data.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
      <param name="relay">A value that indicates whether the header should be relayed.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a header from an object to be serialized using the XmlFormatter. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Creates a new message header with the specified data.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Creates a new message header with the specified data.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Creates a new message header with the specified data.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
      <param name="relay">A value that indicates whether the header should be relayed.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Verifies whether the specified message version is supported.</summary>
      <returns>true if the specified message version is supported; otherwise, false.</returns>
      <param name="messageVersion">Contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Gets a value that specifies whether this message header contains reference parameters of an endpoint reference.</summary>
      <returns>true if this message header contains reference parameters of an endpoint reference; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Gets or sets a value that indicates whether the header must be understood, according to SOAP 1.1/1.2 specification. </summary>
      <returns>true if the header must be understood; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Called when the header content is serialized using the specified XML writer. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Called when the start header is serialized using the specified XML writer. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Gets a value that indicates whether the header should be relayed.</summary>
      <returns>true if the header should be relayed; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Converts this message header to a string.</summary>
      <returns>The message header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the header using the specified XML writer. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the header using the specified XML writer. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the header contents using the specified XML writer. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the header contents using the specified XML writer. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the start header using the specified XML writer. </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Represents system information regarding a SOAP message header.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Gets or sets the intended recipient of the message header.</summary>
      <returns>A URI that indicates the intended recipient of the message header.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Gets a value that specifies whether the message header represents reference parameters of an endpoint reference.</summary>
      <returns>true if the message header represents reference parameters of an endpoint reference; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Gets or sets a value that indicates whether processing the message header is mandatory or optional.</summary>
      <returns>true if processing the message header is mandatory; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Gets the name of the message header.</summary>
      <returns>The name of the message header.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Gets the namespace of the message header.</summary>
      <returns>The namespace of the message header.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Gets or sets a value that indicates whether the message header can be relayed.</summary>
      <returns>true if the message header can be relayed; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Represents a collection of message headers for a message. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> class with the specified collection of message headers.</summary>
      <param name="collection">A collection of message headers.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> class with the specified message version.</summary>
      <param name="version">The SOAP version of the message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> class with the specified message version and size.</summary>
      <param name="version">The SOAP version of the message.</param>
      <param name="initialSize">The size of the header.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Gets or sets a description of how the message should be processed.</summary>
      <returns>A description of how the message should be processed.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Adds the specifies message header to the collection.</summary>
      <param name="header">A message header to be added.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Removes all the headers from the collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Copies the header content located at the specified index from the specified message to this instance.</summary>
      <param name="message">A message.</param>
      <param name="headerIndex">The location of the original message header, from which the content is copied over.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Copies the header content located at the specified index from the specified message header collection to this instance.</summary>
      <param name="collection">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">The location of the original message header, from which the content is copied over.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Copies the content of all the headers from the specified message to this instance.</summary>
      <param name="message">A message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Copies the content from the specified header collection to this instance.</summary>
      <param name="collection">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Copies the headers from this collection to an array, starting at a particular index of the array. </summary>
      <param name="array">The one-dimensional Array that is the destination of the message header objects copied from this instance. The Array must have zero-based indexing. </param>
      <param name="index">The zero-based index in the array at which copying begins. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Gets the number of message headers in this collection.</summary>
      <returns>The number of message headers in this collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Gets or sets the address of the node to which faults should be sent.</summary>
      <returns>An <see cref="T:System.ServiceModel.EndpointAddress" /> of the node to which faults should be sent.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Finds a message header in this collection by the specified LocalName and namespace URI of the header element.</summary>
      <returns>The index of the message header in this collection.</returns>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Finds a message header in this collection by the specified LocalName, namespace URI and actors of the header element.</summary>
      <returns>The index of the message header in this collection.</returns>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="actors">The targeted recipient of the message header.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Gets or sets the address of the node that sent the message.</summary>
      <returns>An <see cref="T:System.ServiceModel.EndpointAddress" /> of the node that sent the message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Returns an enumerator that can iterate through a collection. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Retrieves a message header at a specific position in this collection.</summary>
      <returns>A message header.</returns>
      <param name="index">The zero-based index of the header to get.</param>
      <typeparam name="T">The message header.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Retrieves a message header at a specific position in this collection.</summary>
      <returns>A message header.</returns>
      <param name="index">The zero-based index of the header to get.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">The message header.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Finds a message header in this collection by the specified LocalName and namespace URI of the header element.</summary>
      <returns>A message header.</returns>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <typeparam name="T">The message header.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Retrieves a message header in this collection by the specified LocalName, namespace URI and serializer.</summary>
      <returns>A message header.</returns>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />,</param>
      <typeparam name="T">The message header.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Retrieves a message header in this collection by the specified LocalName, namespace URI and actors of the header element.</summary>
      <returns>A message header.</returns>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="actors">The targeted recipient of the message header.</param>
      <typeparam name="T">The message header.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Gets a XML dictionary reader that consumes the message header at the specified location of the collection.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="headerIndex">The zero-based index of the header to get.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Verifies whether all the message headers marked with MustUnderstand have been properly interpreted and processed. </summary>
      <returns>true if the recipients specified by <paramref name="actors" /> have properly interpreted and processed all the message headers marked with MustUnderstand; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Verifies whether the specified recipients have properly interpreted and processed all the message headers marked with MustUnderstand. </summary>
      <returns>true if the recipients specified by <paramref name="actors" /> have properly interpreted and processed all the message headers marked with MustUnderstand; otherwise, false.</returns>
      <param name="actors">The targeted recipient of the message header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Inserts a message header into the collection at the specified index.</summary>
      <param name="headerIndex">The zero-based index at which <paramref name="header" /> should be inserted.</param>
      <param name="header">A message header to insert.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Retrieves a header at the given index.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> in the collection. If <paramref name="index" /> is greater than or equal to the number of headers in the list, this returns null.</returns>
      <param name="index">Zero-based index of the list of headers.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Gets or sets the unique ID of the message.</summary>
      <returns>The unique ID of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Gets the SOAP version of the message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Gets the IDs of messages that are related to this message.</summary>
      <returns>The IDs of messages that are related to this message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Removes all headers with the specified name and namespace from the collection.</summary>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Removes the message header at the specified index from the collection.</summary>
      <param name="headerIndex">The zero-based index of the header to remove.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Gets or sets the address of the node to which a reply should be sent for a request.</summary>
      <returns>An <see cref="T:System.ServiceModel.EndpointAddress" /> of the node to which a reply should be sent for a request.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Sets the action element of the header.</summary>
      <param name="action">A description of how the message should be processed.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through a collection. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Gets or sets the destination endpoint of a message.</summary>
      <returns>A URI that contains the destination endpoint of a message..</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders">
      <summary>Gets all the message headers that must be understood, according to SOAP 1.1/1.2 specification. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.UnderstoodHeaders" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the header from the specified location using the specified XML writer. </summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializes the header from the specified location using the specified XML writer. </summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the specified header content using the specified XML writer. </summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializes the specified header content using the specified XML writer. </summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the start header using the specified XML writer. </summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializes the start header using the specified XML writer. </summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Represents a set of properties for a message. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> class with preset properties.</summary>
      <param name="properties">A <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Adds an element with the specified name and property into the <see cref="T:System.ServiceModel.Channels.MessageProperties" />. This method cannot be inherited.</summary>
      <param name="name">The name of the element to add.</param>
      <param name="property">The value of the element to add. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Gets or sets a value that specifies whether to store this message before giving it to the transport. </summary>
      <returns>true if the batching of outgoing messages is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Removes all elements from the <see cref="T:System.ServiceModel.Channels.MessageProperties" />. This method cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains a specific name. This method cannot be inherited.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the specified <paramref name="name" />; otherwise, false.</returns>
      <param name="name">The name to locate in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Copies the content of the specified <see cref="T:System.ServiceModel.Channels.MessageProperties" /> to this instance.</summary>
      <param name="properties">A <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Gets the total number of properties in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>The total number of properties in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ServiceModel.Channels.MessageProperties" />. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Gets the encoder that is used to write messages to a stream and to read messages from a stream.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> that is used to write messages to a stream and to read messages from a stream.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsReadOnly">
      <summary>Gets a value that indicates whether this set of properties is read-only.</summary>
      <returns>true if this set of properties is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Retrieves a property at the given index.</summary>
      <returns>The property with the specified <paramref name="name" />, or null if the property does not exist.</returns>
      <param name="name">The name of the property to get from the collection.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Removes the element with the specified name from the <see cref="T:System.ServiceModel.Channels.MessageProperties" />. This method cannot be inherited.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the specified <paramref name="name" /> and can be removed; otherwise, false.</returns>
      <param name="name">The name of the element to remove.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Security">
      <summary>Gets or sets the security-related properties of a message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds an element with the specified name and property into the <see cref="T:System.ServiceModel.Channels.MessageProperties" />. This method cannot be inherited.</summary>
      <param name="pair">A key/value pair that contains the name and value of the element to add.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains a specific name. This method cannot be inherited.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the name and value in the specified <paramref name="pair" />; otherwise, false.</returns>
      <param name="pair">A key/value pair that contains the name and value of the element to locate in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the content of the specified <see cref="T:System.ServiceModel.Channels.MessageProperties" /> to an array, starting at the specified index. This method cannot be inherited.</summary>
      <param name="array">The <see cref="T:System.Array" /> to copy the collection to.</param>
      <param name="index">The index to start from.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes the element with the specified name from the <see cref="T:System.ServiceModel.Channels.MessageProperties" />. This method cannot be inherited.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the specified name and value in the <paramref name="pair" /> parameter and can be removed; otherwise, false.</returns>
      <param name="pair">A key/value pair that contains the name and value of the element to be removed.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that can iterate through a collection. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through a collection. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Determines whether the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains a specific name, and retrieves its value. This method cannot be inherited.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the specified <paramref name="name" />; otherwise, false.</returns>
      <param name="name">The name of the element to locate.</param>
      <param name="value"></param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Gets the values in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Gets or sets the transport address that is used to send messages.</summary>
      <returns>A URI that contains the transport address that is used to send messages.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Specifies the status of a message. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>The message has been created. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>The message is being read.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>The message has been written.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>The message has been copied.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>The message has been closed and can no longer be accessed.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Gets or sets the version of WS-Addressing that is associated with the current message version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that is associated with the current message version.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Creates a message version object by using WS-Addressing 1.0 and with a specified SOAP version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the specified version of SOAP and WS-Addressing 1.0.</returns>
      <param name="envelopeVersion">The <see cref="T:System.ServiceModel.EnvelopeVersion" /> that indicates the SOAP version to be used.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="envelopeVersion" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Creates a message version object with specified SOAP and WS-Addressing versions.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the specified versions of WS-Addressing and SOAP.</returns>
      <param name="envelopeVersion">The <see cref="T:System.ServiceModel.EnvelopeVersion" /> that indicates the SOAP version.</param>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that indicates the WS-Addressing version.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeVersion" /> or <paramref name="addressingVersion" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Gets the default message version used by Windows Communication Foundation (WCF).</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that uses WS-Addressing 1.0 and SOAP1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Gets the SOAP version associated with the current message version.</summary>
      <returns>The <see cref="T:System.ServiceModel.EnvelopeVersion" /> associated with the current message version.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current message version is equal to a specified object.</summary>
      <returns>true if the specified object is equal to the current <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current message version.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Gets a hash code for the current message version.</summary>
      <returns>A unique hash code for the current <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Gets the message version that does not use SOAP or WS-Addressing.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that does not use SOAP or WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Gets the message version using SOAP 1.1.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using SOAP 1.1 but no version of WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11WSAddressing10">
      <summary>Gets the message version using WS-Addressing 1.0 and SOAP 1.1.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the version of WS-Addressing 1.0 and SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11WSAddressingAugust2004">
      <summary>Gets the message version by using WS-Addressing submitted 10 August 2004 and SOAP 1.1.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the version of WS-Addressing submitted 10 August 2004 and SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12">
      <summary>Gets the message version using SOAP 1.2.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using SOAP 1.2 but no version of WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Gets the message version using WS-Addressing 1.0 and SOAP 1.2.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the version of WS-Addressing 1.0 and SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressingAugust2004">
      <summary>Gets the message version using WS-Addressing submitted August 2004 and SOAP 1.2.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the version of WS-Addressing submitted 10 August 2004 and SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>The current message version.</summary>
      <returns>The current <see cref="T:System.ServiceModel.Channels.MessageVersion" />. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MsmqBindingElementBase">
      <summary>The base class for <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" /> and <see cref="T:System.ServiceModel.Channels.MsmqTransportBindingElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue">
      <summary>Gets or sets a <see cref="T:System.Uri" /> that identifies a custom dead-letter queue where expired messages or messages that failed to be delivered are sent.</summary>
      <returns>
        <see cref="T:System.Uri" /> instance that contains the URI of the custom dead-letter queue. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.DeadLetterQueue">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.DeadLetterQueue" /> setting for this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.DeadLetterQueue" /> value that specifies which type of dead-letter queue to use, if any.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not within the range of values defined in <see cref="T:System.ServiceModel.DeadLetterQueue" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.Durable">
      <summary>Gets or sets a value that specifies whether messages sent with this binding are durable or volatile.</summary>
      <returns>true if the messages processed by this binding are durable; false if they are volatile. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce">
      <summary>Gets or sets a value that specifies whether messages sent with this binding have exactly once assurances.</summary>
      <returns>true if messages sent with this binding have exactly once assurances; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqBindingElementBase.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>When overridden in a derived class, retrieves a specified type of object for the binding context provided.</summary>
      <returns>The object of type <paramref name="T" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The type of property.</typeparam>
      <exception cref="T:System.ArgumentNullException">The context is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles">
      <summary>Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</summary>
      <returns>A value that specifies the number of retry cycles to attempt prior to transferring a message to the poison-message queue.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.MsmqTransportSecurity">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with this binding element.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with this binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling">
      <summary>Gets or sets an enumeration value that specifies how poison and other messages that cannot be dispatched are handled.</summary>
      <returns>A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and other messages that cannot be dispatched are handled.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not within the range of values defined in <see cref="T:System.ServiceModel.ReceiveErrorHandling" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveRetryCount">
      <summary>Gets or sets the maximum number of times the queue manager should attempt to send a message before transferring it to the retry queue.</summary>
      <returns>A value that specifies the maximum number of times the queue manager should attempt to send a message before transferring it to the retry queue.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay">
      <summary>Gets or sets a value that specifies how long to wait before attempting another retry cycle when attempting to deliver a message that could not be delivered.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application. The default value is 30 (minutes).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not infinite and larger than Int32.MaxValue milliseconds.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports custom policy assertions about bindings.</summary>
      <param name="exporter">A <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert a custom policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.</summary>
      <param name="exporter">A <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">Provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.</summary>
      <param name="exporter">A <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the endpoint information.</param>
      <param name="endpointContext">Provides mappings from exported WSDL elements to the endpoint description.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.TimeToLive">
      <summary>Gets or sets a value that specifies how long messages are valid. When this time has elapsed the message is placed in a dead-letter queue depending on the DeadLetterQueue setting.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies how long messages are valid. The default value is 24 hours.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not infinite and larger than Int32.MaxValue milliseconds.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.TransactedReceiveEnabled">
      <summary>Gets a value that specifies whether a transaction is required to receive messages with this binding.</summary>
      <returns>true if the binding requires a transaction for a receive operation; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.UseMsmqTracing">
      <summary>Gets or sets a value that enables or disables the Message Queuing (MSMQ) built-in message tracing facility.</summary>
      <returns>true if Message Queuing (MSMQ) built-in message tracing should be enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqBindingElementBase.UseSourceJournal">
      <summary>Gets or sets a value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</summary>
      <returns>true if messages processed by this binding are copied to the source journal queue; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MsmqMessageProperty">
      <summary>The <see cref="T:System.ServiceModel.Channels.MsmqMessageProperty" /> class encapsulates the properties of a message that has been read from a queue.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqMessageProperty.AbortCount">
      <summary>Gets an <see cref="T:System.Int32" /> value that indicates the number of times the message participated in the transaction that was aborted, that is, channel attempts - 1.</summary>
      <returns>An <see cref="T:System.Int32" /> value that indicates the number of times that the channel attempted to read this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqMessageProperty.DeliveryFailure">
      <summary>Gets a value from the <see cref="T:System.ServiceModel.Channels.DeliveryFailure" /> enumeration that indicates why the message failed delivery.</summary>
      <returns>A value from the <see cref="T:System.ServiceModel.Channels.DeliveryFailure" /> enumeration that indicates why the message failed delivery. May be null.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqMessageProperty.DeliveryStatus">
      <summary>Gets a value from the <see cref="T:System.ServiceModel.Channels.DeliveryStatus" /> enumeration that indicates the delivery status of the message.</summary>
      <returns>A value from the <see cref="T:System.ServiceModel.Channels.DeliveryStatus" /> enumeration that indicates the delivery status of the message. May be null.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqMessageProperty.Get(System.ServiceModel.Channels.Message)">
      <summary>Gets the <see cref="T:System.ServiceModel.Channels.MsmqMessageProperty" /> for the specified <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MsmqMessageProperty" /> for the specified <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> whose properties are to be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">The value is null or if property collection on the message is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqMessageProperty.MoveCount">
      <summary>Gets an <see cref="T:System.Int32" /> value that indicates the number of times the message has moved from the main queue to the subqueue or the other way.</summary>
      <returns>An <see cref="T:System.Int32" /> value that indicates the count of the number of times this message has been moved.</returns>
    </member>
    <member name="F:System.ServiceModel.Channels.MsmqMessageProperty.Name">
      <summary>Gets a <see cref="T:System.String" /> that contains the string "MsmqMessageProperty".</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MsmqTransportBindingElement">
      <summary>Represents the binding element used to specify the queuing communication properties for a Windows Communication Foundation (WCF) service that uses the native Message Queuing (MSMQ) protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MsmqTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds a channel factory using the context provided.</summary>
      <returns>A Message Queuing (MSMQ) channel factory that can be used to create channels to send messages to existing Message Queuing applications.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</param>
      <typeparam name="TChannel">A <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" /> or a <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> class.</typeparam>
      <exception cref="T:System.ArgumentNullException">The context value is null.</exception>
      <exception cref="T:System.ArgumentException">The TChannel is not IOutputChannel or IOutputSessionChannel.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is true and Durable is false.</exception>
      <exception cref="T:System.InvalidOperationException">UseActiveDirectory is true and QueueTransferProtocol is not Native.</exception>
      <exception cref="T:System.InvalidOperationException">CustomDeadLetterQueue is not null and DeadLetterQueue is not Custom.</exception>
      <exception cref="T:System.InvalidOperationException">DeadLetterQueue is set to Custom on Windows 2003/XP.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is false and DeadLetterQueue is Custom.</exception>
      <exception cref="T:System.InvalidOperationException">CustomDeadLetterQueue is set and if there is no write permission to write to queue or if queue does not exist.</exception>
      <exception cref="T:System.InvalidOperationException">If CustomDeadLetterQueue is non-transactional.</exception>
      <exception cref="T:System.InvalidOperationException">MsmqTransportSecurity.MsmqAuthenticationMode is set to WindowsDomain and if MSMQ is installed without ActiveDirectory integration.</exception>
      <exception cref="T:System.InvalidOperationException">MsmqTransportSecurity.MsmqAuthenticationMode is None and MsmqTransportSecurity.MsmqProtectionLevel is not None.</exception>
      <exception cref="T:System.InvalidOperationException">MsmqTransportSecurity.MsmqAuthenticationMode is Certificate or WindowsDomain and MsmqTransportSecurity.MsmqProtectionLevel is None.</exception>
      <exception cref="T:System.InvalidOperationException">MsmqTransportSecurity.MsmqProtectionLevel is EncryptAndSign and UseActiveDirectory is false.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds a channel listener using the context provided.</summary>
      <returns>A Message Queuing (MSMQ) channel listener that can be used to create channels to receive messages from existing MSMQ applications.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</param>
      <typeparam name="TChannel">The channel type to be used to build the channel listener. Permitted channel types are <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" /> or a <see cref="T:System.ServiceModel.Channels.IInputChannel" /> class.</typeparam>
      <exception cref="T:System.ArgumentNullException">The context value is null.</exception>
      <exception cref="T:System.ArgumentException">The TChannel is not IInputChannel or IInputSessionChannel.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is true and Durable is false.</exception>
      <exception cref="T:System.InvalidOperationException">Queue not readable.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is true and queue is non-transactional.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is false and queue is transactional.</exception>
      <exception cref="T:System.InvalidOperationException">ReceiveErrorHandling is set to Move and queue name contains a ";" in Windows Vista.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is set to true and cannot open retry sub-queue in Windows Vista.</exception>
      <exception cref="T:System.InvalidOperationException">ReceiveErrorHandling is set to Reject or Move and the platform is Windows Vista.</exception>
      <exception cref="T:System.InvalidOperationException">MsmqTransportSecurity.MsmqAuthenticationMode is set to WindowsDomain and if MSMQ is installed without ActiveDirectory integration.</exception>
      <exception cref="T:System.InvalidOperationException">MsmqTransportSecurity.MsmqAuthenticationMode is None and MsmqTransportSecurity.MsmqProtectionLevel is not None.</exception>
      <exception cref="T:System.InvalidOperationException">MsmqTransportSecurity.MsmqAuthenticationMode is Certificate or WindowsDomain and MsmqTransportSecurity.MsmqProtectionLevel is None.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a Boolean value that indicates whether you can build a channel factory with the context provided.</summary>
      <returns>true if you can build a channel factory with the context provided; otherwise, false. The binding element returns true only when <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> or <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</param>
      <typeparam name="TChannel">The channel type to be used to build the channel listener. Permitted channel types are <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" /> or a <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> class.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a Boolean value that indicates whether you can build a channel listener with the context provided.</summary>
      <returns>true if you can build a channel listener with the context provided; otherwise, false.The binding returns true only when <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IInputChannel" /> or <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</param>
      <typeparam name="TChannel">The channel type to be used to build the channel listener. Permitted channel types are <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" /> or a <see cref="T:System.ServiceModel.Channels.IInputChannel" /> class.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MsmqTransportBindingElement.Clone">
      <summary>Returns a clone of the binding element.</summary>
      <returns>A clone of the binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize">
      <summary>Gets or sets an integer that specifies the maximum size of the pool that contains internal Message Queuing (MSMQ) message objects.</summary>
      <returns>An integer that specifies the maximum size of the pool that contains internal Message Queuing message objects.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero. </exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol">
      <summary>Gets or sets an enumeration value that indicates the queued communication channel transport that this binding uses.</summary>
      <returns>A <see cref="T:System.ServiceModel.QueueTransferProtocol" /> enumeration value that indicates the transport used for message delivery between queue managers. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.QueueTransferProtocol" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme">
      <summary>Returns a <see cref="T:System.String" /> that contains the addressing scheme that is used by this transport binding element.</summary>
      <returns>A <see cref="T:System.String" /> that contains the addressing scheme that is used by this transport binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory">
      <summary>Returns a Boolean value that indicates whether queue addresses should be converted using Active Directory.</summary>
      <returns>true if queue addresses should be converted using Active Directory; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement">
      <summary>The binding element that specifies the encoding and versioning used for Message Transmission Optimization Mechanism (MTOM) messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class with a specified message version and character encoding.</summary>
      <param name="messageVersion">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the SOAP message.</param>
      <param name="writeEncoding">The <see cref="T:System.Text.Encoding" /> that is used to format the message characters.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> or <paramref name="encoding" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="messageVersion" /> is set to <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a factory for a specified type of channel and context.</summary>
      <returns>true if the specified channel factory stack can be built on the service; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.</summary>
      <returns>true if the specified channel listener stack can be built on the service; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> object initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> object with property values equal to those of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Creates a message encoder factory that encodes MTOM messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that encodes MTOM messages.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</summary>
      <returns>The typed object <paramref name="T " />requested if it is present or null if it is not.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum buffer size.</summary>
      <returns>The maximum size of the buffer. The default value is 65536 (0x10000) bytes.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Gets or sets the maximum number of XML readers that is allocated to a pool and is ready for use to process incoming messages.</summary>
      <returns>The maximum number of readers to be kept in the pool. The default value is 64 readers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Gets or sets the maximum number of XML writers that is allocated to a pool and are ready for use to process outgoing messages.</summary>
      <returns>The maximum number of writers to be kept in the pool. The default value is 16 writers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MessageVersion">
      <summary>Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the SOAP message.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentException">The value <see cref="P:System.ServiceModel.Channels.MessageVersion.None" /> is not allowed.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Inserts a policy assertion into the WSDL, when it is generated, which indicates that an MTOM encoding is being used. </summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="policyContext">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="policyContext" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Modifies the WSDL contract for MTOM-specific information.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Puts the SOAP message version into the WSDL.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the endpoint description.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.WriteEncoding">
      <summary>Gets or sets the encoding that is used to format the characters in the text message.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that is used to format the characters in the text message.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentException">The value is not valid text encoding value.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings">
      <summary>Represents settings that control the behavior of the named pipe connection pool.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings.GroupName">
      <summary>Gets or sets the group name of the connection pool group on the client. </summary>
      <returns>The name of the connection pool group on the client. The default name is "default".</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings.IdleTimeout">
      <summary>Gets or sets the maximum time the connection can be idle in the connection pool before being disconnected.</summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> structure that indicates the maximum time the connection can be idle in the connection pool before being disconnected.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>Gets or sets the maximum number of outbound connections for each endpoint that is cached in the connection pool.</summary>
      <returns>The maximum number of allowed outbound connections for each endpoint that is cached in the connection pool. The default value is 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement">
      <summary>Represents the binding element for the named pipe transport.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.#ctor(System.ServiceModel.Channels.NamedPipeTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> class.</summary>
      <param name="elementToBeCloned">An instance of the <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory of the specified type that can be used to create channels.</summary>
      <returns>Returns a channel factory of the specified type.</returns>
      <param name="context">Members that describe bindings, behaviors, contracts and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel factory to create.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of the specified type.</summary>
      <returns>Returns a channel listener of the specified type.</returns>
      <param name="context">Members that describe bindings, behaviors, contracts and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel listener to create.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>Returns a copy of the current binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeTransportBindingElement.ConnectionPoolSettings">
      <summary>Gets a collection of connection pool settings. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings" /> object that contains various properties related to connection pooling.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or null if the object isn't found.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeTransportBindingElement.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport, which is "net.pipe".</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.OneWayBindingElement">
      <summary>Enables packet routing and the use of one-way methods.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.OneWayBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel factory for producing one-way channels from the binding context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />. </returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</param>
      <typeparam name="TChannel">The type of channel that the factory builds.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The type of <paramref name="TChannel" /> is not <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</exception>
      <exception cref="T:System.InvalidOperationException">The inner binding element does not support <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel listener for accepting one-way channels.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.  </param>
      <typeparam name="TChannel">The type of channel that the listener is built to accept.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The type of <paramref name="TChannel" /> is not <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</exception>
      <exception cref="T:System.InvalidOperationException">The inner binding element does not support <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a value that indicates whether a channel factory of the specified type can be built. </summary>
      <returns>true if a channel factory of the specified type can be built; otherwise, false. The default is false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.  </param>
      <typeparam name="TChannel">The type of channel factory to build.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a value that indicates whether a channel listener of the specified type can be built.</summary>
      <returns>true if a channel listener of the specified type can be built; otherwise, false. The default is false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.  </param>
      <typeparam name="TChannel">The type of channel listener to build.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings">
      <summary>Gets the channel pool settings. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" /> object that contains properties of the channel pool associated with this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.Clone">
      <summary>Clones an instance of this class.</summary>
      <returns>A cloned copy of this instance of this class.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets properties from the binding stack, if present.</summary>
      <returns>A <paramref name="T" /> object from the binding stack, if present.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.  </param>
      <typeparam name="T">Type of the property.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels">
      <summary>Gets or sets the maximum number of channels that can be accepted.</summary>
      <returns>The maximum number of channels that can be accepted. The default value is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
      <summary>Gets or sets a value that indicates whether packet routing is enabled. </summary>
      <returns>true if packet routing is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion that represents the one-way binding element.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exporter" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.OneWayBindingElementImporter">
      <summary>Converts WSDL-based policies in a <see cref="T:System.ServiceModel.Channels.OneWayBindingElement" /> into descriptions of the binding elements that can implement these policies for the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.OneWayBindingElementImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.OneWayBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Defines a method that can import custom policy assertions and add implementing binding elements.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> object in use.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement">
      <summary>Defines the binding element used to create a custom peer resolver.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.#ctor(System.ServiceModel.Channels.BindingContext,System.ServiceModel.PeerResolvers.PeerCustomResolverSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" /> class with the provided binding context and resolver settings.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> object that contains the binding context for resolvers created by this binding.</param>
      <param name="settings">
        <see cref="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" /> object that contains the specific settings for the new binding.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.#ctor(System.ServiceModel.Channels.PeerCustomResolverBindingElement)">
      <summary>Initializes a new instance of the  <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" /> class by cloning the provided custom peer resolver binding.</summary>
      <param name="other">
        <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" /> instance which contains the settings to clone for the new binding.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.#ctor(System.ServiceModel.PeerResolvers.PeerCustomResolverSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PeerCustomResolverBindingElement" /> class with the provided resolver settings.</summary>
      <param name="settings">
        <see cref="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" /> object that contains the specific settings for the new binding.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerCustomResolverBindingElement.Address">
      <summary>Gets and sets the endpoint address of the peer on which resolvers created by this binding will run.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> object that contains the network address of the peer on which resolvers created by this binding will run.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerCustomResolverBindingElement.Binding">
      <summary>Gets and sets the network binding used by resolvers created with this binding element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" /> that specifies the network binding used by resolvers created with this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel for sending messages.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> that contains the new channel factory of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel factory.</param>
      <typeparam name="TChannel">The type of channel to produce.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of the specified type for receiving messages.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelListener" /> that contains the new channel listener of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel listener.</param>
      <typeparam name="TChannel">
        <see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channels to produce.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <returns>True if this binding element can produce a channel factory of the specified type; false if it cannot.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel factory.</param>
      <typeparam name="TChannel">
        <see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channels to produce.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel listener of the specified type can be built.</summary>
      <returns>True if this binding element can produce a channel listener of the specified type; false if it cannot.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel listener.</param>
      <typeparam name="TChannel">
        <see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channel listener.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains a copy of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.CreatePeerResolver">
      <summary>Creates a new instance of the custom peer resolver.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolver" /> object that contains a new custom peer resolver with the settings supplied to this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerCustomResolverBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" /> object.</summary>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context.</param>
      <typeparam name="T">The specific property to obtain from the binding context.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerCustomResolverBindingElement.ReferralPolicy">
      <summary>Gets and sets the referral policy for peer resolvers created with this binding element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the referral policy for peer resolvers created with this binding element.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.PeerResolverBindingElement">
      <summary>Defines the abstract base class for binding elements used to create peer resolver objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerResolverBindingElement.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.Channels.PeerResolverBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerResolverBindingElement.#ctor(System.ServiceModel.Channels.PeerResolverBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PeerResolverBindingElement" /> class by duplicating the provided <see cref="T:System.ServiceModel.Channels.PeerResolverBindingElement" /> object.</summary>
      <param name="other">
        <see cref="T:System.ServiceModel.Channels.PeerResolverBindingElement" /> object to copy when creating this class instance.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerResolverBindingElement.CreatePeerResolver">
      <summary>Creates a peer resolver object with the settings defined on this binding element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolver" /> object that is used to perform peer name to address resolution. The settings on the peer resolver must be defined on the binding element. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerResolverBindingElement.ReferralPolicy">
      <summary>Gets and sets the referral policy for peer resolvers created with binding elements created by implementations of this class.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> enumeration value that specifies the referral policy for peer resolvers created with this binding element.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.PeerTransportBindingElement">
      <summary>Defines the binding element used to create a peer message transport channel.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.Channels.PeerTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel for sending messages.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel factory.</param>
      <typeparam name="TChannel">The type of channel to produce.</typeparam>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> parameter is set to null.</exception>
      <exception cref="T:System.InvalidOperationException">Manual addressing was specified in the binding context for this channel factory.</exception>
      <exception cref="T:System.ArgumentException">The channel type indicated by this binding context is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of the specified type for receiving messages.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelListener" /> that contains the new channel listener of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel listener.</param>
      <typeparam name="TChannel">
        <see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channels to produce.</typeparam>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> parameter is set to null.</exception>
      <exception cref="T:System.ArgumentException">The channel type indicated by this binding context is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <returns>true if this binding element can produce a channel factory of the specified type; false if it cannot.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel factory.</param>
      <typeparam name="TChannel">
        <see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channels to produce.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel listener of the specified type can be built.</summary>
      <returns>true if this binding element can produce a channel listener of the specified type; false if it cannot.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel listener.</param>
      <typeparam name="TChannel">
        <see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channel listener.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains a copy of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" /> object.</summary>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />. </returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context.</param>
      <typeparam name="T">The specific property to obtain from the binding context.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.ListenIPAddress">
      <summary>Gets and sets the IP address on which peer message transports created by this binding element listen.</summary>
      <returns>
        <see cref="T:System.Net.IPAddress" /> that contains the IP address on which peer message transports created by this binding element listen.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.MaxReceivedMessageSize">
      <summary>Gets and sets the value that specifies the maximum size of messages sent over transport channels created by this binding element.</summary>
      <returns>The maximum size of messages sent over transport channels created by this binding element. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.Port">
      <summary>Gets and sets the network port on which peer message transport channels created by this binding element listen.</summary>
      <returns>The network port on which peer message transports created by this binding element listen. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.Scheme">
      <summary>Gets the scheme used to indicate the protocol over which messages are transported by channels created by this binding element.</summary>
      <returns>The scheme for the protocol over which messages are transported by channels created by this binding element. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PeerTransportBindingElement.Security">
      <summary>Gets the specific security settings for transport channels created by this binding element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerSecuritySettings" /> that specifies the specific security settings for transport channels created by this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Writes custom peer transport channel elements into the generated metadata for an endpoint.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that exports the metadata information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Writes custom peer transport channel elements into the generated WSDL for a contract.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PeerTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Writes custom peer transport channel elements into the generated WSDL for an endpoint.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the endpoint information.</param>
      <param name="endpointContext">A <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> object that provides mappings from exported WSDL elements to the endpoint description.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement">
      <summary>Defines the binding element used to create a Peer Name Resolution Protocol (PNRP) peer resolver.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.#ctor(System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" /> class with the provided peer referral policy.</summary>
      <param name="referralPolicy">
        <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the referral policy for this resolver.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel for sending messages.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> that contains the new channel factory of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel factory.</param>
      <typeparam name="TChannel">The type of channel to produce.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of the specified type for receiving messages.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.IChannelListener" /> that contains the new channel listener of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel listener.</param>
      <typeparam name="TChannel">
        <see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channels to produce.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <returns>True if this binding element can produce a channel factory of the specified type; false if it cannot.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel factory.</param>
      <typeparam name="TChannel">
        <see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channels to produce.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel listener of the specified type can be built.</summary>
      <returns>True if this binding element can produce a channel listener of the specified type; false if it cannot.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel listener.</param>
      <typeparam name="TChannel">
        <see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channel listener.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains a copy of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CreatePeerResolver">
      <summary>Creates a PNRP-specific <see cref="T:System.ServiceModel.PeerResolver" /> instance.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolver" /> object that contains the new PNRP resolver created by this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" /> object.</summary>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context.</param>
      <typeparam name="T">The specific property to obtain from the binding context.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.ReferralPolicy">
      <summary>Gets and sets the referral policy for the PNRP peer resolver created by this binding element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the referral policy for resolvers created by this binding element instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.PrivacyNoticeBindingElement">
      <summary>Represents the binding element that contains the privacy policy for the WS-Federation binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PrivacyNoticeBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.#ctor(System.ServiceModel.Channels.PrivacyNoticeBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PrivacyNoticeBindingElement" /> class from an existing element.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.PrivacyNoticeBindingElement" /> used to initialize the new element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> that is a copy of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Queries the binding element stack to see whether it supports a particular interface.</summary>
      <returns>The interface whose support is being tested.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the current binding element.</param>
      <typeparam name="T">The interface whose support is being tested.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports custom policy assertions regarding the privacy notice from the binding elements that contain the policy.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that contains the binding assertions and elements associated with the policy.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.PrivacyNoticeBindingElement.Url">
      <summary>Gets or sets the URI at which the privacy notice is located.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the privacy notice is located.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.PrivacyNoticeBindingElement.Version">
      <summary>Gets or sets the privacy notice version number for the binding.</summary>
      <returns>The version number of the privacy notice.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.PrivacyNoticeBindingElementImporter">
      <summary>Imports WSDL-based policies and contracts about privacy notices into descriptions of the binding elements that can implement these policies for the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PrivacyNoticeBindingElementImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.PrivacyNoticeBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Imports custom policy assertions for privacy notices and adds the binding elements that implement the policy.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> that imports the metadata information.</param>
      <param name="policyContext">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> object that contains the policy assertions that can be imported and the collections of binding elements to which custom binding elements that implement the encoding policy can be added.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ReliableSessionBindingElement">
      <summary>Represents the binding element that can produce the sending and receiving channels required for a reliable session between endpoints.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> class that specifies whether message delivery must preserve the order in which messages are sent.</summary>
      <param name="ordered">true if messages must be delivered in the order in which they are sent; otherwise, false. The default value is true.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval">
      <summary>Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory. </summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a factory that creates a channel of a specified type that supports a reliable session.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the factories that can produce channels of type <paramref name="TChannel" />.</param>
      <typeparam name="TChannel">The type of channel the factory builds.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TChannel" /> is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a listener that accepts a channel of a specified type that supports a reliable session.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the listeners that can accept channels of type <paramref name="TChannel" />.</param>
      <typeparam name="TChannel">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener is built to accept.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TChannel" /> is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the channel factory can be built for the channel and context provided that can support a reliable session.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the factories that can produce channels of type <paramref name="TChannel" />.</param>
      <typeparam name="TChannel">The type of channel the factory builds.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the channel listener can be built for the channel and context provided that can support a reliable session.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> that can produce an <see cref="T:System.ServiceModel.Channels.IChannel" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the listeners that can accept channels of type <paramref name="TChannel" />.</param>
      <typeparam name="TChannel">The <see cref="T:System.ServiceModel.Channels.IChanne" />l that the channel listener, if build, accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.Clone">
      <summary>Creates a copy of the current reliable session binding element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> that is a clone of the current binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled">
      <summary>Gets or sets a value that indicates whether the reliable session has flow control enabled.</summary>
      <returns>true if the reliable session has flow control enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property of the specified type from its binding context.</summary>
      <returns>The property of type <paramref name="T" /> with the specified <paramref name="context" /> or null if no property of type <paramref name="T" /> is found.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to retrieve the channel of type <paramref name="T" />.</param>
      <typeparam name="T">The type of property retrieved.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout">
      <summary>Gets or sets an interval of time that a service remains inactive before closing.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service remains inactive before closing. The default value is 10 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero or greater than either <see cref="F:System.Int32.MaxValue" /> or <see cref="F:System.TimeSpan.MaxValue" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels">
      <summary>Gets or sets the largest number of channels that can be pending during the reliable session.</summary>
      <returns>The largest number of channels that can be pending. The default value is 4.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero or greater than 16384.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount">
      <summary>Gets or sets the maximum number of times that a message attempts to be transferred during the reliable session.</summary>
      <returns>The maximum number of times that a message attempts to be re-sent. The minimum value is 1; the maximum is <see cref="F:System.Int32.MaxValue" />; and the default value is 8.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize">
      <summary>Gets or sets the largest number of messages that can exist in either the send buffer or the receive buffer.</summary>
      <returns>The largest number of messages that can be buffered. The minimum value is 1; the maximum value is 4096; and the default value is 32.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to one or greater than 4096.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered">
      <summary>Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.</summary>
      <returns>true if messages must be delivered in the order in which they are sent; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Maps the information contained in the reliable session binding element into the WSDL elements that enable a remote endpoint to access the service with a reliable session.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that exports the binding information in the reliable session binding element to the WSDL elements.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that provides the mapping from exported WSDL elements to the endpoint description.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ReliableSessionBindingElementImporter">
      <summary>Maps reliable session binding elements to and from representations of their corresponding policy assertions in metadata. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElementImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Converts WS-Reliable Message policy assertions into the reliable session binding elements in a binding on the client.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> that imports the WSDL metadata into the binding element.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> for the service endpoint that contains the binding policy assertions that must be converted into binding elements.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context" /> or <paramref name="importer" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Channels.InvalidChannelBindingException">The policy assertion being read is invalid because it does not comply with WS-Reliable Messaging Policy.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Provides a reply that is correlated to an incoming request.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.RequestContext" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>When overridden in a derived class, aborts processing the request associated with the context. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</returns>
      <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</returns>
      <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</param>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the reply to an available request.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time within which the reply operation associated with the current context must close.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Releases resources associated with the context.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>When overridden in a derived class, completes an asynchronous operation to reply to a request message.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> methods.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>When overridden in a derived class, replies to a request message.</summary>
      <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>When overridden in a derived class, replies to a request message within a specified interval of time.</summary>
      <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</param>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the reply to a request.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>When overridden in a derived class, gets the message that contains the request.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Releases both managed and unmanaged resources associated with the context.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>An abstract class that, when implemented, represents a binding element that supports channel SOAP message security.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory based on the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> settings and the binding context passed in. The channel factory created is a SOAP message security channel factory, which internally has a reference to the channel factory that corresponds to the binding context, (which includes the transport channel factory).</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A channel of type <paramref name="TChannel" /> is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>When implemented, creates a channel factory of a specified type.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A channel of type <paramref name="TChannel" /> is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener based on the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> settings and the binding context passed in. </summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel listener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A channel of type <paramref name="TChannel" /> is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>When implemented, creates a channel listener of a specified type.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel listener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A channel of type <paramref name="TChannel" /> is not supported.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a value that indicates whether a channel factory of the specified type can be built. </summary>
      <returns>true if a channel factory of the specified type can be built; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel listener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a value that indicates whether a channel listener of the specified type can be built.</summary>
      <returns>true if a channel listener of the specified type can be built; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.serviceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel listener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateAnonymousForCertificateBindingElement">
      <summary>Creates a symmetric security binding element that is configured for anonymous client authentication and certificate-based server authentication.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> that holds the new binding.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement">
      <summary>Creates a security binding element that expects clients to do certificate-based authentication using SOAP message security. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement(System.ServiceModel.MessageSecurityVersion)">
      <summary>Creates a security binding element that expects clients to do certificate-based authentication using SOAP message security. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
      <param name="version">The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> for the binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateSignatureBindingElement">
      <summary>Creates a binding element using a certificate to sign messages. This binding element can be used only for one-way message exchanges and is capable only of signing the message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Creates a symmetric security binding element that is configured to require client authentication using a symmetric-key based issued token. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">A <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="issuedTokenParameters" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The key type of <paramref name="issuedTokenParameters" /> is not symmetric.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForCertificateBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Creates a symmetric security binding element that is configured to require client authentication based on an issued token and server authentication based on the server certificate.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">An <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="issuedTokenParameters" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForSslBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Creates a symmetric security binding element that is configured to require client authentication based on an issued token and server authentication based on the server certificate.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">An <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="issuedTokenParameters" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenForSslBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters,System.Boolean)">
      <summary>Creates a symmetric security binding element that is configured to require client authentication based on an issued token and server authentication based on the server certificate.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">An <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <param name="requireCancellation">Specifies whether cancellation is required. Setting it to false enables a security context token that is useful in Web farm scenarios, because in this mode the session state is encoded inside the established security context token instead of being kept in the server memory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="issuedTokenParameters" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenOverTransportBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Creates a security binding element configured to require SOAP security based client authentication using an issued token. This binding element requires the transport to provide server authentication and message protection (for example, HTTPS).</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
      <param name="issuedTokenParameters">An <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="issuedTokenParameters" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosBindingElement">
      <summary>Creates a symmetric security binding element that is configured to require client authentication based on the client's Kerberos token.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateKerberosOverTransportBindingElement">
      <summary>Creates a security binding element that is configured to require SOAP-security based client authentication using the client's Kerberos token. This binding element requires the transport to provide server authentication and message protection (for example, HTTPS).</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement">
      <summary>Creates an asymmetric security binding element that is configured to require certificate-based client authentication as well as certificate-based server authentication.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement(System.ServiceModel.MessageSecurityVersion)">
      <summary>Creates an asymmetric security binding element that is configured to require certificate-based client authentication as well as certificate-based server authentication.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="version">The message security version.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement(System.ServiceModel.MessageSecurityVersion,System.Boolean)">
      <summary>Creates an asymmetric security binding element that is configured to require certificate-based client authentication as well as certificate-based server authentication.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="version">The message security version.</param>
      <param name="allowSerializedSigningTokenOnReply">Indicates whether to allow a serialized signing token on the reply.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateDuplexBindingElement">
      <summary>Creates an asymmetric security binding element that is configured to require certificate-based client authentication as well as certificate-based server authentication. This authentication mode can be used to secure duplex message-exchange patterns and requires the service to be configured with the client certificate out of band.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateDuplexBindingElement(System.ServiceModel.MessageSecurityVersion)">
      <summary>Creates an asymmetric security binding element that is configured to require certificate-based client authentication as well as certificate-based server authentication. This authentication mode can be used to secure duplex message exchange patterns and requires the service to be configured with the client certificate out of band.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />.</returns>
      <param name="version">The message security version.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement)">
      <summary>Creates a symmetric security binding element that is configured to establish a secure conversation between the client and service. The security context token issued at the end of the secure conversation handshake is used to secure the messages. The bootstrap security binding element specifies how the secure conversation handshake messages are secured.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="bootstrapSecurity">A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bootstrapSecurity" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean)">
      <summary>Creates a symmetric security binding element that is configured to establish a secure conversation between the client and service. The security context token issued at the end of the secure conversation handshake is used to secure the messages.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="bootstrapSecurity">A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <param name="requireCancellation">Specifies whether cancellation is required. Setting this parameter to false enables a security context token that is useful in Web farm scenarios, because in this mode the session state is encoded inside the established security context token instead of being kept in the server memory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bootstrapSecurity" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Creates a symmetric security binding element that is configured to establish a secure conversation between the client and service. The security context token issued at the end of the secure conversation handshake is used to secure the messages. The bootstrap security binding element specifies how the secure conversation handshake messages are secured.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
      <param name="bootstrapSecurity">A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <param name="requireCancellation">Specifies whether cancellation is required. Setting this parameter to false enables a security context token that is useful in Web farm scenarios, because in this mode the session state is encoded inside the established security context token instead of being kept in the server memory.</param>
      <param name="bootstrapProtectionRequirements">The <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bootstrapSecurity" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement(System.Boolean)">
      <summary>Creates a symmetric security binding element that is configured to do SOAP-level SSL negotiation between the client and server, noting whether a client certificate is required.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> that holds the new binding.</returns>
      <param name="requireClientCertificate">true if a client certificate is required during the SSL negotiation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSslNegotiationBindingElement(System.Boolean,System.Boolean)">
      <summary>Creates a symmetric security binding element that does SOAP SSL negotiation, noting whether a client certificate and cancellation is required.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> that holds the new binding.</returns>
      <param name="requireClientCertificate">true if a client certificate is required during the SSL negotiation.</param>
      <param name="requireCancellation">true if cancellation is required. Setting it to false enables a security context token that is useful in Web farm scenarios, because in this mode the session state is encoded inside the established security context token instead of being kept in the server memory.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationBindingElement">
      <summary>Creates a symmetric security binding element that does SOAP SSPI negotiation based on the Negotiate authentication package.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationBindingElement(System.Boolean)">
      <summary>Creates a symmetric security binding element that does SOAP SSPI negotiation based on the Negotiate authentication package.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="requireCancellation">Specifies whether cancellation is required. Setting it to false enables a security context token that is useful in Web farm scenarios, because in this mode the session state is encoded inside the established security context token instead of being kept in the server memory.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationOverTransportBindingElement">
      <summary>Creates a security binding element that is configured for client authentication based on SOAP SSPI negotiation using the Negotiate authentication package. The binding element requires the transport to provide server authentication and message protection (for example, HTTPS).</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSspiNegotiationOverTransportBindingElement(System.Boolean)">
      <summary>Creates a security binding element that is configured for client authentication based on SOAP SSPI negotiation using the Negotiate authentication package. The binding element requires the transport to provide server authentication and message protection (for example, HTTPS).</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
      <param name="requireCancellation">Specifies whether cancellation is required. Setting it to false enables a security context token that is useful in Web farm scenarios, because in this mode the session state is encoded inside the established security context token instead of being kept in the server memory.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForCertificateBindingElement">
      <summary>Creates a symmetric security binding element that is configured to require user name- and password-based client authentication and certificate-based server authentication. The created binding element requires the client to be configured with a service certificate that is out-of-band before opening a communication channel with a service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForSslBindingElement">
      <summary>Creates a symmetric security binding element that is configured to require user name- and password-based client authentication and certificate-based server authentication. The client authenticates the server using the SOAP-level SSL protocol.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameForSslBindingElement(System.Boolean)">
      <summary>Creates a symmetric security binding element that is configured to require user name- and password-based client authentication and certificate-based server authentication. The client authenticates the server using the SOAP-level SSL protocol.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />.</returns>
      <param name="requireCancellation">Specifies whether cancellation is required. Setting it to false enables a security context token that is useful in Web farm scenarios, because in this mode the session state is encoded inside the established security context token instead of being kept in the server memory.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>Creates a security binding element that is configured for client authentication based on a user name and password sent as part of the SOAP message. The binding element requires the transport to provide server authentication and message protection (for example, HTTPS).</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.DefaultAlgorithmSuite">
      <summary>Gets or sets the message encryption and key-wrap algorithms.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null on a set.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.EndpointSupportingTokenParameters">
      <summary>Gets the endpoint that supports token parameters.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object using the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" /> or null if the object is not found.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The property to get.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>Gets or sets a value that indicates whether time stamps are included in each message. </summary>
      <returns>true if time stamps are included in each message; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.KeyEntropyMode">
      <summary>Gets or sets the source of entropy used to create keys.</summary>
      <returns>The <see cref="T:System.serviceModel.Security.SecurityKeyEntropyMode" />. The default value is <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>Gets the binding properties specific to local security settings used by the client.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalServiceSettings">
      <summary>Gets the binding properties specific to local security settings used by the service.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion">
      <summary>Gets or sets the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
      <exception cref="T:System.ArgumentNullException">set with a null value.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.OperationSupportingTokenParameters">
      <summary>Gets the collection of operation supporting token parameters.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IDictionary`2" /> of types <see cref="T:System.String" /> (key) and <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> (value).</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.OptionalEndpointSupportingTokenParameters">
      <summary>Gets the optional supporting token parameters for the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> for the service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.OptionalOperationSupportingTokenParameters">
      <summary>Gets the collection of optional operation supporting token parameters.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IDictionary`2" /> of types <see cref="T:System.String" /> (key) and <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> (value).</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.SecurityHeaderLayout">
      <summary>Gets or sets the ordering of the elements in the security header for this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" />. The default is <see cref="F:System.ServiceModel.Channels.SecurityHeaderLayout.Strict" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" />  value.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.SetIssuerBindingContextIfRequired(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Channels.BindingContext)">
      <summary>Internal system method.</summary>
      <param name="parameters">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</param>
      <param name="issuerBindingContext">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.SetKeyDerivation(System.Boolean)">
      <summary>Sets a value that indicates whether derived keys are required.</summary>
      <param name="requireDerivedKeys">Whether derived keys are required.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.ToString">
      <summary>Returns a description of this class.</summary>
      <returns>A description of the current <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElementImporter">
      <summary>Provides an extensibility point for extending the standard security policy import.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.SecurityBindingElementImporter" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElementImporter.MaxPolicyRedirections">
      <summary>Gets the maximum allowed number of policy redirections.</summary>
      <returns>The maximum allowed number of policy redirections.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Imports a custom policy assertion about bindings.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> that you can use to modify the importing process.</param>
      <param name="policyContext">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityHeaderLayout">
      <summary>Describes the layout of the security header.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.Strict">
      <summary>Items are added to the security header according to the general principle of “declare before use”.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.Lax">
      <summary>Items are added to the security header in any order that confirms to WSS: SOAP Message security.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.LaxTimestampFirst">
      <summary>Items are added to the security header in any order that confirms to WSS: SOAP Message security except that the first element in the security header must be a wsse:Timestamp element.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.LaxTimestampLast">
      <summary>Items are added to the security header in any order that confirms to WSS: SOAP Message security except that the last element in the security header must be a wsse:Timestamp element.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement">
      <summary>Represents a custom binding element that supports channel security using an SSL stream.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.SslStreamSecurityBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" /> class with the values from another <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" />.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" /> to clone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory of a specified type.</summary>
      <returns>An <see cref="T:System.serviceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">The <see cref="T:System.serviceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of a specified type.</summary>
      <returns>An <see cref="T:System.serviceModel.Channels.IChannelListener" />.</returns>
      <param name="context">The <see cref="T:System.serviceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel listener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates an instance on the client of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> based on the channel context provided.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />. </returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the entire channel stack.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates an instance on the server of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> based on the channel context provided.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the entire channel stack.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a value that indicates whether a channel factory of the specified type can be built.</summary>
      <returns>true if a channel factory of the specified type can be built; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel listener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a value that indicates whether a channel listener of the specified type can be built.</summary>
      <returns>true if a channel listener of the specified type can be built; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.serviceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel listener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.Clone">
      <summary>Creates a copy of the current instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" /> instance that is a copy of the current instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or null if the object is not found.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetTransportTokenAssertion">
      <summary>Gets the <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the security binding.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the security binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.IdentityVerifier">
      <summary>Specifies the identity verifier for this binding.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value to set is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.RequireClientCertificate">
      <summary>Gets or sets a value that specifies whether a client certificate is required for this binding.</summary>
      <returns>true if a client certificate is required for this binding; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about bindings.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StandardBindingImporter">
      <summary>Provides an extensibility point for mapping WSDL contracts and policy assertions into Windows Communication Foundation (WCF) standard bindings.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StandardBindingImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StandardBindingImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StandardBindingImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Called prior to importing the metadata documents associated with the standard binding.</summary>
      <param name="wsdlDocuments">The <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> that describes the services.</param>
      <param name="xmlSchemas">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that describes the <paramref name="wsdlDocuments" />.</param>
      <param name="policy">The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.Xml.XmlElement" /> that contains the policy elements.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StandardBindingImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Provides an extensibility point for importing WSDL contract information for standard bindings.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> for importing and resolving WSDL metadata.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> that provides the context for the conversion from WSDL to the service description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StandardBindingImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Provides an extensibility point for mapping endpoints defined in WSDL into the service description.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> for importing and resolving WSDL metadata.</param>
      <param name="endpointContext">The <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> for the conversion.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor">
      <summary>To implement a custom security upgrade acceptor, inherit from this abstract base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeAcceptor.GetRemoteSecurity">
      <summary>Gets the security message property provided on the stream for performing custom security negotiation based on the information provided in the security context.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator">
      <summary>To implement a security upgrade initiator, inherit from this abstract base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator.GetRemoteSecurity">
      <summary>Gets the security message property provided on the stream for performing custom security negotiation based on the information provided in the security context.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamSecurityUpgradeProvider">
      <summary>Implements a custom security upgrade provider, inherited from this abstract base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeProvider" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeProvider" /> class.</summary>
      <param name="timeouts">The default communication time-outs.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.StreamSecurityUpgradeProvider.Identity">
      <summary>Gets the identity being used for the security upgrade.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.EndpointIdentity" /> of the client that requests the security upgrade.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeAcceptor">
      <summary>To implement a custom upgrade acceptor, inherited from this abstract base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeAcceptor" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)">
      <summary>Upgrades the transport stream and returns the upgraded stream.</summary>
      <returns>Returns the upgraded stream.</returns>
      <param name="stream">The stream to be upgraded.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.BeginAcceptUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
      <summary>Asynchronous version of <see cref="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)" />.</summary>
      <returns>Returns a result code that is passed into EndAcceptUpgrade to access the upgraded stream.</returns>
      <param name="stream">The stream to be upgraded.</param>
      <param name="callback">The method to be called when the AcceptUpgrade call has completed.</param>
      <param name="state">State information for the AcceptUpgrade call.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.CanUpgrade(System.String)">
      <summary>Determines whether the upgrade requested is supported by this upgrade acceptor.</summary>
      <returns>true if this kind of upgrade is supported; otherwise, false. </returns>
      <param name="contentType">The type of content to be checked. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.EndAcceptUpgrade(System.IAsyncResult)">
      <summary>Asynchronous version of <see cref="M:System.ServiceModel.Channels.StreamUpgradeAcceptor.AcceptUpgrade(System.IO.Stream)" />.</summary>
      <returns>Returns the upgraded stream.</returns>
      <param name="result">The IAsyncResult returned from BeginAcceptUpgrade.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeBindingElement">
      <summary>Adds a custom stream upgrade provider to a custom binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.#ctor(System.ServiceModel.Channels.StreamUpgradeBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeBindingElement" /> class from an existing instance. </summary>
      <param name="elementToBeCloned">The instance of this class to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates an instance on the client of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> based on the channel context provided.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />. </returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the entire channel stack.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates an instance on the server of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> based on the channel context provided.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the entire channel stack.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeInitiator">
      <summary>To implement a custom upgrade initiator, inherit from this abstract base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)">
      <summary>This abstract method can be implemented to do asynchronous processing that initiates an upgrade.</summary>
      <returns>Returns an <see cref="T:System.IAsyncResult" /> to be passed into the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" /> method.</returns>
      <param name="stream">The stream to be upgraded.</param>
      <param name="callback">The method to call when the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" /> has completed.</param>
      <param name="state">State information about the status of the asynchronous call.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)">
      <summary>This method is the asynchronous callback method that is called after <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> has completed.</summary>
      <returns>Returns the upgraded stream.</returns>
      <param name="result">The IAsyncResult returned from the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> method. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade">
      <summary>Returns the content type of the next upgrade to be performed.</summary>
      <returns>Returns the content type of the next upgrade.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)">
      <summary>Initiates the upgrade of the stream by requesting the other end of its connection to upgrade the channel transport layer. </summary>
      <returns>Returns the upgraded stream.</returns>
      <param name="stream">The stream to be upgraded.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeProvider">
      <summary>Implements a custom upgrade provider, inherited from this abstract base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> class.</summary>
      <param name="timeouts">The default communication time-outs.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeAcceptor">
      <summary>Creates an instance of <see cref="T:System.ServiceModel.Channels.StreamUpgradeAcceptor" />.</summary>
      <returns>Returns an instance of <see cref="T:System.ServiceModel.Channels.StreamUpgradeAcceptor" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates an instance of <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />.</summary>
      <returns>Returns an instance of <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />.</returns>
      <param name="remoteAddress">Endpoint address for the channel.</param>
      <param name="via">The address of the Via URI (an intermediate URI through which communication may be routed).</param>
    </member>
    <member name="P:System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout">
      <summary>Gets the DefaultCloseTimeout.</summary>
      <returns>Returns a <see cref="T:System.Timespan" /> for the DefaultCloseTimeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout">
      <summary>Gets the DefaultOpenTimeout.</summary>
      <returns>Returns a <see cref="T:System.Timespan" /> for the DefaultOpenTimeout.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement">
      <summary>Represents a custom binding element that supports channel security using symmetric encryption.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> class using specified security token parameters. </summary>
      <param name="protectionTokenParameters">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.Clone">
      <summary>Creates a new instance of this class initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object with property values equal to those of the current instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or null if the object is not found.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder">
      <summary>Gets or sets the order of message encryption and signing for this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.MessageProtectionOrder" /> that specifies how the message is protected. The default is <see cref="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">set and value is undefined.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters">
      <summary>Gets or sets the protection token parameters.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation">
      <summary>Gets or sets a value that indicates whether message signatures must be confirmed. </summary>
      <returns>true if message signatures must be confirmed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)">
      <summary>Sets a value that indicates whether derived keys are required.</summary>
      <param name="requireDerivedKeys">Whether derived keys are required.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about bindings.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SymmetricSecurityBindingElement.ToString">
      <summary>Returns a string that represents this <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> instance.</summary>
      <returns>The current <see cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TcpConnectionPoolSettings">
      <summary>Represents properties that control the behavior of the TCP connection pool.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.GroupName">
      <summary>Gets or sets the group name of the connection pool group on the client.</summary>
      <returns>The group name of the connection pool group on the client. The default name is "default".</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.IdleTimeout">
      <summary>Gets or sets the maximum time the connection can be idle in the connection pool before being disconnected.</summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> structure that indicates the maximum time the connection can be idle in the connection pool before being disconnected.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout">
      <summary>Gets or sets the time span after which a connection in the connection pool is closed.</summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> structure that indicates the time span after which a cached TCP connection is purged from the connection pool.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value cannot be less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>Gets or sets the maximum number of outbound connections for each endpoint that is cached in the connection pool.</summary>
      <returns>The maximum number of allowed outbound connections for each endpoint that is cached in the connection pool. The default value is 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TcpTransportBindingElement">
      <summary>Represents the binding element for the TCP transport.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</summary>
      <param name="elementToBeCloned">An instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <returns>Returns a channel factory of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of the specified type.</summary>
      <returns>Returns a channel listener of the specified type.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel listener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>Returns a copy of the current binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings">
      <summary>Gets a collection of connection pool settings.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" /> object that contains various properties related to connection pooling.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or null if the object is not found.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog">
      <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
      <returns>Returns the maximum number of queued connection requests that can be pending. The default is 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value cannot be less than one.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled">
      <summary>Gets or sets a value that indicates whether TCP port sharing is enabled for this connection.</summary>
      <returns>true if TCP port sharing is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport, which is "net.tcp".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled">
      <summary>Gets or sets a Boolean that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.</summary>
      <returns>true if Teredo is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>The binding element that specifies the character encoding and message versioning used for text-based SOAP messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> class with a specified message version and encoding.</summary>
      <param name="messageVersion">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the message version.</param>
      <param name="writeEncoding">The <see cref="T:System.Text.Encoding" /> that is used to format the message characters.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> or <paramref name="writeEncoding" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> value is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.</summary>
      <returns>true if the specified channel listener stack can be build on the service; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> object initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> object with property values equal to those of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Creates a factory for text message encoders that employs the message version and character encoding specified by the current encoding binding element.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that this factory creates.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Gets or sets the number of readers that are allocated to a pool and ready for use to process incoming messages.</summary>
      <returns>The number of readers in the pool. The default value is 64 readers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Gets or sets the number of writers that are allocated to a pool and ready for use to process outgoing messages.</summary>
      <returns>The maximum number of writers to be kept in the pool. The default value is 16 writers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Gets or sets the SOAP and WS-Addressing versions that are used to format the text message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used to format messages. The default value is <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Generates WSDL contract information from encoding policies contained in the binding element.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Generates WSDL contract information from encoding policies contained in the binding element.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Generates WSDL contract information from encoding policies contained in the binding element.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the endpoint description.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Gets or sets the encoding that is used to format the characters in the text message.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that is used to format the characters in the text message. The default text encoding is the UTF-8 format.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> value is not valid.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransactionFlowBindingElement">
      <summary>Represents the configuration element that specifies transaction flow support for a binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor(System.ServiceModel.TransactionProtocol)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class with the specified protocol that is used to flow a transaction.</summary>
      <param name="transactionProtocol">A <see cref="T:System.ServiceModel.TransactionProtocol" /> value that contains the transaction protocol used in flowing a transaction.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel factory for producing channels of a specified type from a binding context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from <paramref name="context" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to build the channel factory.</param>
      <typeparam name="TChannel">The channel type.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A channel factory for the specified channel type cannot be built.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel listener for accepting channels of a specified type from the binding context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> initialized from <paramref name="context" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to build the channel listener.</param>
      <typeparam name="TChannel">The channel type.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A channel listener for the specified channel type cannot be built.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the specified binding context can build a channel factory for producing channels of a specified type.</summary>
      <returns>true if a channel factory for the specified type of channel can be built from <paramref name="context" />; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to determine if a channel factory can be built.</param>
      <typeparam name="TChannel">The channel type.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the specified binding context can build a channel listener for accepting channels of a specified type.</summary>
      <returns>true if a channel listener for the specified type of channel can be built from <paramref name="context" />; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to determine if a channel listener can be built.</param>
      <typeparam name="TChannel">The channel type.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.Clone">
      <summary>Creates a duplicate of this element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> that is a duplicate of this element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets the typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present; null if it is not. </returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />that should be used to get the requested property.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about the binding.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> to be used when exporting the policy of this binding element.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> to be used when exporting the policy of this binding element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransactionFlowBindingElement.TransactionProtocol">
      <summary>Gets or sets the transaction protocol used in flowing a transaction.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionProtocol" /> that specifies the transaction protocol to be used for transaction flow. The default is <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransactionFlowBindingElementImporter">
      <summary>Imports the transaction policy (WS-Policy assertions) of a service endpoint, adds implementing binding elements to the binding on the client, and transaction flow attributes to the appropriate operations on the service’s proxy. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElementImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionFlowBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Imports custom policy assertions and adds implementing binding elements. This method cannot be inherited.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> object to use.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.TransactionMessageProperty">
      <summary>Allows a custom channel, which uses a proprietary transaction flow mechanism, to inject its transaction into the Windows Communication Foundation (WCF) framework. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
      <summary>Sets the transaction that will be used when executing the service method.</summary>
      <param name="transaction">The transaction that will be used when executing the service method.</param>
      <param name="message">The incoming message that results in calling the service method.</param>
      <exception cref="T:System.ServiceModel.FaultException">The property has already been set on <paramref name="message" />.</exception>
      <exception cref="T:System.Transactions.TransactionException">
        <paramref name="transaction" /> needs to be unmarshaled, and that operation fails.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransactionMessageProperty.Transaction">
      <summary>Gets the transaction that will be used when executing the service method.</summary>
      <returns>A <see cref="T:System.Transactions.Transaction" /> instance that will be used when executing the service method.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransferSession">
      <summary>Determines if the contract for the transfer of messages from a client to an application requires a session and whether the delivery of messages must preserve the order in which operations are called by the client. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.TransferSession.None">
      <summary>Specifies that a session is not required to interact with the services on this contract. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.TransferSession.Ordered">
      <summary>Specifies that a session with ordered message delivery guarantees is required to interact with the services on this contract. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.TransferSession.Unordered">
      <summary>Specifies that a session with unordered message delivery guarantees is sufficient to interact with the services on this contract. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>An abstract base class that represents a transport binding element.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Creates a new instance of this class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Creates a new instance of this class from an existing instance.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />     to be cloned. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The property to get.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Gets or sets a value that indicates whether manual addressing of the message is required.</summary>
      <returns>true if manual addressing of the message is required; otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size of any buffer pools used by the transport. </summary>
      <returns>The maximum size of the buffer pool. The default is 524,288 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Gets and sets the maximum allowable message size that can be received.</summary>
      <returns>The maximum allowable message size that can be received. The default is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport, which varies depending on what derived class implements this method.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElementImporter">
      <summary>Imports standard transport binding elements from Web Services Description Language (WSDL) documents with attached policy expressions.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransportBindingElementImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Imports a <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> instance from the policy attached to the WSDL binding.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> that performs the import.</param>
      <param name="policyContext">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> for the contract binding element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Adds custom policy assertions to the WSDL bindings in WSDL documents that are to be imported.</summary>
      <param name="wsdlDocuments">The collection of WSDL documents that are to be imported.</param>
      <param name="xmlSchemas">The collection of XML Schema documents that are to be imported.</param>
      <param name="policy">The collection of policy assertions that are to be imported.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>This method does nothing.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> that performs the import.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> for the contract binding element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Imports addressing information from the WSDL port and imports an <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> or an <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> from the SOAP transport URI if a <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> is not already imported from policy attached to the WSDL.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> that performs the import.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> for the contract binding element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />.Endpoint.Binding is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>Represents a custom binding element that supports mixed-mode security (such as, optimized message security over a secure transport).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>Creates an instance of the <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.BindingElement" /> object initialized from the current class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object with property values equal to those of the current instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" /> or null if the object is not found.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The property to get.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about bindings.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="policyContext">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.UnderstoodHeaders">
      <summary>Represents a collection of message headers that are understood. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.Add(System.ServiceModel.Channels.MessageHeaderInfo)">
      <summary>Adds the specified <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> to this collection. This implies that the specific header has been understood.</summary>
      <param name="headerInfo">Contains additional information regarding a message header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.Contains(System.ServiceModel.Channels.MessageHeaderInfo)">
      <summary>Verifies whether the specified <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> is present in this collection.</summary>
      <returns>true if the specified <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> is present in this collection; otherwise, false.</returns>
      <param name="headerInfo">Contains additional information regarding a message header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.Remove(System.ServiceModel.Channels.MessageHeaderInfo)">
      <summary>Removes the specified <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> from this collection.</summary>
      <param name="headerInfo">Contains additional information regarding a message header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.UseManagedPresentationBindingElement">
      <summary>A binding element used to communicate with a CardSpace Security Token Service that supports the CardSpace profile of WS-Trust.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.UseManagedPresentationBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElement.Clone">
      <summary>Copies the current binding element.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElement" /> that is a copy of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</param>
      <typeparam name="T">The type of object being queried for.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports custom policy assertions in the binding element into the WSDL information.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.UseManagedPresentationBindingElementImporter">
      <summary>Converts WSDL-based policies for <see cref="T:System.ServiceModel.Channels.UseManagedPresentationBindingElement" />s into descriptions of the binding elements that can implement these policies for the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElementImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.UseManagedPresentationBindingElementImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UseManagedPresentationBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Defines a method that can import custom policy assertions and add implementing binding elements.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> object in use.</param>
      <param name="policyContext">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement">
      <summary>Represents the binding element used to specify Windows stream security settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.WindowsStreamSecurityBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement" /> class from an existing instance. </summary>
      <param name="elementToBeCloned">Instance of this class to clone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <returns>Returns a channel factory of the specified type. This method adds this class instance to the <see cref="P:System.ServiceModel.Channels.BindingContext.BindingParameters" /> and delegates to the build method <see cref="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel listener of the specified type.</summary>
      <returns>Returns a channel listener of the specified type. This method adds this class instance to the <see cref="P:System.ServiceModel.Channels.BindingContext.BindingParameters" /> and delegates to the build method <see cref="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelListener``1" />.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel listener.</param>
      <typeparam name="TChannel">Type of channel listener.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates an instance on the client of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> based on the channel context provided.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />. </returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the entire channel stack.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates an instance on the server of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> based on the channel context provided.</summary>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the entire channel stack.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <returns>true if a channel factory can be built; otherwise, false.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel listener of the specified type can be built.</summary>
      <returns>true if a channel listener can be built; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.Clone">
      <summary>Creates a new binding element from this instance of the class.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" /> or null if the object is not found.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.GetTransportTokenAssertion">
      <summary>Gets the <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the security binding.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the transport token used in the policy generated by this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.ProtectionLevel">
      <summary>Gets or sets the protection level.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" />. The default value is <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about Windows stream security.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.XmlSerializerImportOptions">
      <summary>Contains information needed to perform schema importation using the <see cref="T:System.Xml.Serialization.XmlSerializer" /> and <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> infrastructure.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.XmlSerializerImportOptions.#ctor"></member>
    <member name="M:System.ServiceModel.Channels.XmlSerializerImportOptions.#ctor(System.CodeDom.CodeCompileUnit)">
      <param name="codeCompileUnit"></param>
    </member>
    <member name="P:System.ServiceModel.Channels.XmlSerializerImportOptions.ClrNamespace"></member>
    <member name="P:System.ServiceModel.Channels.XmlSerializerImportOptions.CodeCompileUnit"></member>
    <member name="P:System.ServiceModel.Channels.XmlSerializerImportOptions.CodeProvider"></member>
    <member name="P:System.ServiceModel.Channels.XmlSerializerImportOptions.WebReferenceOptions"></member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion">
      <summary>Gets or sets the version of WS-ReliableMessaging specified by the binding element.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the version of the WS-ReliableMessaging protocol used by the configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RemoteEndpointMessageProperty">
      <summary>Makes available the client IP address and port number associated with the remote endpoint from which a message was sent.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RemoteEndpointMessageProperty.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.RemoteEndpointMessageProperty" /> class for a specified IP address and port that identify the client from which the message was sent.</summary>
      <param name="address">The IP address of the remote endpoint associated with the message.</param>
      <param name="port">The port number of the remote endpoint associated with the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null or empty.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is less than zero or greater than 65535 (0xffff).</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.RemoteEndpointMessageProperty.Address">
      <summary>Gets the IP address of the client from which the message was sent.</summary>
      <returns>The IP address of the client from which the message was sent.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RemoteEndpointMessageProperty.Name">
      <summary>Returns the string "System.ServiceModel.Channels.RemoteEndpointMessageProperty".</summary>
      <returns>"System.ServiceModel.Channels.RemoteEndpointMessageProperty"</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.RemoteEndpointMessageProperty.Port">
      <summary>Gets the port number of the client from which the message was sent.</summary>
      <returns>The port number of the client from which the message was sent.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.SupportedAddressingMode">
      <summary>Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous">
      <summary>The server only supports anonymous addresses and clients must provide an anonymous response address.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous">
      <summary>The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed">
      <summary>The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.WrappedOptions">
      <summary>Contains information required to perform schema importation using the <see cref="T:System.Xml.Serialization.XmlSerializer" /> and <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> infrastructure.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WrappedOptions.#ctor"></member>
    <member name="P:System.ServiceModel.Channels.WrappedOptions.WrappedFlag">
      <summary>Gets or sets a value that indicates whether special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped. </summary>
      <returns>true if special-casing is used for document-wrapped-literal styled documents when parameters are unwrapped; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.DllHostInitializer">
      <summary>This class provides the implementation of the <see cref="T:System.EnterpriseServices.IProcessInitializer" /> interface for the initialization of Windows Communication Foundation (WCF) COM+ integration services. It should not be used directly.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.DllHostInitializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ComIntegration.DllHostInitializer" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.DllHostInitializer.Shutdown">
      <summary>Shuts down all the COM+ service hosts that were started by calls to the Startup method.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.DllHostInitializer.Startup(System.Object)">
      <summary>Starts a COM+ service host for the current COM+ application.</summary>
      <param name="punkProcessControl">Always pass null.</param>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.IChannelCredentials">
      <summary>An interface that allows the setting of certain security features on a service proxy.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)">
      <summary>Retrieves a certificate from a file and adds it to the client credentials. </summary>
      <param name="fileName">File name that contains the certificate.</param>
      <param name="password">Password required for the file.</param>
      <param name="keyStorageFlags">Storage flags for the certificate.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)">
      <summary>Retrieves a certificate from a certificate store and adds it to the client credentials.</summary>
      <param name="storeLocation">Certificate store location.</param>
      <param name="storeName">Certificate store name.</param>
      <param name="findType">Search type.</param>
      <param name="findValue">Search value.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)">
      <summary>Retrieves a certificate from a certificate store by name and adds it to the client credentials.</summary>
      <param name="subjectName">Certificate subject name.</param>
      <param name="storeLocation">Certificate store location.</param>
      <param name="storeName">Certificate store name.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)">
      <summary>Retrieves a certificate from a file and adds it to the service credentials as the default certificate.</summary>
      <param name="fileName">Certificate file name.</param>
      <param name="password">Password for certificate file.</param>
      <param name="keyStorageFlags">Storage flags for certificate.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)">
      <summary>Retrieves a certificate from a certificate store and adds it to the service credentials as the default certificate.</summary>
      <param name="storeLocation">Certificate store location.</param>
      <param name="storeName">Certificate store name.</param>
      <param name="findType">Search type.</param>
      <param name="findValue">Search value.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)">
      <summary>Retrieves a certificate from a certificate store by name and adds it to the service credentials as the default certificate</summary>
      <param name="subjectName">Certificate subject name.</param>
      <param name="storeLocation">Certificate store location.</param>
      <param name="storeName">Certificate store name.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)">
      <summary>Sets parameters for the issued token.</summary>
      <param name="localIssuerAddres">Endpoint address.</param>
      <param name="localIssuerBindingType">Binding type.</param>
      <param name="localIssuerBinding">Binding name.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)">
      <summary>Sets the service certificate authentication parameters.</summary>
      <param name="storeLocation">Store location.</param>
      <param name="revocationMode">Revocation mode.</param>
      <param name="certificationValidationMode">Certification validation mode.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)">
      <summary>Sets the user name credentials.</summary>
      <param name="userName">User name.</param>
      <param name="password">Password.</param>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)">
      <summary>Sets the Windows credentials.</summary>
      <param name="domain">Domain.</param>
      <param name="userName">User name.</param>
      <param name="password">Password.</param>
      <param name="impersonationLevel">Impersonation level.</param>
      <param name="allowNtlm">Allow NTLM authentication scheme.</param>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper">
      <summary>Persists objects that implement IPersistStream (such as ADO Recordset) to a byte stream.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper.GetObject``1(``0@)">
      <summary>Uses the IPersistStream interface of the object to deserialize an object from a byte stream.</summary>
      <param name="obj">An object into which the deserialized object will be placed.</param>
      <typeparam name="T">The object type.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.PersistStreamTypeWrapper.SetObject``1(``0)">
      <summary>Uses the IPersistStream interface of the object to serialize that object to a byte stream.</summary>
      <param name="obj">The object to be persisted to the byte stream.</param>
      <typeparam name="T">The object type.</typeparam>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.ServiceMoniker">
      <summary>This class provides the supporting implementation for the COM service moniker and should not be used directly.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.ServiceMoniker.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ComIntegration.ServiceMoniker" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.ComIntegration.WasHostedComPlusFactory">
      <summary>Creates a service host for a Web-hosted COM+ component.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.WasHostedComPlusFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ComIntegration.WasHostedComPlusFactory" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ComIntegration.WasHostedComPlusFactory.CreateServiceHost(System.String,System.Uri[])">
      <summary>Creates a service host for the specified URI.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceHostBase" /> object that contains the service host for the specified URI.</returns>
      <param name="constructorString">A string that contains the Web host parameters.</param>
      <param name="baseAddresses">An array of URIs for which the <see cref="T:System.ServiceModel.ServiceHostBase" /> object is to be created.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement">
      <summary>Represents the configuration element that contains a collection of address headers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AddressHeaderCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.AddressHeaderCollectionElement.Headers">
      <summary>Gets or sets a collection of address headers.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.AuthenticationMode">
      <summary>Specifies the authentication setting used for message exchange.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.AnonymousForCertificate">
      <summary>Specifies that the initiator is anonymous, and that the responder is authenticated.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.AnonymousForSslNegotiated">
      <summary>Specifies that the initiator is anonymous.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.CertificateOverTransport">
      <summary>Specifies that the initiator is authenticated by an X.509 version 3 certificate, and that the responder is authenticated by SSL over HTTPS.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.IssuedToken">
      <summary>Specifies that the initiator and responder are authenticated by XML symmetric key tokens.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.IssuedTokenForCertificate">
      <summary>Specifies that the initiator is authenticated by an XML symmetric key token, and that the responder is authenticated by an X.509 version 3 certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.IssuedTokenForSslNegotiated">
      <summary>Specifies that the initiator is authenticated by an XML symmetric key token, and that the responder is authenticated by the SOAP implementation of SSL.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.IssuedTokenOverTransport">
      <summary>Specifies that the initiator is authenticated by an XML symmetric key token, and that the responder is authenticated by SSL over HTTPS.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.Kerberos">
      <summary>Specifies that the initiator and responder are authenticated using the Kerberos protocol.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.KerberosOverTransport">
      <summary>Specifies that the initiator is authenticated using the Kerberos protocol, and the responder is authenticated by SSL over HTTPS.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.MutualCertificate">
      <summary>Specifies that the initiator and responder are authenticated with X.509 version 3 certificates.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.MutualCertificateDuplex">
      <summary>Specifies that the initiator and responder are authenticated with X.509 version 3 certificates.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.MutualSslNegotiated">
      <summary>Specifies that the initiator and responder mutually authenticate each other using X509 version 3 certificates, and the responder's certificate is available from the SOAP SSL negotiation.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.SecureConversation">
      <summary>Specifies that WS-SecureConversation authentication is used.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiated">
      <summary>Specifies that the initiator and responder obtain a shared security context using the Security Service Provider Interface (SSPI).</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.UserNameForCertificate">
      <summary>Specifies that the initiator is authenticated using a username token, and the responder's certificate is available to the initiator out-of-band.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.UserNameForSslNegotiated">
      <summary>Specifies that the initiator is authenticated using a username token, and that the responder is authenticated by the SOAP implementation of SSL.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.UserNameOverTransport">
      <summary>Specifies that the initiator is authenticated using a username token, and that the responder is authenticated by SSL over HTTPS.</summary>
    </member>
    <member name="F:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport">
      <summary>Specifies that the initiator is authenticated by a security context using the Security Service Provider Interface (SSPI), and the responder is authenticated by SSL over HTTPS.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement">
      <summary>Contains a configuration element that specifies an authorization policy, which enables transformation of one set of input claims into another set of claims. Access control can be granted or denied based on that. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement" /> class with the specified policy type.</summary>
      <param name="policyType">The type of policy to be initialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="policyType" /> is null or empty.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement.PolicyType">
      <summary>Gets or sets the policy type.</summary>
      <returns>The policy type.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection">
      <summary>Contains a collection of <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.BaseAddressElement">
      <summary>Represents a configuration element that specifies the base addresses used by the service host. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BaseAddressElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BaseAddressElement.BaseAddress">
      <summary>Gets or sets a base address used by the service host.</summary>
      <returns>A base address used by the service host.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BaseAddressElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.BaseAddressElement" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BaseAddressElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpBindingCollectionElement">
      <summary>Represents a configuration section that holds a collection of <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpBindingElement">
      <summary>Represents an XML element that specifies a binding used to communicate with WS-I Basic Profile 1.1-conformant Web Services like ASMX-based services or to accept messages from ASMX-based clients.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" /> class with a name. </summary>
      <param name="name">The name of the binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.AllowCookies">
      <summary>Gets or sets a Boolean value that specifies whether the client accepts cookies and propagates them on future requests. </summary>
      <returns>true if the client accepts cookies and propagates them on future requests; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.BindingElementType">
      <summary>Gets the type of the binding element.</summary>
      <returns>A type that specifies the binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.BypassProxyOnLocal">
      <summary>Gets or sets the attribute that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>A Boolean value that indicates whether to bypass the proxy server for local addresses.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration element with the content of the specified binding collection.</summary>
      <param name="binding">A collection of binding elements.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size for a buffer pool that stores messages processed by the binding.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the maximum size (in bytes) for a buffer pool that is processed by the binding. The default value is 512*1024 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size for a buffer that stores messages processed by the binding.</summary>
      <returns>The maximum size for a buffer that stores messages processed by the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be received.</summary>
      <returns>The maximum size, in bytes, for a message that can be received by the binding. The default value is 65,536 bytes. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.MessageEncoding">
      <summary>Gets or sets whether MTOM or text/XML is used to encode SOAP messages.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates that MTOM or text/XML is used to encode SOAP messages. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Called when the content of a specified binding collection is applied to this binding configuration element.</summary>
      <param name="binding">A collection of binding elements.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this binding configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this binding configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A URI that contains the address of the HTTP proxy.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.Security">
      <summary>Gets or sets the type of security to be used with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.BasicHttpSecurityElement" /> that specifies the type of security to be used with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>A valid <see cref="T:System.Text.Encoding" /> value that indicates the character encoding that is used.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.TransferMode">
      <summary>Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.TransferMode" /> value that specifies whether messages are buffered or streamed or a request or response.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpBindingElement.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement">
      <summary>An XML element that configures HTTP message security.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement.AlgorithmSuite">
      <summary>Specifies the algorithms to use with the <see cref="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement" /> class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" /> . </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement.ClientCredentialType">
      <summary>Specifies the type of client credential to use with the <see cref="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement" /> class.</summary>
      <returns>A <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> . The default is UserName.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BasicHttpSecurityElement">
      <summary>Represents an XML element that configures the security for a basic HTTP service.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BasicHttpSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BasicHttpSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpSecurityElement.Message">
      <summary>Gets an XML element that configures the message security for a basic HTTP service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.BasicHttpMessageSecurityElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpSecurityElement.Mode">
      <summary>Gets an XML element that specifies the security mode for a basic HTTP service.</summary>
      <returns>A <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BasicHttpSecurityElement.Transport">
      <summary>Gets an XML element that specifies the transport for a basic HTTP service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.HttpTransportSecurityElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BehaviorExtensionElement">
      <summary>Represents a configuration element that contains sub-elements that specify behavior extensions, which enable the user to customize service or endpoint behaviors.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BehaviorExtensionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BehaviorExtensionElement.BehaviorType">
      <summary>Gets the type of behavior.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BehaviorExtensionElement.CreateBehavior">
      <summary>Creates a behavior extension based on the current configuration settings.</summary>
      <returns>The behavior extension.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BehaviorsSection">
      <summary>Represents the configuration section that contains child entries that are behavior elements identified by their unique name.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BehaviorsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BehaviorsSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BehaviorsSection.EndpointBehaviors">
      <summary>Gets all the child entries that are endpoint behavior elements identified by their unique name.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElementCollection" /> that contains endpoint behavior elements identified by their unique name.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BehaviorsSection.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BehaviorsSection.ServiceBehaviors">
      <summary>Gets all the child entries that are service behavior elements identified by their unique name.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElementCollection" /> that contains service behavior elements identified by their unique name.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BinaryMessageEncodingElement">
      <summary>Represents a message encoder that encodes Windows Communication Foundation (WCF) messages in binary on the wire. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BinaryMessageEncodingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BinaryMessageEncodingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BinaryMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration section.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>A <see cref="T:System.Type" /> that contains the type of this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BinaryMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration section to this configuration section.</summary>
      <param name="from">The configuration section to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.MaxReadPoolSize">
      <summary>Gets or sets a value that specifies the maximum number of messages that can be read simultaneously without allocating new readers.</summary>
      <returns>The maximum number of messages that can be read simultaneously without allocating new readers. The default is 64.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.MaxSessionSize">
      <summary>Gets or sets a value that specifies the size, in bytes, of the buffer used for encoding.</summary>
      <returns>The size, in bytes, of the buffer used for encoding. The default is 2048.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.MaxWritePoolSize">
      <summary>Gets or sets a value that specifies the maximum number of messages that can be sent simultaneously without allocating new writers.</summary>
      <returns>The maximum number of messages that can be sent simultaneously without allocating new writers. The default is 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BinaryMessageEncodingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BindingCollectionElement">
      <summary>Represents a configuration section that contains a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints, that is built, consistently, into a channel factory on the client and a channel listener on the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BindingCollectionElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingCollectionElement.BindingName">
      <summary>Gets the name of the binding.</summary>
      <returns>The unique name of the binding.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The current configuration collection name was not found.-or-The configuration section name was not found. </exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingCollectionElement.BindingType">
      <summary>Gets the type of the binding.</summary>
      <returns>A <see cref="T:System.Type" /> that contains the type of the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingCollectionElement.ConfiguredBindings">
      <summary>Gets all the binding configuration elements in this collection.</summary>
      <returns>All the binding configuration elements in this collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingCollectionElement.ContainsKey(System.String)">
      <summary>Determines whether a binding exists in the collection using the specified name.</summary>
      <returns>true if the collection contains the binding with the specified <paramref name="name" />; otherwise, false. </returns>
      <param name="name">The name of the binding to be located.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingCollectionElement.GetDefault">
      <summary>Gets the default binding used.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents the default binding.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
      <summary>Adds the specified binding to the collection.</summary>
      <returns>true if the operation completed successfully; otherwise, false.</returns>
      <param name="name">The name of the binding to be added.</param>
      <param name="binding">A <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents the binding to be added.</param>
      <param name="config">The configuration settings of this binding.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.BindingElementExtensionElement">
      <summary>Enables the use of a custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> implementation from a machine or application configuration file. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingElementExtensionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BindingElementExtensionElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingElementExtensionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration element.</summary>
      <param name="bindingElement">A binding element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElement" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingElementExtensionElement.BindingElementType">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Type" /> object that represents the custom binding element. </summary>
      <returns>A <see cref="T:System.Type" /> object that represents the custom binding type.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingElementExtensionElement.CreateBindingElement">
      <summary>When overridden in a derived class, returns a custom binding element object. </summary>
      <returns>A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingElementExtensionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding configuration section with the content of the specified binding element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.BindingsSection">
      <summary>Represents a collection of binding elements. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BindingsSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.BasicHttpBinding">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" /> objects.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingCollectionElement" /> object that defines the configuration section that contains a collection of <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.BindingCollections">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Configuration.BindingCollectionElement" /> instances.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Configuration.BindingCollectionElement" /> instances.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.CustomBinding">
      <summary>Gets the configuration section that provides full control over the messaging stack for the user.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.CustomBindingCollectionElement" /> object that contains a collection of custom binding elements. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.BindingsSection.GetSection(System.Configuration.Configuration)">
      <summary>Gets the configuration setting of a section from the specified configuration file.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.BindingsSection" /> with the settings retrieved from the specified file.</returns>
      <param name="config">A configuration file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> is null or empty.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.Item(System.String)">
      <summary>Gets the specified binding in this configuration section.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.BindingCollectionElement" />.</returns>
      <param name="binding">The binding to access.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.MsmqIntegrationBinding">
      <summary>Gets the configuration element that contains a collection of MsmqIntegration binding elements.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingCollectionElement" /> object that contains a collection of MsmqIntegration binding elements.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.NetMsmqBinding">
      <summary>Gets the configuration element that contains a collection of netMsmqBinding binding elements.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingCollectionElement" /> object that contains a collection of netMsmqBinding binding elements.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.NetNamedPipeBinding">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />.objects.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingCollectionElement" /> that contains a collection of <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />.objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.NetPeerTcpBinding">
      <summary>Gets the configuration element that contains a collection of netPeerTcpBinding elements. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingCollectionElement" /> that contains a collection of <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingElement" /> elements.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.NetTcpBinding">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" /> objects. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.NetTcpBindingCollectionElement" /> that contains a collection of <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" /> objects. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WSDualHttpBinding">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> objects. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingCollectionElement" /> that contains a collection of <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> objects. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WSFederationHttpBinding">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" /> objects. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingCollectionElement" /> that contains a collection of <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" /> objects. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WSHttpBinding">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" /> objects. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.WSHttpBindingCollectionElement" /> that contains a collection of <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" /> objects. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CallbackDebugElement">
      <summary>Represents a configuration element that specifies service-side debugging for a Windows Communication Foundation (WCF) callback object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CallbackDebugElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CallbackDebugElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CallbackDebugElement.BehaviorType">
      <summary>Gets the type of this behavior element.</summary>
      <returns>The <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CallbackDebugElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element. </summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.CallbackDebugElement.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that specifies whether client callback objects return managed exception information in SOAP faults back to the service.</summary>
      <returns>true if Windows Communication Foundation (WCF) returns managed client callback exception information in the SOAP faults for service-side debugging purposes in duplex communication; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CallbackTimeoutsElement">
      <summary>Represents a configuration element that specifies timeout for a client callback. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CallbackTimeoutsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CallbackTimeoutsElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CallbackTimeoutsElement.BehaviorType">
      <summary>Gets the type of this behavior element.</summary>
      <returns>The <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CallbackTimeoutsElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element. </summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.CallbackTimeoutsElement.TransactionTimeout">
      <summary>Gets or sets the period within which a transaction must complete.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that represents the time within which transactions must complete or be automatically aborted.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CertificateElement">
      <summary>Represents a configuration element that specifies an X.509 certificate used for authentication. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CertificateElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CertificateElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateElement.EncodedValue">
      <summary>Gets or sets a value that indicates the value encoded by this certificate.</summary>
      <returns>The encoded value.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CertificateReferenceElement">
      <summary>Represents the configuration settings for validating an X.509 certificate. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CertificateReferenceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CertificateReferenceElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.FindValue">
      <summary>Gets or sets a string that specifies the value to search for in the X.509 certificate store.</summary>
      <returns>The value to search for in the X.509 certificate store.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.IsChainIncluded">
      <summary>Gets or sets a boolean value that specifies whether the validation is done using a certificate chain.</summary>
      <returns>true if a certificate chain is used in validation; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.StoreLocation">
      <summary>Gets or sets a value that specifies the location of the certificate store the client can use to validate the server’s certificate.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> that specifies the location of the certificate store the client can use to validate the server’s certificate. The default value is <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.StoreName">
      <summary>Gets or sets the name of the X.509 certificate store to open.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the name of the X.509 certificate store to open.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CertificateReferenceElement.X509FindType">
      <summary>Gets or sets the type of X.509 search to be executed.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> that contains the type of X.509 search to be executed.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ChannelEndpointElement">
      <summary>Provides options for configuring contract, binding, and address properties of the channel endpoint, which are used by clients to connect to service endpoints on the server. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ChannelEndpointElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ChannelEndpointElement.#ctor(System.ServiceModel.EndpointAddress,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> class with the specified endpoint address and contract type.</summary>
      <param name="address">Specifies the address of the endpoint. The default is an empty string. The address must be an absolute URI.</param>
      <param name="contractType">A string that indicates which contract this endpoint is exposing. The assembly must implement the contract type.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Address">
      <summary>Specifies the address of the endpoint.</summary>
      <returns>A URI that contains the address of the endpoint. The address must be an absolute URI.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration">
      <summary>Gets or sets the behavior name of the behavior to be used to instantiate the endpoint.</summary>
      <returns>The behavior name of the behavior to be used to instantiate the endpoint. The behavior name must be in scope at the point the service is defined. The default is an empty string.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Binding">
      <summary>Gets or sets the type of binding to use.</summary>
      <returns>The type of binding to use. The type must have a registered configuration section in order to be referenced. The type is the registered by section name, rather than by the type name of the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration">
      <summary>Gets or sets the binding name of the binding to use when the endpoint is instantiated.</summary>
      <returns>The binding name of the binding to use when the endpoint is instantiated. The binding name must be in scope at the point the endpoint is defined. The default is an empty string.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Contract">
      <summary>Gets or sets the contract this endpoint is exposing.</summary>
      <returns>The contract this endpoint is exposing. The assembly must implement the contract type.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Headers">
      <summary>Gets a collection of address headers.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement" /> that contains a collection of address headers.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Identity">
      <summary>Gets an identity that enables the authentication of an endpoint by other endpoints exchanging messages with it.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.IdentityElement" /> that contains configuration settings for enabling the authentication of an endpoint by other endpoints exchanging messages with it.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelEndpointElement.Name">
      <summary>Gets or sets a unique identifier of an endpoint for a given contract.</summary>
      <returns>An endpoint for a given contract. The default is an empty string. The service model allows the user to define multiple clients for a given contract type. Each definition must be differentiated by a unique configuration name. If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ChannelEndpointElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ChannelEndpointElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ChannelPoolSettingsElement">
      <summary>Defines channel pool settings for a custom binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ChannelPoolSettingsElement.#ctor"></member>
    <member name="P:System.ServiceModel.Configuration.ChannelPoolSettingsElement.IdleTimeout">
      <summary>Get or sets the maximum time the connection can be idle before being disconnected.</summary>
      <returns>A positive <see cref="T:System.TimeSpan" /> that specifies the maximum time the connection can be idle before being disconnected. The default is 00:02:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelPoolSettingsElement.LeaseTimeout">
      <summary>Gets or sets the time after which an active connection is closed. The default is 00:05:00.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the time after which an active connection is closed. The default is 00:05:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ChannelPoolSettingsElement.MaxOutboundChannelsPerEndpoint">
      <summary>Gets or sets the maximum number of channels to a remote endpoint initiated by the service.</summary>
      <returns>The maximum number of channels to a remote endpoint initiated by the service.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClaimTypeElement">
      <summary>Represents a configuration element that contains the type of claim. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClaimTypeElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ClaimTypeElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClaimTypeElement.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ClaimTypeElement" /> class. </summary>
      <param name="claimType">A uniform resource identifier (URI) that specifies the type of claim. Predefined claim types are available as static properties of the <see cref="T:System.IdentityModel.Claims.ClaimTypes" /> class.</param>
      <param name="isOptional">A boolean value that specifies whether the claim is optional.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClaimTypeElement.ClaimType">
      <summary>Gets or sets a string representation of a uniform resource identifier (URI) that specifies the type of claim. </summary>
      <returns>A uniform resource identifier (URI) that specifies the type of claim. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClaimTypeElement.IsOptional">
      <summary>Gets or sets a boolean value that specifies whether the claim is optional.</summary>
      <returns>true if the claim is optional; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClaimTypeElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.ClaimTypeElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClaimTypeElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ClaimTypeElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClientCredentialsElement">
      <summary>Represents a configuration element that configures a client credential.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientCredentialsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ClientCredentialsElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientCredentialsElement.ApplyConfiguration(System.ServiceModel.Description.ClientCredentials)">
      <summary>Applies the content of a specified configuration element to this configuration element.</summary>
      <param name="behavior">A configuration element to be applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.BehaviorType">
      <summary>Gets the type of this behavior element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.ClientCertificate">
      <summary>Gets the client certificate to be used when the client certificate is available out-of-band. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement" /> that specifies the client certificate to be used when the client certificate is available out-of-band. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientCredentialsElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element. </summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientCredentialsElement.CreateBehavior">
      <summary>Creates a custom behavior based on the settings of this configuration element.</summary>
      <returns>A custom behavior based on the settings of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.HttpDigest">
      <summary>Gets the configuration element that configures the current HTTP digest credential.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.HttpDigestClientElement" /> that configures the current HTTP digest credential. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.IssuedToken">
      <summary>Gets the configuration element that configures the current issued token instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientElement" /> that configures the current issued token.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.Peer">
      <summary>Gets the configuration element that configures the current peer credential.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.PeerCredentialElement" /> that configures the current peer credential.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.ServiceCertificate">
      <summary>Gets an X.509 certificate initiated by a client.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.X509RecipientCertificateClientElement" /> that specifies an X.509 certificate initiated by a client.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.SupportInteractive">
      <summary>Gets or sets a boolean value that specifies whether the credential supports interactive negotiation.</summary>
      <returns>true if the credential supports interactive negotiation; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.Type">
      <summary>Gets the type of this configuration element.</summary>
      <returns>A string containing the type of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientCredentialsElement.Windows">
      <summary>Gets the settings for Windows credential validation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.WindowsClientElement" /> that specifies the settings for Windows credential validation.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClientSection">
      <summary>Represents the client section of a configuration file, which defines a list of endpoints that a client can connect to. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ClientSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientSection.Endpoints">
      <summary>Gets a list of endpoints that a client can connect to.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ChannelEndpointElementCollection" /> that contains a list of endpoints that a client can connect to.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientSection.Metadata">
      <summary>Gets the configuration settings for processing metadata.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.MetadataElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ClientViaElement">
      <summary>Represents a configuration element that specifies the route a message should take. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientViaElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ClientViaElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientViaElement.BehaviorType">
      <summary>Gets the type of this behavior element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ClientViaElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the contents of the specified configuration element into this instance.</summary>
      <param name="from">A configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ClientViaElement.ViaUri">
      <summary>Gets or sets a Uri that specifies the route a message should take.</summary>
      <returns>A Uri that specifies the route a message should take.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComContractElement">
      <summary>Specifies a COM+ integration service contract. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComContractElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> class. </summary>
      <param name="contractType">A string that contains the type of contract.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.Contract">
      <summary>Gets or sets the contract type.</summary>
      <returns>The contract type.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
      <summary>Gets a collection of COM+ methods that are exposed when the interface on a COM+ component is exposed as a Web service. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ComMethodElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.Name">
      <summary>Gets or sets the contract name.</summary>
      <returns>The contract name.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.Namespace">
      <summary>Gets or sets the contract namespace.</summary>
      <returns>The contract namespace.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.PersistableTypes">
      <summary>Gets all the persistable types.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
      <summary>Gets or sets a Boolean value that specifies whether the contract can only be used on sessionful bindings.</summary>
      <returns>true if the contract can only be used on sessionful bindings; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
      <summary>Gets a collection of User Defined Types (UDT) that is to be included in the service contract. This class cannot be inherited.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ComUdtElementCollection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComContractElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComContractElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComContractsSection">
      <summary>Represents a configuration section that contains elements for specifying the namespace and contract name for a COM+ integration contract. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComContractsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractsSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComContractsSection.ComContracts">
      <summary>Gets all the COM+ integration service contracts specified in the section.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ComContractElementCollection" /> that contains all the COM+ integration service contracts specified in the section.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComMethodElement">
      <summary>Represents a COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComMethodElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComMethodElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComMethodElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComMethodElement" /> class with the specified method. </summary>
      <param name="method">A COM+ method exposed.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComMethodElement.ExposedMethod">
      <summary>Gets the COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service.</summary>
      <returns>The name of the COM+ method that is exposed when the interface on a COM+ component is exposed as a Web service.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComMethodElementCollection">
      <summary>Contains a collection of <see cref="T:System.ServiceModel.Configuration.ComMethodElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComMethodElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComMethodElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.CommonBehaviorsSection">
      <summary>Represents the configuration section that contains a list of behaviors that is applied to all Windows Communication Foundation (WCF) services on the machine before the behaviors in the behaviors section are applied.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonBehaviorsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CommonBehaviorsSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CommonBehaviorsSection.EndpointBehaviors">
      <summary>Gets all the child entries that are EndpointBehavior elements identified by their unique name.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.CommonEndpointBehaviorElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CommonBehaviorsSection.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CommonBehaviorsSection.ServiceBehaviors">
      <summary>Gets all the child entries that are serviceBehavior elements identified by their unique name.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.CommonServiceBehaviorElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CommonEndpointBehaviorElement">
      <summary>Represents the configuration element that contains a list of endpoint behaviors that is applied to all Windows Communication Foundation (WCF) endpoints on the machine before the behaviors in the endpointBehaviors section are applied.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonEndpointBehaviorElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CommonEndpointBehaviorElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonEndpointBehaviorElement.Add(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Adds the specified element to this configuration section.</summary>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The type associated with <paramref name="element" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonEndpointBehaviorElement.CanAdd(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Adds a new behavior element to this section and returns a value indicating if the operation is successful.</summary>
      <returns>true if the operation is successful; otherwise, false.</returns>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The type associated with <paramref name="element" /> is invalid.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.CommonServiceBehaviorElement">
      <summary>Represents the configuration element that contains a list of service behaviors that is applied to all Windows Communication Foundation (WCF) endpoints on the machine before the behaviors in the serviceBehaviors section are applied.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonServiceBehaviorElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CommonServiceBehaviorElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonServiceBehaviorElement.Add(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Adds the specified element to this configuration section.</summary>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The type associated with <paramref name="element" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.CommonServiceBehaviorElement.CanAdd(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Adds a new behavior element to this section and returns a value indicating if the operation is successful.</summary>
      <returns>true if the operation is successful; otherwise, false.</returns>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The type associated with <paramref name="element" /> is invalid.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComPersistableTypeElement">
      <summary>Specifies all the persistable types.This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComPersistableTypeElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComPersistableTypeElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElement" /> class. </summary>
      <param name="ID">A unique identifier for a persistable type.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComPersistableTypeElement.ID">
      <summary>Gets or sets a unique identifier for a persistable type.</summary>
      <returns>A unique identifier for a persistable type.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComPersistableTypeElement.Name">
      <summary>Gets or sets the name of the persistable type.</summary>
      <returns>A name of the persistable type.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComPersistableTypeElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElement" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComPersistableTypeElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComPersistableTypeElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.CompositeDuplexElement">
      <summary>Represents the configuration element that is used when the client must expose an endpoint for the service to send messages over HTTP. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CompositeDuplexElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CompositeDuplexElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration section.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType">
      <summary>Gets the type of binding element.</summary>
      <returns>The type of binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress">
      <summary>Gets or sets the base address for the client.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the base address for the client.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComUdtElement">
      <summary>Represents a User Defined Type (UDT) that is to be included in the service contract. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComUdtElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComUdtElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComUdtElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComUdtElement" /> class with the specified GUID string.</summary>
      <param name="typeDefID">A GUID string that identifies the specific UDT type within the registered type library.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComUdtElement.Name">
      <summary>Gets or sets the readable type name. </summary>
      <returns>The readable type name. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComUdtElement.TypeDefID">
      <summary>Gets or sets a GUID string that identifies the specific UDT type within the registered type library.</summary>
      <returns>The specific UDT type within the registered type library.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComUdtElement.TypeLibID">
      <summary>Gets or sets a GUID string that identifies the registered type library that defines the type.</summary>
      <returns>The registered type library that defines the type.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ComUdtElement.TypeLibVersion">
      <summary>Gets or sets a string that identifies the type library version that defines the type.</summary>
      <returns>The type library version that defines the type.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ComUdtElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.ComUdtElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ComUdtElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComUdtElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ConnectionOrientedTransportElement">
      <summary>Represents the configuration element that provides additional configuration settings to connection-oriented transport binding elements, such as TCP and named pipes.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ChannelInitializationTimeout">
      <summary>Gets or sets the maximum time the channel can be in the initialization status before being disconnected.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> structure that specifies the maximum time the channel can be in the initialization status before being disconnected.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.ConnectionBufferSize">
      <summary>Gets or sets the size of the buffer used to transmit a part of the serialized message on the wire from the client or service.</summary>
      <returns>The size of the buffer used to transmit a part of the serialized message on the wire from the client or service. The default value is 8K.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element. </summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is included when routing incoming requests to an endpoint URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" /> , which ignores the hostname in the match. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use.</summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxOutputDelay">
      <summary>Gets or sets the maximum interval of time that a part of a message or a full message can remain buffered in memory before being sent out.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the maximum interval of time that a part of a message or a full message can remain buffered in memory before being sent out. The default value is 2 seconds. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingAccepts">
      <summary>Gets or sets the maximum number of pending asynchronous accept threads that are available for processing incoming connections on the service.</summary>
      <returns>The maximum number of pending messages the service can accept. The default value is 1.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.MaxPendingConnections">
      <summary>Gets or sets the maximum number of pending connections.</summary>
      <returns>The maximum number of pending connections.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ConnectionOrientedTransportElement.TransferMode">
      <summary>Gets or sets a value that specifies whether the messages are buffered or streamed with the connection-oriented transport.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.TransferMode" /> value that specifies whether a channel uses streamed or buffered modes of message transfer. The default is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CustomBindingCollectionElement">
      <summary>Represents a collection of customBinding configuration elements that provide full control over the messaging stack for the user. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CustomBindingCollectionElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingCollectionElement.Bindings">
      <summary>Gets the bindings defined in this section.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.CustomBindingElementCollection" /> that contains all the bindings defined in this section.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingCollectionElement.BindingType">
      <summary>Gets the type of this binding.</summary>
      <returns>A <see cref="T:System.Type" /> that contains the type of the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingCollectionElement.ConfiguredBindings">
      <summary>Gets all the binding configuration elements contained in this element.</summary>
      <returns>A collection of all the binding configuration elements contained in this element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingCollectionElement.ContainsKey(System.String)">
      <summary>Determines whether a specific binding exists in the collection using the specified name.</summary>
      <returns>true if the collection contains the binding with the specified <paramref name="name" />; otherwise, false. </returns>
      <param name="name">The name of the binding to be located.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.CustomBindingElement">
      <summary>Represents the configuration section that provides full control over the messaging stack for the user.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CustomBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CustomBindingElement" /> class with the specified name.</summary>
      <param name="name">A unique name for the binding element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.Add(System.ServiceModel.Configuration.BindingElementExtensionElement)">
      <summary>Adds the specified element to this configuration section.</summary>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BindingElementExtensionElement" /> to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null or empty.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The message encoding configuration element already exists in the binding.-or-The stream upgrade element already exists in the binding.-or-The transport element already exists in the binding.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the content of the specified binding to this binding configuration element. This method cannot be inherited.</summary>
      <param name="binding">A binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is null or empty.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The type specified by <paramref name="binding" /> is invalid.-or-The stream upgrade element already exists in the binding.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.CanAdd(System.ServiceModel.Configuration.BindingElementExtensionElement)">
      <summary>Adds a new behavior element to this section and returns a value indicating if the operation is successful.</summary>
      <returns>true if the operation is successful; otherwise, false.</returns>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BindingElementExtensionElement" /> to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null or empty.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.CloseTimeout">
      <summary>Gets or sets the interval of time provided for a close operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Called when the content of a specified binding element is applied to this binding configuration element.</summary>
      <param name="binding">A binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.OpenTimeout">
      <summary>Gets or sets the interval of time provided for an open operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.ReceiveTimeout">
      <summary>Gets or sets the interval of time provided for a receive operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.CustomBindingElement.SendTimeout">
      <summary>Gets or sets the interval of time provided for a send operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.CustomBindingElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.CustomBindingElement" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.CustomBindingElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CustomBindingElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.DataContractSerializerElement">
      <summary>Represents a configuration element that specifies the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> to be used. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DataContractSerializerElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.DataContractSerializerElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.DataContractSerializerElement.BehaviorType">
      <summary>Gets the type of this behavior element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.DataContractSerializerElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the values from the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied from.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.DataContractSerializerElement.IgnoreExtensionDataObject">
      <summary>Gets a value that specifies whether to ignore data supplied by an extension of the class, when the class is being serialized or deserialized.</summary>
      <returns>true to omit the extension data; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DataContractSerializerElement.MaxItemsInObjectGraph">
      <summary>Gets the maximum number of items to serialize or deserialize.</summary>
      <returns>The maximum number of items to serialize or deserialize. The default is 65536.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.DiagnosticSection">
      <summary>Represents the configuration section that defines settings that can be used by an administrator for run-time inspection and control.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DiagnosticSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.DiagnosticSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.DiagnosticSection.MessageLogging">
      <summary>Describes the settings for Windows Communication Foundation (WCF) message logging.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.MessageLoggingElement" /> that describes the settings for WCF message logging.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DiagnosticSection.PerformanceCounters">
      <summary>Gets or sets a value that specifies whether performance counters for the assembly are enabled. </summary>
      <returns>A valid <see cref="T:System.ServiceModel.Diagnostics.PerformanceCounterScope" /> value that specifies what kind of performance counters for the assembly are enabled.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.DiagnosticSection.WmiProviderEnabled">
      <summary>Gets or sets a value that specifies whether the WMI provider for the assembly is enabled.</summary>
      <returns>true if the WMI provider for the assembly is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.DnsElement">
      <summary>Represents a configuration element that specifies the URI for a DNS claim. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.DnsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.DnsElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.DnsElement.Value">
      <summary>Gets or sets the value represented by this configuration element.</summary>
      <returns>The value represented by this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.EndpointAddressElementBase">
      <summary>An XML element that contains a unique network address that a client uses to communicate with a service endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointAddressElementBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.EndpointAddressElementBase" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointAddressElementBase.Address">
      <summary>Gets or sets the URI for the endpoint.</summary>
      <returns>The <see cref="T:System.Uri" /> that identifies the network location for the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointAddressElementBase.Copy(System.ServiceModel.Configuration.EndpointAddressElementBase)">
      <summary>Copies the content of a specified configuration element to this configuration element.</summary>
      <param name="source">The configuration element to be copied over.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null or empty.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read-only. </exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointAddressElementBase.Headers">
      <summary>Gets the collection of address headers for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement" /> that contains address information for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointAddressElementBase.Identity">
      <summary>Gets the identity for the endpoint.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.IdentityElement" /> that provides an identity that enables the authentication of an endpoint by other endpoints exchanging messages with it.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointAddressElementBase.InitializeFrom(System.ServiceModel.EndpointAddress)">
      <summary>Initializes this endpoint address with the content of the specified endpoint address.</summary>
      <param name="endpointAddress">An endpoint address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointAddress" /> is null or empty.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.EndpointAddressElementBase.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.EndpointBehaviorElement">
      <summary>Represents a configuration element that contains a list of endpoint behaviors that is applied to all Windows Communication Foundation (WCF) endpoints on the machine.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElement" /> class with the specified name.</summary>
      <param name="name">A unique name of the behavior element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElement.Add(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Adds a new behavior element to this section.</summary>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> to be added.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The type specified by <paramref name="element" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElement.CanAdd(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Adds a new behavior element to this section and returns a value indicating if the operation is successful.</summary>
      <returns>true if the operation is successful; otherwise, false.</returns>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> to be added.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.EndpointBehaviorElementCollection">
      <summary>Contains a collection of <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElement" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.EndpointBehaviorElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.EndpointBehaviorElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ExtensionElement">
      <summary>Represents a configuration element that defines an extension, which enables the user to create user-defined bindings, behaviors, etc.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> class with a specified name.</summary>
      <param name="name">A unique name of this configuration element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElement.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> class with a specified name and type.</summary>
      <param name="name">A unique name of this configuration element.</param>
      <param name="type">The type of this configuration element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null or empty.-or-<paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionElement.Name">
      <summary>Gets or sets a unique name of this configuration element.</summary>
      <returns>A unique name of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionElement.Type">
      <summary>Gets or sets the type of this configuration element.</summary>
      <returns>The type of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ExtensionElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.ExtensionElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</summary>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">An extension with the same name or type as <paramref name="element" /> already exists in the collection.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary>Adds a configuration element to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />, at the specified location.</summary>
      <param name="index">The index location at which to add <paramref name="element" />.</param>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">An extension with the same name or type as <paramref name="element" /> already exists in the collection.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for the specified configuration element.</summary>
      <returns>An <see cref="T:System.Object" /> that acts as the key for the specified configuration element.</returns>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null or empty.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate">
      <summary>Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> will cause an exception to be thrown.</summary>
      <returns>true if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> will cause an exception to be thrown; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ExtensionsSection">
      <summary>Represents a configuration section that contains all the extension definitions.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ExtensionsSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionsSection.BehaviorExtensions">
      <summary>Gets all the behavior extensions that are defined in the section.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionsSection.BindingElementExtensions">
      <summary>Gets all the binding element extensions that are defined in the section.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionsSection.BindingExtensions">
      <summary>Gets all the binding extensions that are defined in the section.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ExtensionsSection.InitializeDefault">
      <summary>Initialize a default set of values for this configuration section.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ExtensionsSection.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement">
      <summary>Represents a configuration element that configures the security of a message sent using HTTP in a federation.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.AlgorithmSuite">
      <summary>Gets or sets  the message encryption and key-wrap algorithms. </summary>
      <returns>A valid <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> value. The default value is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.ClaimTypeRequirements">
      <summary>Gets the set of claim types for this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ClaimTypeElementCollection" />. The default is an empty collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.IssuedKeyType">
      <summary>Gets or sets the type of key to be issued.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />. The default is <see cref="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.IssuedTokenType">
      <summary>Gets or sets a URI that specifies the type of token to be issued.</summary>
      <returns>A URI that specifies the type of token to be issued. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.Issuer">
      <summary>Gets the issuer address.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.IssuerMetadata">
      <summary>Gets the endpoint address of the issuer.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.EndpointAddressElementBase" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.NegotiateServiceCredential">
      <summary>Gets or sets a boolean value that specifies whether the service credential is exchanged as part of the negotiation.</summary>
      <returns>true if the service credential is negotiated; false if the service credential is available out-of-band. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement.TokenRequestParameters">
      <summary>Gets a collection of configuration elements that specify additional XML elements to be sent in the message body to the Security Token Service when requesting a token.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.XmlElementElementCollection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HostElement">
      <summary>Represents a configuration element that specifies settings for a service host. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HostElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.HostElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.HostElement.BaseAddresses">
      <summary>Gets the base addresses used by the service host.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.BaseAddressElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HostElement.Timeouts">
      <summary>Gets a configuration element that specifies the interval of time allowed for the service host to open or close.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.HostTimeoutsElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HostTimeoutsElement">
      <summary>Represents a configuration element that specifies the interval of time allowed for the service host to open or close. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HostTimeoutsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.HostTimeoutsElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.HostTimeoutsElement.CloseTimeout">
      <summary>Gets or sets the interval of time allowed for the service host to close.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the service host to close</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HostTimeoutsElement.OpenTimeout">
      <summary>Gets or sets the interval of time allowed for the service host to open.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the service host to open.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HttpDigestClientElement">
      <summary>Represents the current HTTP digest credential in the clientCredential element. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpDigestClientElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.HttpDigestClientElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpDigestClientElement.Copy(System.ServiceModel.Configuration.HttpDigestClientElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null or empty.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpDigestClientElement.ImpersonationLevel">
      <summary>Gets or sets the impersonation preference that the client uses to communicate to the server. </summary>
      <returns>A valid <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> value. The default is <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HttpsTransportElement">
      <summary>Represents the configuration element that specifies an HTTPS transport for transmitting SOAP messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.HttpsTransportElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of the specified <see cref="T:System.ServiceModel.Channels.BindingElement" /> to this configuration element.</summary>
      <param name="bindingElement">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> whose settings are to be applied to this configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpsTransportElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>A <see cref="T:System.Type" /> of this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the settings from the specified <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to this configuration element.</summary>
      <param name="from">The <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> whose settings are to be copied to this configuration element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.CreateDefaultBindingElement">
      <summary>Creates a binding element from the settings in this configuration element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> whose properties are copied from the settings in this configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpsTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpsTransportElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpsTransportElement.RequireClientCertificate">
      <summary>Gets or sets a boolean value that specifies whether the server requires the client to provide a client certificate as part of the HTTPS handshake.</summary>
      <returns>true if SSL client authentication is required; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HttpTransportElement">
      <summary>Represents the configuration element that specifies an HTTP transport for transmitting SOAP messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.HttpTransportElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of the specified <see cref="T:System.ServiceModel.Channels.BindingElement" /> to this configuration element.</summary>
      <param name="bindingElement">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> whose settings are to be applied to this configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.AuthenticationScheme">
      <summary>Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP listener.</summary>
      <returns>The <see cref="T:System.Net.AuthenticationSchemes" /> object that specifies the protocols used for client authentication. The default is Anonymous.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.BindingElementType">
      <summary>Gets the type of binding.</summary>
      <returns>The type of binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether proxies are ignored for local addresses.</summary>
      <returns>true if proxies are ignored for local addresses; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the settings from the specified <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to this configuration element.</summary>
      <param name="from">The <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> whose settings are to be copied to this configuration element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.CreateDefaultBindingElement">
      <summary>Creates a binding element from the settings in this configuration element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> whose properties are copied from the settings in this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is included when routing incoming requests to an endpoint URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.KeepAliveEnabled">
      <summary>Gets or sets a Boolean value that specifies whether to make a persistent connection to the internet resource.</summary>
      <returns>true if a persistent connection to the internet resource is maintained; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer pool. </summary>
      <returns>The maximum size of the buffer pool. The default is 524,288 bytes (512 * 1024).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.ProxyAddress">
      <summary>Gets or sets a URI that contains the address of the proxy to use for HTTP requests.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the address for the proxy.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.ProxyAuthenticationScheme">
      <summary>Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP proxy.</summary>
      <returns>The <see cref="T:System.Net.AuthenticationSchemes" /> object that specifies the protocols used for client authentication on the proxy. The default is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.Realm">
      <summary>Gets or sets the authentication realm.</summary>
      <returns>A string that contains the authentication realm. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.TransferMode">
      <summary>Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.TransferMode" /> value that specifies whether messages are buffered or streamed or a request or response.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.UnsafeConnectionNtlmAuthentication">
      <summary>Gets or sets a value that indicates whether unsafe connection sharing is enabled on the server. </summary>
      <returns>true if unsafe connection sharing is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportElement.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user-specific settings.</summary>
      <returns>true if the <see cref="N:System.Net" /> default proxy settings are used; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.HttpTransportSecurityElement">
      <summary>Represents a configuration element that controls authentication parameters for the HTTP transport. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.HttpTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.HttpTransportSecurityElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportSecurityElement.ClientCredentialType">
      <summary>Gets and sets the type of client credential to be used for authentication.</summary>
      <returns>A <see cref="T:System.ServiceModel.HttpClientCredentialType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportSecurityElement.ProxyCredentialType">
      <summary>Gets and sets the type of client credential to be used for authentication against the proxy.</summary>
      <returns>A <see cref="T:System.ServiceModel.HttpProxyCredentialType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.HttpTransportSecurityElement.Realm">
      <summary>Gets or sets the authentication realm for digest or basic authentication.</summary>
      <returns>The authentication realm. The default value is "". </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IBindingConfigurationElement">
      <summary>Provides the basic configuration settings for a binding element. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IBindingConfigurationElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the content of the specified binding to this binding configuration section.</summary>
      <param name="binding">A binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.CloseTimeout">
      <summary>Gets the interval of time provided for a close operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.Name">
      <summary>Gets the name of the binding.</summary>
      <returns>The name of the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.OpenTimeout">
      <summary>Gets the interval of time provided for an open operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.ReceiveTimeout">
      <summary>Gets the interval of time provided for a receive operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IBindingConfigurationElement.SendTimeout">
      <summary>Gets the interval of time provided for a send operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IdentityElement">
      <summary>Represents a configuration element that enables the authentication of an endpoint by other endpoints exchanging messages with it. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IdentityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.IdentityElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.Certificate">
      <summary>Gets the configuration settings of an X.509 certificate.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.CertificateElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.CertificateReference">
      <summary>Gets the configuration settings for X.509 certificate validation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.CertificateReferenceElement" /> that defines configuration settings for X.509 certificate validation.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.Dns">
      <summary>Gets a DNS identity.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.DnsElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.IdentityElement.InitializeFrom(System.ServiceModel.EndpointIdentity)">
      <summary>Initializes this configuration element with the content of the specified object.</summary>
      <param name="identity">An <see cref="T:System.ServiceModel.EndpointIdentity" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null or empty.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.Rsa">
      <summary>Gets a RSA identity.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.RsaElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.ServicePrincipalName">
      <summary>Gets a server principal name (SPN) identity.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ServicePrincipalNameElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IdentityElement.UserPrincipalName">
      <summary>Gets a user principal name (UPN) identity.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.UserPrincipalNameElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement">
      <summary>Represents the configuration element that specifies the current issued token for a client credential. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement.BehaviorConfiguration">
      <summary>Gets or sets the behavior that this configuration applies to.</summary>
      <returns>The name of the behavior that this configuration applies to. The default is an empty string.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement.IssuerAddress">
      <summary>Gets or sets the address of the token issuer.</summary>
      <returns>The address of the token issuer. The default is an empty string.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement" /> instances. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenClientElement">
      <summary>Represents a configuration element that specifies the token issued as a client credential. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenClientElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.CacheIssuedTokens">
      <summary>Gets or sets a Boolean that specifies whether issued tokens are to be cached.</summary>
      <returns>true if tokens are to be cached; otherwise, false. The default is true. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenClientElement.Copy(System.ServiceModel.Configuration.IssuedTokenClientElement)">
      <summary>Copies the content of the specified configuration element to this <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientElement" />.</summary>
      <param name="from">A configuration section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null or empty.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.DefaultKeyEntropyMode">
      <summary>Gets or sets the default value of <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" /> value. The default value is <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.IssuedTokenRenewalThresholdPercentage">
      <summary>Gets or sets the renewal threshold percentage for issued tokens.</summary>
      <returns>The renewal threshold percentage for issued tokens.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.IssuerChannelBehaviors">
      <summary>Gets a collection of configuration elements that define issuer channel behaviors.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElementCollection" /> .</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.LocalIssuer">
      <summary>Gets or sets a configuration element that defines the address of the local issuer.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement" /> that specifies the address of the local issuer.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.LocalIssuerChannelBehaviors">
      <summary>Gets a collection of local issuer channel behaviors.</summary>
      <returns>A collection of local issuer channel behaviors. The default is an empty string.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenClientElement.MaxIssuedTokenCachingTime">
      <summary>Gets or sets the maximum caching time for an issued token.</summary>
      <returns>A <see cref="T:System.Timespan" /> that represents the maximum caching time for an issued token. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenParametersElement">
      <summary>Represents a configuration element that specifies additional settings for an issued token. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenParametersElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.AdditionalRequestParameters">
      <summary>Gets a collection of configuration elements that specifies extra information.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.XmlElementElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.ClaimTypeRequirements">
      <summary>Gets a collection of required claim types.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ClaimTypeElementCollection" />. Each element in the collection is a <see cref="T:System.ServiceModel.Configuration.ClaimTypeElement" /> instance whose <see cref="P:System.ServiceModel.Configuration.ClaimTypeElement.ClaimType" /> property is set.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.Issuer">
      <summary>Gets a configuration element that specifies the endpoint that issues the current token.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.IssuerMetadata">
      <summary>Gets a configuration element that specifies additional information of the token issuer. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.EndpointAddressElementBase" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeySize">
      <summary>Gets or sets the size of the issuance key.</summary>
      <returns>The size of the issuance key. The default value is 256.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType">
      <summary>Gets or sets the type of key to be issued.</summary>
      <returns>A valid <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" /> value that specifies the type of key to be issued. The default value is <see cref="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.TokenType">
      <summary>Gets or sets the type of token to be used in issuance.</summary>
      <returns>A string. The default is http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAML.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement">
      <summary>Represents a configuration element that specifies an endpoint that issues a security token. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement.Binding">
      <summary>Gets or sets the type of binding to use.</summary>
      <returns>The type of binding to use. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersEndpointAddressElement.BindingConfiguration">
      <summary>Gets or sets the name of the binding configuration to use when the endpoint is instantiated. The binding configuration must be in scope when the endpoint is defined.</summary>
      <returns>The name of the binding configuration to use when the endpoint is instantiated.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.IssuedTokenServiceElement">
      <summary>Represents a configuration element that specifies the token issued as a service credential. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenServiceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.IssuedTokenServiceElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowUntrustedRsaIssuers">
      <summary>Gets or sets a value that specifies whether untrusted RSA certificate issuers are allowed.</summary>
      <returns>true if untrusted RSA certificate issuers are accepted; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.IssuedTokenServiceElement.Copy(System.ServiceModel.Configuration.IssuedTokenServiceElement)">
      <summary>Copies the content of the specified configuration element to this <see cref="T:System.ServiceModel.Configuration.IssuedTokenServiceElement" />.</summary>
      <param name="from">A configuration element to copy from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null or empty.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.KnownCertificates">
      <summary>Gets a collection of configuration elements that specify certificates issued by a trusted issuer. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.SamlSerializerType">
      <summary>Gets or sets the type of <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is used for the service credential.</summary>
      <returns>The type of <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is used for the service credential.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement">
      <summary>Configures the security settings of a local client. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CacheCookies">
      <summary>Gets or sets a boolean value that specifies whether cookie caching is enabled. </summary>
      <returns>true if cookie caching is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage">
      <summary>Gets or sets the maximum percentage of cookies that can be renewed.</summary>
      <returns>A value that is between 0 and 100 inclusively. The default is 90.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.DetectReplays">
      <summary>Gets or sets a boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.</summary>
      <returns>true if replay attacks against the channel are detected and dealt with automatically; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the maximum time difference between the system clocks of the two communicating parties.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the maximum time difference between the system clocks of the two communicating parties. The default value is "00:05:00".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxCookieCachingTime">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the maximum lifetime of cookies.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the maximum lifetime of cookies. The default value is "10675199.02:48:05.4775807".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReconnectTransportOnFailure">
      <summary>Gets or sets a boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.</summary>
      <returns>true if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayCacheSize">
      <summary>Gets or sets a value that specifies the number of cached nonces used for replay detection.</summary>
      <returns>The number of cached nonces used for replay detection. The default value is 500000.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration in which individual message nonces are valid.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the duration in which individual message nonces are valid.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRenewalInterval">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration after which the initiator renews the key for the security session.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the duration after which the initiator renews the key for the security session. The default is "10:00:00".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRolloverInterval">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the time interval a previous session key is valid on incoming messages during a key renewal. The default is "00:05:00".</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the duration a previous session key is valid on incoming messages during a key renewal. The default is "00:05:00".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.TimestampValidityDuration">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration in which a time stamp is valid.</summary>
      <returns>A positive <see cref="T:System.TimeSpan" /> that specifies the duration in which a time stamp is valid. The default is "00:15:00".</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement">
      <summary>Configures the security settings of a local service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.DetectReplays">
      <summary>Gets or sets a Boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.</summary>
      <returns>true if replay attacks against the channel are detected and dealt with automatically; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.InactivityTimeout">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration of inactivity the channel waits before it times out. </summary>
      <returns>A positive <see cref="T:System.TimeSpan" /> that specifies the duration of inactivity the channel waits before it times out. The default is "01:00:00".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.IssuedCookieLifetime">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the lifetime issued to all new security cookies.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the lifetime issued to all new security cookies. The default value is "10:00:00".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxCachedCookies">
      <summary>Gets or sets a value that specifies the maximum number of cookies that can be cached.</summary>
      <returns>The maximum number of cookies that can be cached.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxClockSkew">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the maximum time difference between the system clocks of the two communicating parties.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the maximum time difference between the system clocks of the two communicating parties. The default value is "00:05:00".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxPendingSessions">
      <summary>Gets or sets a value that specifies the maximum number of pending security sessions that the service supports.</summary>
      <returns>The maximum number of pending security sessions that the service supports. The default value is 1000.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxStatefulNegotiations">
      <summary>Gets or sets a value that specifies the number of security negotiations that can be active concurrently.</summary>
      <returns>The number of security negotiations that can be active concurrently. The default value is 1024.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.NegotiationTimeout">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the maximum duration for the security negotiation phase between server and client.</summary>
      <returns>A positive <see cref="T:System.TimeSpan" /> value that specifies the maximum duration for the security negotiation phase between server and client. The default is "00:02:00"</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure">
      <summary>Gets or sets a Boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.</summary>
      <returns>true if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayCacheSize">
      <summary>Gets or sets a value that specifies the number of cached nonces used for replay detection.</summary>
      <returns>The number of cached nonces used for replay detection. The default value is 500000.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayWindow">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration in which individual message nonces are valid.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the duration in which individual message nonces are valid.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration after which the initiator renews the key for the security session.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the duration after which the initiator renews the key for the security session. The default is "10:00:00".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the time interval a previous session key is valid on incoming messages during a key renewal. The default is "00:05:00".</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the duration a previous session key is valid on incoming messages during a key renewal. The default is "00:05:00".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.TimestampValidityDuration">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration in which a time stamp is valid.</summary>
      <returns>A positive <see cref="T:System.TimeSpan" /> that specifies the duration in which a time stamp is valid. The default is "00:15:00".</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MessageLoggingElement">
      <summary>Represents an XML element that defines the settings for the message-logging capabilities of Windows Communication Foundation (WCF). </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MessageLoggingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MessageLoggingElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.Filters">
      <summary>Gets the XPathFilter objects that are used for message logging.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage">
      <summary>Gets or sets a value that specifies whether the entire message (message header and body) is logged. </summary>
      <returns>true if the entire message (message header and body) is logged; otherwise, false. The default is false, which means that only the message header is logged. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages">
      <summary>Gets or sets a value that specifies whether malformed messages are logged. </summary>
      <returns>true if malformed messages are logged; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel">
      <summary>Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms). </summary>
      <returns>true if messages are traced at the service level (before encryption and transport-related transforms); otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel">
      <summary>Gets or sets a value that specifies whether messages are traced at the transport level. </summary>
      <returns>true if messages are traced at the transport level; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog">
      <summary>Gets or sets a value that specifies the maximum number of messages to log.</summary>
      <returns>The maximum number of messages to log. The default is 1000.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog">
      <summary>Gets or sets a value that specifies the maximum size, in bytes, of a message to log. </summary>
      <returns>The maximum size, in bytes, of a message to log. Messages larger than the limit are not logged. This setting affects all trace levels. The default is Int32.MaxValue.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MessageSecurityOverHttpElement">
      <summary>Defines the security configuration settings for message sent using HTTP.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverHttpElement.AlgorithmSuite">
      <summary>Gets or sets the message encryption and key-wrap algorithms used to secure an HTTP message.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> value that specifies the message encryption and key-wrap algorithms used to secure an HTTP message. The default value is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverHttpElement.ClientCredentialType">
      <summary>Specifies the type of credential to be used when performing client authentication using message-based security or TransportWithMessageCredential.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.MessageCredentialType" /> value that specifies the type of credential to be used when performing client authentication using message-based security or TransportWithMessageCredential. The default value is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverHttpElement.NegotiateServiceCredential">
      <summary>Gets or sets a Boolean value that specifies whether the service credential is provisioned at the client out-of-band, or is obtained from the service to the client through a process of negotiation.</summary>
      <returns>true if the service credential is provisioned at the client out-of-band; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverHttpElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement">
      <summary>Enables setting message-level security properties on the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.AlgorithmSuite">
      <summary>Specifies the algorithm suite used for security messages at the SOAP level.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> setting for messages sent over the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverMsmqElement.ClientCredentialType">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MessageCredentialType" /> security setting for messages sent over the MSMQ transport.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageCredentialType" /> security setting for messages sent over the MSMQ transport.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MessageSecurityOverTcpElement">
      <summary>Defines the configuration settings for the security of a message sent using TCP. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MessageSecurityOverTcpElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverTcpElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverTcpElement.AlgorithmSuite">
      <summary>Gets or sets the message encryption and key-wrap algorithms used to secure a TCP message.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> value that specifies the message encryption and key-wrap algorithms used to secure a TCP message. The default value is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MessageSecurityOverTcpElement.ClientCredentialType">
      <summary>Specifies the type of credential to be used when performing client authentication using message-based security or TransportWithMessageCredential.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.MessageCredentialType" /> value that specifies the type of credential to be used when performing client authentication using message-based security or TransportWithMessageCredential. The default value is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MetadataElement">
      <summary>Represents a configuration element that specifies how service metadata can be processed. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MetadataElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MetadataElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MetadataElement.LoadPolicyImportExtensions">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Description.IPolicyImportExtension" /> objects used to import custom policy assertions about bindings.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.IPolicyImportExtension" /> objects used to import custom policy assertions about bindings.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MetadataElement.LoadWsdlImportExtensions">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> objects used to import custom WSDL information. </summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> objects used to import custom WSDL information.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MetadataElement.PolicyImporters">
      <summary>Gets a collection of policy importers that specifies the import of custom policy assertions about bindings.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.PolicyImporterElementCollection" /> that specifies the import of custom policy assertions about bindings.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MetadataElement.WsdlImporters">
      <summary>Gets a collection of WSDL importers that imports Web Services Description Language (WSDL) 1.1 metadata with WS-Policy attachments.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.WsdlImporterElementCollection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexBindingBindingCollectionElement`2">
      <summary>Represents a collection of MEX binding configuration elements.</summary>
      <typeparam name="TStandardBinding">A standard binding element.</typeparam>
      <typeparam name="TBindingConfiguration">A binding configuration element.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexBindingBindingCollectionElement`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexBindingBindingCollectionElement`2" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexBindingBindingCollectionElement`2.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
      <summary>Adds the specified binding to the collection.</summary>
      <returns>true if the binding can be added to this collection; otherwise, false.</returns>
      <param name="name">The name of the binding to be added.</param>
      <param name="binding">A <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents the binding to be added.</param>
      <param name="config">The configuration settings for this binding.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexBindingElement`1">
      <summary>Represents a base configuration element that specifies the settings for a binding used for the WS-MetadataExchange (WS-MEX) message exchange. </summary>
      <typeparam name="TStandardBinding">A standard binding element.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexBindingElement`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexBindingElement`1" /> class with the specified name.</summary>
      <param name="name">The name of the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MexBindingElement`1.BindingElementType">
      <summary>Gets the type of this binding element. </summary>
      <returns>The <see cref="T:System.Type" /> of this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexBindingElement`1.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Called when the content of a specified binding configuration element is applied to this binding configuration element.</summary>
      <param name="binding">A binding configuration element.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexHttpBindingCollectionElement">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.MexHttpBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexHttpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpBindingCollectionElement.GetDefault">
      <summary>Retrieves the default values of a configuration element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexHttpBindingElement">
      <summary>Represents a configuration element that specifies the settings for a binding used for the WS-MetadataExchange (WS-MEX) message exchange over HTTP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexHttpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexHttpBindingElement" /> class with the specified name. </summary>
      <param name="name">The name of the binding.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexHttpsBindingCollectionElement">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.MexHttpsBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpsBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexHttpsBindingCollectionElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpsBindingCollectionElement.GetDefault">
      <summary>Retrieves the default values of a configuration element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexHttpsBindingElement">
      <summary>Represents a configuration element that specifies the settings for a binding used for the WS-MetadataExchange (WS-MEX) message exchange over HTTPS.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpsBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexHttpsBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexHttpsBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexHttpsBindingElement" /> class with the specified name.</summary>
      <param name="name">The name of the binding.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexNamedPipeBindingCollectionElement">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.MexNamedPipeBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexNamedPipeBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexNamedPipeBindingCollectionElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexNamedPipeBindingCollectionElement.GetDefault">
      <summary>Retrieves the default values of a configuration element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexNamedPipeBindingElement">
      <summary>Represents a configuration element that specifies the settings for a binding used for the WS-MetadataExchange (WS-MEX) message exchange over named pipe.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexNamedPipeBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexNamedPipeBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexNamedPipeBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexNamedPipeBindingElement" /> class with the specified name.</summary>
      <param name="name">The name of the binding.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexTcpBindingCollectionElement">
      <summary>Represents a collection of  <see cref="T:System.ServiceModel.Configuration.MexTcpBindingElement" /> objects. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexTcpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexTcpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexTcpBindingCollectionElement.GetDefault">
      <summary>Gets the default binding element of this collection.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MexTcpBindingElement">
      <summary>Represents a configuration element that specifies the settings for a binding used for the WS-MetadataExchange (WS-MEX) message exchange over TCP.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexTcpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexTcpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MexTcpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MexTcpBindingElement" /> class with the specified name.</summary>
      <param name="name">The name of the binding.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqBindingElementBase">
      <summary>Provides the base class with members common to the <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" /> and <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> classes. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqBindingElementBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqBindingElementBase.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> class.</summary>
      <param name="name">The configuration name of the binding. This value should be unique because it is used to identify this specific binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue">
      <summary>Gets or sets a <see cref="T:System.Uri" /> that identifies a custom dead-letter queue where expired messages or messages that failed to be delivered are sent.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the URI of the custom dead-letter-queue.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.DeadLetterQueue" /> setting for this binding. </summary>
      <returns>A <see cref="T:System.ServiceModel.DeadLetterQueue" /> value specifying which type of dead-letter queue to use, if any.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.Durable">
      <summary>Gets or sets a value that specifies whether messages sent with this binding are durable or volatile.</summary>
      <returns>true if the messages processed by this binding are durable; false if they are volatile. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ExactlyOnce">
      <summary>Gets or sets a value that specifies whether messages sent with this binding have exactly-once assurances.</summary>
      <returns>A value that specifies whether messages sent with this binding have exactly-once assurances.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqBindingElementBase.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding with the content from the specified binding.</summary>
      <param name="binding">A binding that contains the settings that are used to initialize this binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxReceivedMessageSize">
      <summary>Gets or sets a value that indicates the maximum size allowed for a message.</summary>
      <returns>The maximum allowed size for a message that is sent or received with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles">
      <summary>Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</summary>
      <returns>The number of retry cycles to attempt prior to transferring a message to the poison-message queue.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqBindingElementBase.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Called when the content of this binding is applied to the specified binding.</summary>
      <param name="binding">A binding that contains the settings that are applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this binding configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveErrorHandling">
      <summary>Gets or sets an enumeration value that specifies how poison and messages that cannot be dispatched are handled.</summary>
      <returns>A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and messages that cannot be dispatched are handled.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount">
      <summary>Gets or sets the maximum number of immediate retries the queue manager should attempt if transmission of a message from the application queue to the application fails.</summary>
      <returns>The maximum number of times the queue manager should attempt to send a message before transferring it to the retry queue.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.RetryCycleDelay">
      <summary>Gets or sets a value that specifies how long to wait before attempting another retry cycle when attempting to deliver a message that could not be delivered.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application. The default value is 30 (minutes).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.TimeToLive">
      <summary>Gets or sets a value that specifies how long messages are valid. When this time has elapsed, the message is placed in a dead-letter queue (if available).</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies how long messages are valid. The default value is 24 hours.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing">
      <summary>Gets or sets a value that enables or disables the MSMQ built-in message tracing facility.</summary>
      <returns>A value that enables or disables the Message Queuing built-in message tracing facility.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqBindingElementBase.UseSourceJournal">
      <summary>Gets or sets a value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</summary>
      <returns>true if messages processed by this binding are copied to the source journal queue; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqElementBase">
      <summary>Provides the base class with members common to the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" /> and <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqElementBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqElementBase" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of this binding element to a specified binding element.</summary>
      <param name="bindingElement">A binding element that contains the settings to be applied.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies settings from a specified <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to this binding element.</summary>
      <param name="from">The <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> that contains the values to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue">
      <summary>Gets or sets a URI that contains the location of the per-application dead-letter queue, where messages that have expired or that have failed transfer or delivery are placed. </summary>
      <returns>The <see cref="T:System.Uri" /> that contains the location of the per-application dead-letter queue. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue">
      <summary>Gets or sets an enumeration value that indicates the type of dead-letter queue to use.</summary>
      <returns>A <see cref="T:System.ServiceModel.DeadLetterQueue" /> enumeration value that indicates the type of dead-letter queue to use.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.Durable">
      <summary>Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile.</summary>
      <returns>true if the messages processed by this binding are durable; false if they are volatile. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce">
      <summary>Gets or sets a Boolean value that indicates whether messages processed by this binding will be received exactly once.</summary>
      <returns>true if messages processed by this binding will be received exactly once; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding element with the content from the specified binding element.</summary>
      <param name="bindingElement">A binding element that contains the settings to be used to initialize this binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles">
      <summary>Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</summary>
      <returns>An integer that indicates the maximum number of retry cycles to attempt delivery of messages to the application. The default value is 2.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity">
      <summary>Gets a <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> instance that encapsulates the transport security settings for a binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> instance that encapsulates the transport security settings for a binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this binding configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling">
      <summary>Gets or sets an enumeration value that specifies how poison and nondispatchable messages are handled.</summary>
      <returns>A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and nondispatchable messages are handled.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount">
      <summary>Gets or sets the maximum number of times the queue manager should attempt to send a message before transferring it to the retry queue.</summary>
      <returns>A 32-bit signed integer that specifies the maximum number of times the queue manager should attempt to send a message before transferring it to the retry queue.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay">
      <summary>Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that could not be delivered immediately.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application. The default value is "00:10:00".</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.TimeToLive">
      <summary>Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that indicates how long the messages can be in the queue before they expire. The default value is one day (01:00:00:00).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing">
      <summary>Gets or sets a Boolean value that indicates whether messages processed by this binding should be traced.</summary>
      <returns>true if messages processed by this binding should be traced; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal">
      <summary>Gets or sets a Boolean value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</summary>
      <returns>true if copies of messages processed by this binding should be stored in the source journal queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqIntegrationBindingCollectionElement">
      <summary>Represents a collection of MsmqIntegrationBindingElements.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingCollectionElement.#ctor">
      <summary>Creates a new instance of <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingCollectionElement" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement">
      <summary>This binding element can be used to enable Windows Communication Foundation (WCF) applications to send messages to and receive messages from existing MSMQ applications that use either COM, MSMQ native APIs, or the APIs in <see cref="N:System.Messaging" />. Use this class to send and receive messages from MSMQ-based messaging applications. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> class by using the specified binding name.</summary>
      <param name="name">The binding name to use.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.BindingElementType">
      <summary>Gets the type of the binding element.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the type of binding element associated with this configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes the properties of the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> object by using the properties of the specified <see cref="T:System.ServiceModel.Channels.Binding" /> object.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> object to use to initialize the properties of the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> object.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Called when the content of this binding is applied to a specified binding.</summary>
      <param name="binding">The binding to which the settings are applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.Properties">
      <summary>Gets a configuration property collection associated with this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a set of properties associated with this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.Security">
      <summary>Gets the type of security to be used with the binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement" /> that specifies the type of security to be used with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationBindingElement.SerializationFormat">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing MSMQ messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing MSMQ messages.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqIntegrationElement">
      <summary>Represents the configuration element that specifies settings required for interaction with a Message Queuing (MSMQ) sender or receiver.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of this configuration element to the specified <see cref="T:System.ServiceModel.Channels.BindingElement" />.</summary>
      <param name="bindingElement">The binding element to which the settings will be applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationElement.BindingElementType">
      <summary>Gets the binding type associated with this configuration element.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the type of binding element associated with this configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the settings from the specified <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to this configuration element.</summary>
      <param name="from">The <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> whose settings are to be copied to this configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationElement.SerializationFormat">
      <summary>Gets or set the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing Message Queuing (MSMQ) messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing MSMQ messages.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement">
      <summary>Encapsulates the transport security settings for the Message Queuing (MSMQ) integration channel.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement.Mode">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" /> that is associated with the Message Queuing integration channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" /> that is associated with the Message Queuing integration channel.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqIntegrationSecurityElement.Transport">
      <summary>Gets the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with the Message Queuing (MSMQ) integration channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with the Message Queuing integration channel.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqTransportElement">
      <summary>Represents the binding element used to specify the queuing communication properties for a Windows Communication Foundation (WCF) service that uses the native MSMQ protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqTransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of this configuration element to the specified <see cref="T:System.ServiceModel.Channels.BindingElement" /> binding element.</summary>
      <param name="bindingElement">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to which settings are applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportElement.BindingElementType">
      <summary>Gets the binding type.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the binding type.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the settings from the specified <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to this configuration element.</summary>
      <param name="from">The element to copy settings from.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportElement.MaxPoolSize">
      <summary>Gets or sets an integer that specifies the maximum size of the pool that contains internal MSMQ message objects.</summary>
      <returns>An integer that specifies the maximum size of the pool that contains internal MSMQ message objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportElement.QueueTransferProtocol">
      <summary>Gets or sets an enumeration value that indicates the queued communication channel transport that this binding uses.</summary>
      <returns>A <see cref="T:System.ServiceModel.QueueTransferProtocol" /> enumeration value that indicates the transport used for message delivery between queue managers. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportElement.UseActiveDirectory">
      <summary>Returns a Boolean value that indicates whether queue addresses should be converted using Active Directory.</summary>
      <returns>true if queue addresses should be converted using Active Directory; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement">
      <summary>The <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> class encapsulates the transport security settings for queued transports.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MsmqTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportSecurityElement.MsmqAuthenticationMode">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqAuthenticationMode" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqAuthenticationMode" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportSecurityElement.MsmqEncryptionAlgorithm">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportSecurityElement.MsmqProtectionLevel">
      <summary>Gets or sets the <see cref="T:System.Net.Security.ProtectionLevel" /> that is associated with this instance of the <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> class.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MsmqTransportSecurityElement.MsmqSecureHashAlgorithm">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> class.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.MtomMessageEncodingElement">
      <summary>Represents the configuration section that specifies the encoding and message versioning used for SOAP Message Transmission Optimization Mechanism (MTOM) based messages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MtomMessageEncodingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MtomMessageEncodingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.MtomMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this configuration section.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> of this configuration element. </summary>
      <returns>The <see cref="T:System.Type" /> of this configuration element. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.MtomMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration section to this binding element. </summary>
      <param name="from">The configuration section to be copied over.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use.</summary>
      <returns>The maximum number of types that are used to buffer messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.MaxReadPoolSize">
      <summary>Gets or sets a value that specifies the maximum number of messages that can be read simultaneously without allocating new readers.</summary>
      <returns>The maximum number of messages that can be read simultaneously without allocating new readers. The default is 64.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.MaxWritePoolSize">
      <summary>Gets or sets a value that specifies the maximum number of messages that can be sent simultaneously without allocating new writers.</summary>
      <returns>The maximum number of messages that can be sent simultaneously without allocating new writers. The default is 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.MessageVersion">
      <summary>Gets or sets the SOAP version of the messages sent using this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> value that specifies the SOAP version of the messages sent using this binding. The default is <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.MtomMessageEncodingElement.WriteEncoding">
      <summary>Gets or sets the character set encoding to be used for emitting messages on the binding.</summary>
      <returns>An <see cref="T:System.Text.Encoding" /> value that specifies the character set encoding to be used for emitting messages on the binding. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement">
      <summary>Represents a configuration element that specifies additional connection pool settings for a Named Pipe transport. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.GroupName">
      <summary>Gets or sets a string that defines the name of the connection pool used for outgoing channels</summary>
      <returns>A string that defines the name of the connection pool used for outgoing channels</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.IdleTimeout">
      <summary>Gets or sets the maximum time the connection can be idle before being disconnected.</summary>
      <returns>A positive <see cref="T:System.TimeSpan" /> that specifies the maximum time the connection can be idle before being disconnected. The default is 00:02:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint">
      <summary>Gets or sets the maximum number of connections to a remote endpoint initiated by the service.</summary>
      <returns>A positive integer that specifies the maximum number of connections to a remote endpoint initiated by the service. The default is 10.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NamedPipeTransportElement">
      <summary>Represents a configuration element that specifies a channel to transfer messages using named pipes when it is included in a custom binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeTransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NamedPipeTransportElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of the specified configuration element to this configuration element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeTransportElement.BindingElementType">
      <summary>Gets the type for this binding element.</summary>
      <returns>The <see cref="T:System.Type" /> for this binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeTransportElement.ConnectionPoolSettings">
      <summary>Gets or sets additional connection pool settings.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement" /> that specifies additional connection pool settings for this binding.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement">
      <summary>Specifies the transport security for a named pipe. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement.ProtectionLevel">
      <summary>Specifies the protection for this named pipe.</summary>
      <returns>A <see cref="T:System.Net.Security.ProtectionLevel" />. The default is <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NamedServiceModelExtensionCollectionElement`1">
      <summary>Contains a collection of <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> instances.</summary>
      <typeparam name="TServiceModelExtensionElement">A ServiceModel extension element.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedServiceModelExtensionCollectionElement`1.Name">
      <summary>Gets or sets the name of this collection.</summary>
      <returns>The name of this collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NamedServiceModelExtensionCollectionElement`1.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetMsmqBindingCollectionElement">
      <summary>Represents a configuration section that holds a collection of <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingCollectionElement" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetMsmqBindingElement">
      <summary>Represents a queued binding that is suitable for cross-machine communication.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" /> class from the settings of a specified configuration binding element.</summary>
      <param name="name">The value of the name attribute that identifies the binding element whose settings are used to initialize the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> of this binding.</summary>
      <returns>The <see cref="T:System.Type" /> of this binding.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration section with the content of the specified binding element.</summary>
      <param name="binding">The binding element to be used to initialize this binding configuration section.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory that is allocated for use by the message buffer manager that receives messages from the channel.</summary>
      <returns>The maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524288 (0x80000) bytes.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the specified binding to the configuration element.</summary>
      <param name="binding">A <see cref="T:System.ServiceModel.Channels.Binding" /> to be applied to the configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.Properties">
      <summary>Gets the <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that is associated with this binding.</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that is associated with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.QueueTransferProtocol">
      <summary>Gets or sets an enumeration value that indicates the queued communication channel transport that this binding uses.</summary>
      <returns>A <see cref="T:System.ServiceModel.QueueTransferProtocol" /> enumeration value that indicates the transport between queue managers that this binding uses.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.ReaderQuotas">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> object that is associated with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> object that is associated with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.Security">
      <summary>Gets the <see cref="T:System.ServiceModel.NetMsmqSecurity" /> that is associated with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetMsmqSecurity" /> that is associated with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqBindingElement.UseActiveDirectory">
      <summary>Returns a Boolean value that indicates whether queue addresses should be converted using Active Directory.</summary>
      <returns>true if queue addresses should be converted using Active Directory; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetMsmqSecurityElement">
      <summary>The <see cref="T:System.ServiceModel.Configuration.NetMsmqSecurityElement" /> class encapsulates the MSMQ security features available when using the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetMsmqSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetMsmqSecurityElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqSecurityElement.Message">
      <summary>Gets the <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> instance that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> instance that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqSecurityElement.Mode">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> instance that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> instance that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetMsmqSecurityElement.Transport">
      <summary>Gets the <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> element that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> instance that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetNamedPipeBindingCollectionElement">
      <summary>Represents a configuration section that contains a collection of <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingCollectionElement" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement">
      <summary>Represents a configuration element that defines a binding that is secure, reliable and optimized for on-machine cross process communication.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> class with the specified name.</summary>
      <param name="name">The configuration name of the binding. This value should be unique because it is used as identification for the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.BindingElementType">
      <summary>Gets the type of this configuration element.</summary>
      <returns>The <see cref="T:System.Type" /> of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</summary>
      <returns>A <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that specifies whether the hostname is included when routing incoming requests to an endpoint URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration with the content of the specified binding configuration settings.</summary>
      <param name="binding">Binding configuration settings.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size of the buffer pool.</summary>
      <returns>The maximum size of the buffer pool. The default is 524,288 bytes (512 * 1024).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxBufferSize">
      <summary>Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxConnections">
      <summary>Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.</summary>
      <returns>The maximum number of outbound and inbound connections the service creates and accepts respectively. The default is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxReceivedMessageSize">
      <summary>Gets and sets the maximum allowable message size that can be received on a channel configured with this binding.</summary>
      <returns>The maximum allowable message size that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the specified binding to this <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> instance.</summary>
      <param name="binding">The binding to be applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.Security">
      <summary>Gets the type of security settings to be used with this binding. </summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.NetNamedPipeSecurityElement" /> that specifies the type of security settings to be used with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.TransactionFlow">
      <summary>Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.</summary>
      <returns>true if the binding supports flowing WS-Transactions; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.TransactionProtocol">
      <summary>Gets or sets the transaction protocol to be used with this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionProtocol" /> that specifies the transaction protocol to be used with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.TransferMode">
      <summary>Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.TransferMode" /> value that specifies whether messages are buffered or streamed or a request or response.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetNamedPipeSecurityElement">
      <summary>Represents a configuration element that specifies security settings for a named pipe binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetNamedPipeSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetNamedPipeSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeSecurityElement.Mode">
      <summary>Specifies the type of security that is applied to this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> that specifies the type of security applied to this binding. The default value is <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetNamedPipeSecurityElement.Transport">
      <summary>Defines the security settings for the transport. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.NamedPipeTransportSecurityElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetPeerTcpBindingCollectionElement">
      <summary>Represents a configuration element that contains elements specific to peer channel TCP message bindings.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetPeerTcpBindingElement">
      <summary>Represents an XML element that specifies a binding for peer channel specific TCP messaging.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetPeerTcpBindingElement" /> class. </summary>
      <param name="name">
        <see cref="T:System.String" /> that specifies the name to associate with this binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> of the binding element.</summary>
      <returns>The <see cref="T:System.Type" /> of the binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes the configuration element settings with the information from the supplied network binding.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> that contains a specific to networking binding from which this configuration element should obtain the new settings.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.ListenIPAddress">
      <summary>Gets or sets the IP address on which the peer node will listen for TCP messages.</summary>
      <returns>
        <see cref="T:System.String" /> that specifies the IP address (IPv4 or IPv6) on which the peer channel binding will listen for TCP messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size for a buffer pool that stores TCP messages processed by the binding.</summary>
      <returns>An <see cref="T:System.Int64" /> value that specifies the maximum size (in bytes) for a buffer pool that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.MaxReceivedMessageSize">
      <summary>Gets and sets the maximum size for messages received by peer TCP bindings configured with this element.</summary>
      <returns>
        <see cref="T:System.Int32" /> that specifies the maximum size for messages received by peer TCP bindings configured with this element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetPeerTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Initializes the configuration element settings with the information from the supplied network binding when a configuration event is raised.</summary>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> that contains a specific to networking binding from which this configuration element should obtain the new settings when a configuration application event is raised.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.Port">
      <summary>Gets or sets the network interface port on which this binding will process peer channel TCP messages.</summary>
      <returns>
        <see cref="T:System.Int32" /> that specifies the network port on which this binding will process peer channel TCP messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.Properties">
      <summary>Gets a collection of configuration properties for this binding element.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains a collection of configuration properties for this binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.ReaderQuotas">
      <summary>Gets the configuration element for reader quotas for bindings configured with this element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the configuration element for reader quotas for bindings configured with this element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.Resolver">
      <summary>Gets the configuration element for a peer resolver associated with this binding configuration.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.PeerResolverElement" /> that specifies the configuration for a peer resolver.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetPeerTcpBindingElement.Security">
      <summary>Gets the security configuration element for this binding configuration.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.PeerSecurityElement" /> that contains the security configuration element for this binding configuration.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetTcpBindingCollectionElement">
      <summary>Represents a configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetTcpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetTcpBindingElement">
      <summary>Represents an XML element that specifies a binding for peer channel-specific TCP messaging.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetTcpBindingElement" /> class with the specified configuration name. </summary>
      <param name="name">The configuration name of the binding. This value should be unique because it is used as identification for the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.BindingElementType">
      <summary>Gets the type of this configuration element.</summary>
      <returns>The <see cref="T:System.Type" /> of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that specifies whether the hostname is used to reach the service when matching the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration with the content of the specified binding.</summary>
      <param name="binding">A binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.ListenBacklog">
      <summary>Gets or sets a value that specifies the maximum number of channels that can wait to be accepted on the listener.</summary>
      <returns>The maximum number of channels that can wait to be accepted on the listener. The default is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size for a buffer pool that stores TCP messages processed by the binding.</summary>
      <returns>The maximum size (in bytes) used to buffer incoming messages in memory. The default value is 65,536 bytes. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxBufferSize">
      <summary>Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
      <returns>The maximum size, in bytes, of the buffer used to store messages in memory. The default is 65536.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxConnections">
      <summary>Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.</summary>
      <returns>The maximum number of outbound and inbound connections the service creates and accepts respectively. The default is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size of a message that can be received on a channel configured with this binding.</summary>
      <returns>The maximum size, in bytes, of a message that is processed by this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the specified binding to this <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> instance.</summary>
      <param name="binding">The binding to be applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.PortSharingEnabled">
      <summary>Gets or sets a boolean value that specifies whether TCP port sharing is enabled for this connection.</summary>
      <returns>true if TCP port sharing is enabled for this connection; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.ReaderQuotas">
      <summary>Gets the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.ReliableSession">
      <summary>Gets a configuration element that specifies whether reliable sessions are established between channel endpoints.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" /> that specifies whether reliable sessions are enabled.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.Security">
      <summary>Gets the type of security to be used with this binding. </summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.NetTcpSecurityElement" /> that is used with this binding. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.TransactionFlow">
      <summary>Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.</summary>
      <returns>true if the binding supports flowing WS-Transactions; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.TransactionProtocol">
      <summary>Gets or sets the transaction protocol to be used with this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionProtocol" /> that specifies the transaction protocol to be used with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpBindingElement.TransferMode">
      <summary>Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.TransferMode" /> value that specifies whether messages are buffered or streamed or a request or response.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NetTcpSecurityElement">
      <summary>Defines the security settings for the netTcpBinding binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NetTcpSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetTcpSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpSecurityElement.Message">
      <summary>Gets the security settings for the message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverTcpElement" /> that specifies the security settings for the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpSecurityElement.Mode">
      <summary>Gets or sets the type of security that is applied.</summary>
      <returns>A <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is applied. The default value is Transport.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.NetTcpSecurityElement.Transport">
      <summary>Gets the security settings for the transport.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.TcpTransportSecurityElement" /> that specifies the security settings for the transport.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.NonDualMessageSecurityOverHttpElement">
      <summary>Represents the configuration settings for the security of a message sent using HTTP for non-duplex service contracts. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.NonDualMessageSecurityOverHttpElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NonDualMessageSecurityOverHttpElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.NonDualMessageSecurityOverHttpElement.EstablishSecurityContext">
      <summary>Gets or sets a boolean value that specifies whether security context is established.</summary>
      <returns>true if security context is established; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.OneWayElement">
      <summary>Represents a configuration element that enables packet routing. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.OneWayElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.OneWayElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.OneWayElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this configuration element.</summary>
      <param name="bindingElement">The binding configuration element to apply.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.OneWayElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.OneWayElement.ChannelPoolSettings">
      <summary>Gets the channel pool settings.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ChannelPoolSettingsElement" /> object that contains properties of the channel pool for the current channel.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.OneWayElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.OneWayElement.MaxAcceptedChannels">
      <summary>Gets or sets the maximum number of channels that can be accepted.</summary>
      <returns>The maximum number of channels that can be accepted.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.OneWayElement.PacketRoutable">
      <summary>Gets or sets a value indicating whether packet routing is enabled.</summary>
      <returns>true if packet routing is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerCredentialElement">
      <summary>Represents a configuration element that configures a peer credential.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerCredentialElement.#ctor">
      <summary>Initializes a new default element of the <see cref="T:System.ServiceModel.Configuration.PeerCredentialElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCredentialElement.Certificate">
      <summary>Gets the element for an X509 certificate from the peer credential configuration element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateElement" /> that contains the configuration element for the X509 certificate associated with the current peer credential configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerCredentialElement.Copy(System.ServiceModel.Configuration.PeerCredentialElement)">
      <summary>Copies the configuration settings from the supplied peer credential configuration element.</summary>
      <param name="from">
        <see cref="T:System.ServiceModel.Configuration.PeerCredentialElement" /> from which to copy the configuration settings.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCredentialElement.MessageSenderAuthentication">
      <summary>Gets the element that describes message sender authentication properties for the associated X509 peer certificate from the peer credential configuration.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement" /> that describes message sender authentication properties for the associated X509 peer certificate.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCredentialElement.PeerAuthentication">
      <summary>Gets the element that describes authentication properties for the associated X509 peer certificate from the peer credential configuration.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement" /> that describes authentication properties for the associated X509 peer certificate.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerCustomResolverElement">
      <summary>Represents a configuration element for a custom peer resolver.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerCustomResolverElement.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.Configuration.PeerCustomResolverElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.Address">
      <summary>Contains the URI of the schema used for the custom peer resolver configuration XML.</summary>
      <returns>The URI the schema used for the custom peer resolver configuration XML.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.Binding">
      <summary>Gets and sets the name of the string binding used for the custom peer resolver.</summary>
      <returns>The name of the string binding used for the custom peer resolver. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.BindingConfiguration">
      <summary>Gets and sets the binding configuration string for the custom peer resolver.</summary>
      <returns>The binding configuration string for the custom peer resolver.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.Headers">
      <summary>Gets a configuration element that defines the collection that contains the headers used for SOAP messages handled by the custom peer resolver.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.AddressHeaderCollectionElement" /> that defines the collection that contains the headers used for SOAP messages handled by the custom peer resolver.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.Identity">
      <summary>Gets the identity for custom peer resolvers configured with this element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.IdentityElement" /> that contains the identity for custom peer resolvers configured with this element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerCustomResolverElement.ResolverType">
      <summary>Gets and sets a string value that contains the "type" of the custom peer resolver.</summary>
      <returns>A string value that contains the "type" of the custom peer resolver.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerResolverElement">
      <summary>Defines the configuration element for a peer resolver.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerResolverElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.PeerResolverElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerResolverElement.Custom">
      <summary>Gets the configuration element for this peer resolver if it is a custom peer resolver implementation.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.PeerCustomResolverElement" /> that contains the configuration element for the peer resolver if it is a custom peer resolver implementation.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerResolverElement.Mode">
      <summary>Gets and sets the type of the peer resolver represented by this configuration element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.PeerResolverMode" /> enumeration value that specifies the type of peer resolvder represented by this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerResolverElement.ReferralPolicy">
      <summary>Gets and sets the referral policy for peer resolvers configured with this element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the referral policy for peer resolvers configured with this element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerSecurityElement">
      <summary>Defines the configuration element for a peer's security settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerSecurityElement.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.Configuration.PeerSecurityElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerSecurityElement.Mode">
      <summary>Gets and sets the type of security used by peers configured with this element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.SecurityMode" /> enumeration value that specifies the type of security used by peers configured with this element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerSecurityElement.Transport">
      <summary>Gets the transport type for secured messages sent by peers configured with this element.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Configuration.PeerTransportSecurityElement" /> that specifies the transport type for secured messages sent by peers configured with this element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PeerTransportElement"></member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.#ctor"></member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <param name="bindingElement">TBD</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.BindingElementType"></member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <param name="from">TBD</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.CreateBindingElement"></member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <param name="bindingElement">TBD</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.ListenIPAddress"></member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.MaxBufferPoolSize"></member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.MaxReceivedMessageSize"></member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.Port"></member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.Properties"></member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportElement.Security"></member>
    <member name="T:System.ServiceModel.Configuration.PeerTransportSecurityElement">
      <summary>Defines a configuration element for the secure transport of messages sent by peers.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PeerTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.PeerTransportSecurityElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.PeerTransportSecurityElement.CredentialType">
      <summary>Gets and sets the configuration for the type of credentials used to verify messages sent with the peer transport.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerTransportCredentialType" /> enumeration value that contains the type of credentials used to verify messages sent with the peer transport.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PnrpPeerResolverElement"></member>
    <member name="M:System.ServiceModel.Configuration.PnrpPeerResolverElement.#ctor"></member>
    <member name="P:System.ServiceModel.Configuration.PnrpPeerResolverElement.BindingElementType"></member>
    <member name="M:System.ServiceModel.Configuration.PnrpPeerResolverElement.CreateBindingElement"></member>
    <member name="T:System.ServiceModel.Configuration.PolicyImporterElement">
      <summary>Represents the configuration element that specifies the import of custom policy assertions about bindings. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PolicyImporterElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.PolicyImporterElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PolicyImporterElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.PolicyImporterElement" /> class with a specific policy type.</summary>
      <param name="type">The type of policy.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.PolicyImporterElement.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.PolicyImporterElement" /> class with a specific policy type.</summary>
      <param name="type">The type of policy.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PolicyImporterElement.Type">
      <summary>Gets or sets the type of this configuration element.</summary>
      <returns>The type of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.PolicyImporterElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.PolicyImporterElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PolicyImporterElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.PolicyImporterElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.PrivacyNoticeElement">
      <summary>Represents a configuration element that specifies a privacy notice used in wsFederationHttp binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.PrivacyNoticeElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PrivacyNoticeElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> object that represents this custom binding element. </summary>
      <returns>A <see cref="T:System.Type" /> object that represents this custom binding type.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.CreateBindingElement">
      <summary>Creates a new a custom binding element object based on the setting of this configuration element.</summary>
      <returns>A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object whose properties are based on the setting of this configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.PrivacyNoticeElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.PrivacyNoticeElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PrivacyNoticeElement.Url">
      <summary>Gets or sets the URI at which the privacy notice is located.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the privacy notice is located.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.PrivacyNoticeElement.Version">
      <summary>Gets or sets the version of this privacy notice.</summary>
      <returns>An integer that specifies the version of this privacy notice.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ReliableSessionElement">
      <summary>Represents configuration setting for WS-Reliable Messaging. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ReliableSessionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval">
      <summary>Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration section.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>The type of this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration section to this configuration section.</summary>
      <param name="from">The configuration section to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled">
      <summary>Gets or sets a value that indicates whether advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated. </summary>
      <returns>true if advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel. The default is 00:10:00. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels">
      <summary>Gets or sets the maximum number of channels that can wait to be accepted on the listener.</summary>
      <returns>The maximum number of channels that can wait to be accepted on the listener. The default is 128.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount">
      <summary>Gets or sets the maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel.</summary>
      <returns>The maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel. The minimum value is 1; the maximum 20; and the default value is 8.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize">
      <summary>Gets or sets the maximum size of the buffer.</summary>
      <returns>The maximum size of the buffer. Valid values are from 1 to 4096 inclusive.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.Ordered">
      <summary>Gets or sets a value that specifies whether messages are guaranteed to arrive in the order they were sent.</summary>
      <returns>true if messages are guaranteed to arrive in the order they were sent; false if messages can arrive out of order. The default is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.RsaElement">
      <summary>Represents a configuration element for a RSA identity. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.RsaElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.RsaElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.RsaElement.Value">
      <summary>Gets or sets the value encrypted by this identity.</summary>
      <returns>The value encrypted by this identity.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SecureConversationServiceElement">
      <summary>Represents a configuration element that specifies the settings for a secure conversation service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecureConversationServiceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.SecureConversationServiceElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecureConversationServiceElement.Copy(System.ServiceModel.Configuration.SecureConversationServiceElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null or empty.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecureConversationServiceElement.SecurityStateEncoderType">
      <summary>Gets or sets the type of <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> to be used.</summary>
      <returns>The type of <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> to be used.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SecurityElement">
      <summary>Represents a configuration element that specifies the security options for a custom binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.SecurityElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this <see cref="T:System.ServiceModel.Configuration.SecurityElement" /> instance.</summary>
      <param name="from">A configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElement.SecureConversationBootstrap">
      <summary>Gets a configuration element that specifies the default values used for initiating a secure conversation service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.SecurityElementBase" /> object that specifies the default values used for initiating a secure conversation service.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SecurityElementBase">
      <summary>Represents a base class with members common to an element that is used to configure security settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.AddBindingTemplate(System.Collections.Generic.Dictionary{System.ServiceModel.Configuration.AuthenticationMode,System.ServiceModel.Channels.SecurityBindingElement},System.ServiceModel.Configuration.AuthenticationMode)">
      <summary>Applies the specified configuration template to this instance.</summary>
      <param name="bindingTemplates">A pair that consists of an authentication mode and a binding element.</param>
      <param name="mode">The authentication mode used for message exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.AddBindingTemplates(System.Collections.Generic.Dictionary{System.ServiceModel.Configuration.AuthenticationMode,System.ServiceModel.Channels.SecurityBindingElement})">
      <summary>Applies the specified configuration templates to this instance.</summary>
      <param name="bindingTemplates">A pair that consists of an authentication mode and a binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.AllowSerializedSigningTokenOnReply">
      <summary>Gets or sets a boolean value that specifies whether a serialized token can be used on reply.</summary>
      <returns>true if a serialized token can be used on reply; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.AuthenticationMode">
      <summary>Gets or sets the authentication setting used for message exchange.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.AuthenticationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>The type of this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.CreateBindingElement">
      <summary>Creates a custom binding element object from the setting of this instance.</summary>
      <returns>A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.CreateBindingElement(System.Boolean)">
      <summary>Creates a custom binding element object from the setting of this instance.</summary>
      <returns>A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object.</returns>
      <param name="createTemplateOnly">A Boolean value that indicates whether only a template should be created.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.DefaultAlgorithmSuite">
      <summary>Gets or sets the default algorithm suite for this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> that specifies the default algorithm suite for this binding. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.IncludeTimestamp">
      <summary>Gets or sets a Boolean value that specifies whether each message contains a timestamp.</summary>
      <returns>true if message contains a timestamp; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.InitializeNestedTokenParameterSettings(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.Boolean)">
      <summary>Applies the specified security token settings to this instance.</summary>
      <param name="sp">A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</param>
      <param name="initializeNestedBindings">A Boolean value that specifies whether all the nested bindings are updated with the values specified by <paramref name="sp" />.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.IssuedTokenParameters">
      <summary>Gets the configuration element that specifies the current issued token.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.IssuedTokenParametersElement" /> that specifies the current issued token.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.KeyEntropyMode">
      <summary>Gets or sets the source of entropy used to create keys.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" /> value that specifies the source of entropy used to create keys. The default value is <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.LocalClientSettings">
      <summary>Gets the local client security settings for this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.LocalServiceSettings">
      <summary>Gets the local service security settings for this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.MessageProtectionOrder">
      <summary>Gets or sets the order of message encryption and signing for this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.MessageProtectionOrder" /> that specifies how message is protected. The default is <see cref="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.MessageSecurityVersion">
      <summary>Gets or sets the version used for message security.</summary>
      <returns>A <see cref="T:System.ServiceModel.MessageSecurityVersion" /> that specifies the version used for message security.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.RequireDerivedKeys">
      <summary>Gets or sets a Boolean value that specifies whether derived keys are required.</summary>
      <returns>true if derived keys are required; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.RequireSecurityContextCancellation">
      <summary>Gets or sets a Boolean value that specifies whether security context should be cancelled and terminated when it is no longer required.</summary>
      <returns>true if security context should be cancelled and terminated when it is no longer required; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.RequireSignatureConfirmation">
      <summary>Gets or sets a Boolean value that specifies whether message signatures must be confirmed.</summary>
      <returns>true if message signatures must be confirmed; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.SecurityElementBase.SecurityHeaderLayout">
      <summary>Gets or sets the order of elements in the security header for this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" /> that specifies the order of elements in the security header for this binding.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary>Writes the outer tags of this configuration element to the configuration file.</summary>
      <returns>true if the serialization is successful; otherwise, false.</returns>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> that is used to write to the configuration file.</param>
      <param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> to be written.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.SecurityElementBase.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Modifies this configuration element to remove all values that should not be saved. </summary>
      <param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement" /> object at the current level that contains a merged view of the properties.</param>
      <param name="parentElement">The parent <see cref="T:System.Configuration.ConfigurationElement" /> object, or null if this is the top level.</param>
      <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> object that determines which property values to include.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceAuthorizationElement">
      <summary>Represents a configuration element that defines security settings at the service level.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceAuthorizationElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies">
      <summary>Gets a collection of authorization policy types.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection" /> that contains a collection of authorization policy types.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType">
      <summary>Gets the type of this behavior configuration element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of a specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations">
      <summary>Gets or sets a Boolean value that specifies whether all the operations in the service impersonate the caller. </summary>
      <returns>true if all the operations in the service impersonate the caller; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode">
      <summary>Gets or sets the principal used to carry out operations on the server.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" /> value that specifies the principal used to carry out operations on the server. The default is <see cref="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName">
      <summary>Gets or sets the name of the role provider, which provides role information for a Windows Communication Foundation (WCF) application.</summary>
      <returns>The name of the role provider. The default is an empty string.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType">
      <summary>Gets or sets the type of service authorization manager used.</summary>
      <returns>A string that specifies the type of the service authorization manager.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceBehaviorElement">
      <summary>Represents a configuration element that contains a list of service behaviors that is applied to all Windows Communication Foundation (WCF) services on the machine.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElement" /> class with the specified name.</summary>
      <param name="name">A unique name of the behavior element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.Add(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Adds a new behavior element to this section.</summary>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> to be added.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The type specified by <paramref name="element" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.CanAdd(System.ServiceModel.Configuration.BehaviorExtensionElement)">
      <summary>Adds a new behavior element to this section and returns a value indicating if the operation is successful.</summary>
      <returns>true if the operation is successful; otherwise, false.</returns>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.BehaviorExtensionElement" /> to be added.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The type specified by <paramref name="element" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>Reads XML from the configuration file. </summary>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> that reads from the configuration file.</param>
      <param name="serializeCollectionKey">true to serialize only the collection key properties; otherwise, false.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceBehaviorElementCollection">
      <summary>Contains a collection of <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElement" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceBehaviorElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceBehaviorElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceCredentialsElement">
      <summary>Represents a configuration element that specifies the credential to be used to authenticate the service, as well as client credential validation-related settings. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceCredentialsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceCredentialsElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.BehaviorType">
      <summary>Gets the type of this behavior configuration element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.ClientCertificate">
      <summary>Gets the client certificate to be used when the client certificate is available out-of-band.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement" /> that specifies the client certificate to be used when the client certificate is available out-of-band.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceCredentialsElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of a specified configuration element to this configuration element.</summary>
      <param name="from">The configuration section to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.IssuedTokenAuthentication">
      <summary>Gets the current issued token for this service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.IssuedTokenServiceElement" /> that specifies the current issued token for this service.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.Peer">
      <summary>Gets the current credentials for a peer node.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.PeerCredentialElement" /> that specifies the current credentials for a peer node.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.SecureConversationAuthentication">
      <summary>Gets the current credentials for a secure conversation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.SecureConversationServiceElement" /> that specifies the current credentials for a secure conversation.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.ServiceCertificate">
      <summary>Gets an X.509 certificate initiated by a client.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement" /> that specifies an X.509 certificate initiated by a client.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.Type">
      <summary>Gets or sets the type of this configuration.</summary>
      <returns>The type of this configuration.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.UserNameAuthentication">
      <summary>Gets the settings for username and password validation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.UserNameServiceElement" /> that specifies the settings for username and password validation.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.WindowsAuthentication">
      <summary>Gets the settings for Windows credential validation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.WindowsServiceElement" /> that specifies the settings for Windows credential validation.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceDebugElement">
      <summary>Represents a configuration element that specifies debugging and help information features for a Windows Communication Foundation (WCF) service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceDebugElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceDebugElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.BehaviorType">
      <summary>Gets the type of this behavior element.</summary>
      <returns>The <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceDebugElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element. </summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageEnabled">
      <summary>Gets or sets a value that controls whether Windows Communication Foundation (WCF) publishes an HTML help page at the address specified by the <see cref="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageUrl" /> property.</summary>
      <returns>true if WCF publishes an HTML help page; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageUrl">
      <summary>Gets or sets the location at which the HTML help file is published.</summary>
      <returns>The relative or absolute HTTP-based URL of the custom HTML help file the user sees when the endpoint is viewed using an HTML browser.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageEnabled">
      <summary>Gets or sets a value that specifies whether Windows Communication Foundation (WCF) returns an HTML help file over HTTPS at the address specified by the <see cref="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageUrl" /> property.</summary>
      <returns>true if an HTML help file is returned to clients making an HTTPS/GET request, for example, from an HTML browser; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageUrl">
      <summary>Gets or sets the location at which an HTML file is published for retrieval using HTTPS.</summary>
      <returns>The relative or absolute HTTPS-based URL of the custom HTML help file the user sees when the endpoint is viewed using an HTML browser.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that specifies whether to include managed exception information in the detail of SOAP faults returned to the client for debugging purposes. </summary>
      <returns>true if Windows Communication Foundation (WCF) returns managed exception information in the SOAP faults for client-side debugging purposes; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceElement">
      <summary>Represents an XML element that contains the settings for a Windows Communication Foundation (WCF) service, as well as endpoints that expose the service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceElement" /> class with the type of the service to be instantiated.</summary>
      <param name="serviceName">The type of the service to be instantiated.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceElement.BehaviorConfiguration">
      <summary>Gets or sets a string that contains the behavior name of the behavior to be used to instantiate the service.</summary>
      <returns>The behavior name of the behavior to be used to instantiate the service. The behavior name must be in scope at the point the service is defined. The default value is an empty string.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceElement.Endpoints">
      <summary>Gets a collection of endpoints exposed by this service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElementCollection" /> that contains one or more endpoints exposed by this service. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceElement.Host">
      <summary>Gets a configuration element that specifies the host of this service instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.HostElement" /> that specifies the host of this service instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceElement.Name">
      <summary>Gets or sets the unique name of this service.</summary>
      <returns>The unique name of this service.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.ServiceElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceEndpointElement">
      <summary>Represents a configuration element that provides settings for binding, contract, and address properties for a service endpoint, which is used to expose services. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceEndpointElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceEndpointElement.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" /> class with the specified endpoint address and contract type.</summary>
      <param name="address">A URI that contains the address of the endpoint.</param>
      <param name="contractType">The contract this endpoint is exposing. </param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Address">
      <summary>Gets or sets a URI that contains the address of the endpoint.</summary>
      <returns>A URI that contains the address of the endpoint. The default is an empty string. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.BehaviorConfiguration">
      <summary>Gets or sets a string that contains the name of the behavior to be used for the endpoint.</summary>
      <returns>The name of the behavior to be used for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Binding">
      <summary>Gets or sets a string that specifies the type of binding to use. </summary>
      <returns>The type of binding to use. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.BindingConfiguration">
      <summary>Gets or sets a string that contains the binding name of the binding to use when the endpoint is instantiated.</summary>
      <returns>The binding name of the binding to use when the endpoint is instantiated. The default is an empty string.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.BindingName">
      <summary>Gets or sets a string that defines the qualified name of the binding for definition export through WSDL.</summary>
      <returns>The qualified name of the binding for definition export through WSDL. The default is an empty string.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.BindingNamespace">
      <summary>Gets or sets a string that defines the qualified name of the namespace of the binding for definition export through WSDL.</summary>
      <returns>The qualified name of the namespace of the binding for definition export through WSDL. The default is an empty string.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Contract">
      <summary>Gets or sets a string that specifies which contract this endpoint is exposing.</summary>
      <returns>The contract this endpoint is exposing. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Headers">
      <summary>Gets a collection of address headers.</summary>
      <returns>A collection of address headers.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Identity">
      <summary>Gets a configuration element that specifies the authentication of an endpoint by other endpoints exchanging messages with it.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.IdentityElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.ListenUri">
      <summary>Gets or sets the URI at which the service endpoint listens.</summary>
      <returns>A <see cref="T:System.Uri" /> at which the service endpoint listens.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.ListenUriMode">
      <summary>Gets or sets a value that specifies how the transport treats the <see cref="P:System.ServiceModel.Configuration.ServiceEndpointElement.ListenUri" /> provided for the service to listen on.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.Description.ListenUriMode" /> value.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceEndpointElement.Name">
      <summary>Gets or sets the name of this configuration element.</summary>
      <returns>The name of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceEndpointElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceEndpointElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceEndpointElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection">
      <summary>Represents a configuration section that defines the type that the service hosting environment instantiates for a particular transport.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.AspNetCompatibilityEnabled">
      <summary>Gets or sets a Boolean value that specifies whether ASP.NET compatibility mode has been enabled for the current application.</summary>
      <returns>true if ASP.NET compatibility mode has been enabled for the current application; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.MinFreeMemoryPercentageToActivateService">
      <summary>Gets or sets an integer that specifies the minimum amount of free memory that should be available to the system, before a Windows Communication Foundation (WCF) service can be activated.</summary>
      <returns>An integer that specifies the minimum amount of free memory that should be available to the system, before a WCF service can be activated.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.TransportConfigurationTypes">
      <summary>Gets a collection of types that implement the specific transport.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElementCollection" /> that contains all the types that implement the specific transport.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceMetadataPublishingElement">
      <summary>Represents the configuration element that controls the publication of service metadata and associated information. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceMetadataPublishingElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.BehaviorType">
      <summary>Gets the type of this behavior configuration element.</summary>
      <returns>A <see cref="T:System.Type" />, the value is the type of <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.ExternalMetadataLocation">
      <summary>Gets or sets a string that contains the location of service metadata.</summary>
      <returns>A URI that specifies the location of a WSDL file, which is returned to the user in response to WSDL and MEX requests instead of the auto-generated WSDL. The default is a null Uri object.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpGetEnabled">
      <summary>Gets or sets a value that specifies whether to publish service metadata for retrieval using an HTTP/Get request.</summary>
      <returns>true if the service metadata is published for retrieval using an HTTP/Get request; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpGetUrl">
      <summary>Gets or sets a URI that specifies the address at which the metadata is published for retrieval using an HTTP/Get request.</summary>
      <returns>A URI that specifies the address at which the metadata is published.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpsGetEnabled">
      <summary>Gets or sets a value that indicates whether to publish service metadata for retrieval using an HTTPS/Get request.</summary>
      <returns>true if the service metadata is published for retrieval using an HTTP/Get request; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpsGetUrl">
      <summary>Gets or sets a URI that specifies the address at which the metadata is published for retrieval using an HTTPS/Get request.</summary>
      <returns>A URI that specifies the address at which the metadata is published for retrieval using an HTTPS/Get request.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1">
      <summary>An abstract base class for a <see cref="T:System.Configuration.ConfigurationElementCollection" /> used within the <see cref="N:System.ServiceModel.Configuration" /> namespace.</summary>
      <typeparam name="ConfigurationElementType">The type of this configuration element.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)">
      <summary>Adds the specified configuration element to this collection.</summary>
      <param name="element">The configuration element to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null or empty.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Adds the specified <see cref="T:System.Configuration.ConfigurationElement" /> object to this collection.</summary>
      <param name="element">The configuration element to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null or empty.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file contains an existing element identical to <paramref name="element" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear">
      <summary>Removes all the configuration elements from this collection.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType">
      <summary>Gets the type of the configuration collection.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> that specifies the type of the configuration collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)">
      <summary>Returns a boolean value that indicates whether this collection contains a configuration element with the specified key.</summary>
      <returns>true if the collection contains a configuration element with the specified key; otherwise, false.</returns>
      <param name="key">The configuration element to search for in the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null or empty.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the configuration elements stored in this collection to an <see cref="T:System.Array" /> object, beginning at the specified index location in the <see cref="T:System.Array" />. </summary>
      <param name="array">The <see cref="T:System.Array" /> to copy the configuration elements to.</param>
      <param name="start">The zero-based relative index in <paramref name="array" /> where copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> contains an invalid value.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CreateNewElement">
      <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>A new <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ElementName">
      <summary>Gets the name used to identify this collection of elements in the configuration file.</summary>
      <returns>The name used to identify this collection of elements in the configuration file.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)">
      <summary>Returns the zero-based index of the first occurrence of a configuration element in this collection. </summary>
      <returns>The index of <paramref name="element" /> if found in the collection; -1 otherwise.</returns>
      <param name="element">The configuration element to locate in the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)">
      <summary>Gets or sets a property, attribute, or child element of a <see cref="T:System.Configuration.ConfigurationElement" /> object with the specified index.</summary>
      <returns>A ConfigurationElementType.</returns>
      <param name="index">The index of the element to be accessed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)">
      <summary>Gets or sets a property, attribute, or child element of a <see cref="T:System.Configuration.ConfigurationElement" /> object with the specified key.</summary>
      <returns>A ConfigurationElementType.</returns>
      <param name="key">The key of the element to be accessed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <paramref name="key" /> is not found.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)">
      <summary>Removes the first occurrence of a specific configuration element from the collection.</summary>
      <param name="element">The configuration element to be removed from the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.-and-The configuration file is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the configuration element at the specified index of this collection.</summary>
      <param name="index">The zero-based index of the configuration element to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is null.-and-The configuration file is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)">
      <summary>Removes the configuration element with the specified key from this collection.</summary>
      <param name="key">The configuration element with the specified key from this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.-and-The configuration file is read-only.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelEnhancedConfigurationElementCollection`1">
      <summary>An abstract base class for a <see cref="T:System.Configuration.ConfigurationElementCollection" /> looking for a merge semantic similar to an <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> that allows duplicates, but throws an exception when duplicates are found in the same configuration scope (e.g. same configuration file).</summary>
      <typeparam name="TConfigurationElement">A configuration element.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelEnhancedConfigurationElementCollection`1.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Adds a <see cref="T:System.Configuration.ConfigurationElement" /> to this collection.</summary>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelEnhancedConfigurationElementCollection`1.ThrowOnDuplicate">
      <summary>Gets a Boolean value that indicates whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to this collection causes an exception to be thrown. </summary>
      <returns>true if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to this collection causes an exception to be thrown; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1">
      <summary>An abstract base class for a collection of <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> objects.</summary>
      <typeparam name="TServiceModelExtensionElement">A ServiceModel extension element.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Add(`0)">
      <summary>Adds the specified element to this configuration section.</summary>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> already exists in the collection.-or-The element type specified by <paramref name="element" /> is not permitted.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.CanAdd(`0)">
      <summary>Adds a new behavior element to this section and returns a value that indicates whether the operation is successful.</summary>
      <returns>true if the operation is successful; otherwise, false.</returns>
      <param name="element">A <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Clear">
      <summary>Deletes all elements in this collection. This method cannot be inherited.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Contains(`0)">
      <summary>Returns a value that indicates whether this collection contains a specific element. This method cannot be inherited.</summary>
      <returns>true if the collection contains the specified element; otherwise, false.</returns>
      <param name="element">The element to look for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.ContainsKey(System.String)">
      <summary>Determines whether this collection contains an element of the specified name.</summary>
      <returns>true if the collection contains an element of the specified name; otherwise, false.</returns>
      <param name="elementName">The name of the element to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.ContainsKey(System.Type)">
      <summary>Determines whether this collection contains an element of the specified type.</summary>
      <returns>true if the collection contains an element of the specified type; otherwise, false.</returns>
      <param name="elementType">The type of the element to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array. This method cannot be inherited.</summary>
      <param name="elements">A one-dimensional array that is the destination of the elements copied from collection. The array must have zero-based  </param>
      <param name="start">The zero-based index in the <paramref name="elements" /> array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> is invalid.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Count">
      <summary>Gets the number of items in this collection.</summary>
      <returns>The number of items in this collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>Reads XML from the configuration file. </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> that reads from the configuration file.</param>
      <param name="serializeCollectionKey">true to serialize only the collection key properties; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through a collection. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.IsModified">
      <summary>Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.</summary>
      <returns>true if the element has been modified; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Item(System.Int32)">
      <summary>Gets the item at the specified index within the collection.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> that represents the item located at the specified index within the collection.</returns>
      <param name="index">The index of the item in the collection to retrieve.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Item(System.Type)">
      <summary>Gets the item of the specified type within the collection.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> that represents the item located at the specified index within the collection.</returns>
      <param name="extensionType">The type of the item in the collection to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extensionType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="extensionType" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Gets a value that indicates whether an unknown element is encountered during deserialization.</summary>
      <returns>true when an unknown element is encountered while deserializing; otherwise, false.</returns>
      <param name="elementName">The name of the unknown sub-element.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> being used for deserialization.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Remove(`0)">
      <summary>Removes the specified element from the collection. This method cannot be inherited.</summary>
      <returns>true if the element is successfully found and removed; otherwise, false. This method returns false if the element is not found in the collection.</returns>
      <param name="element">The element to be removed from the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Reset(System.Configuration.ConfigurationElement)">
      <summary>Resets this collection to its unmodified state when overridden in a derived class.</summary>
      <param name="parentElement">The parent <see cref="T:System.Configuration.ConfigurationElement" /> object of the current element, or null if this is the top level.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.ResetModified">
      <summary>Resets the value of the <see cref="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.IsModified" /> property to false when overridden in a derived class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.SetIsModified">
      <summary>Sets the <see cref="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.IsModified" /> property for this collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.SetReadOnly">
      <summary>Sets the internal IsReadOnly property for this collection and for all sub-elements.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value that indicates whether this <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through a collection. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Reverses the effect of merging configuration information from different levels of the configuration hierarchy.</summary>
      <param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement" /> object at the current level that contains a merged view of the properties.</param>
      <param name="parentElement">The parent <see cref="T:System.Configuration.ConfigurationElement" /> object of the current element, or null if this is the top level.</param>
      <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> enumerated value that determines which property values to include.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelExtensionElement">
      <summary>An abstract base class for a configuration element that contains a dynamic collection of heterogeneous child elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName">
      <summary>Gets the name of this configuration element.</summary>
      <returns>The unique name of this configuration element.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration extension collection does not exist.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified">
      <summary>Gets a value that specifies whether this configuration element has been modified.</summary>
      <returns>true if this configuration element has been modified; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Writes the contents of this configuration element to the configuration file.</summary>
      <returns>true if any data was actually serialized; otherwise, false.</returns>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> that is used to write to the configuration file.</param>
      <param name="serializeCollectionKey">true to serialize only the collection key properties; otherwise, false.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceModelSectionGroup">
      <summary>Represents the main configuration section for Windows Communication Foundation (WCF). This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceModelSectionGroup" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Behaviors">
      <summary>Gets the configuration section that contains child entries that are behavior elements.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.BehaviorsSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Bindings">
      <summary>Gets the configuration section that contains all the bindings.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.BindingsSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Client">
      <summary>Gets the configuration section that contains a list of endpoints a client uses to connect to a service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ClientSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.ComContracts">
      <summary>Gets the configuration section that defines the namespace and contract name for a service contract used in COM+ interoperability.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ComContractsSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.CommonBehaviors">
      <summary>Gets the configuration section that contains a list of behaviors that is applied to all WCF services on the machine before the behaviors in the behaviors section are applied.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.CommonBehaviorsSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Diagnostic">
      <summary>Gets the configuration section for the diagnostics features of WCF.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.DiagnosticSection" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Extensions">
      <summary>Gets a configuration section that defines all the extensions.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ExtensionsSection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
      <summary>Gets the system.ServiceModel configuration section group from the specified configuration file.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ServiceModelSectionGroup" /> that represents the system.ServiceModel settings in configuration.</returns>
      <param name="config">A <see cref="T:System.Configuration.Configuration" /> that represents a configuration file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.ServiceHostingEnvironment">
      <summary>Gets the configuration section that defines what type the service hosting environment instantiates for a particular transport.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceModelSectionGroup.Services">
      <summary>Gets the configuration section that defines a collection of services. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ServicesSection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServicePrincipalNameElement">
      <summary>Represents a configuration element that specifies the principal name used by a client to uniquely identify an instance of a service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServicePrincipalNameElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServicePrincipalNameElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServicePrincipalNameElement.Value">
      <summary>Gets or sets the service principal name encapsulated by this configuration element.</summary>
      <returns>The service principal name encapsulated by this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceSecurityAuditElement">
      <summary>Represents a configuration element that defines auditing-related configuration settings for a behavior. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceSecurityAuditElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceSecurityAuditElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.AuditLogLocation">
      <summary>Gets or sets the location of the audit log.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.AuditLogLocation" /> value that specifies the location of the audit log. The default value is <see cref="F:System.ServiceModel.AuditLogLocation.Default" /> . </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.BehaviorType">
      <summary>Gets the type of this behavior configuration element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceSecurityAuditElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the contents of the specified configuration element to this  <see cref="T:System.ServiceModel.Configuration.ServiceSecurityAuditElement" /> object.</summary>
      <param name="from">A <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> that represents the configuration element to copy.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.MessageAuthenticationAuditLevel">
      <summary>Gets or sets the type of message authentication level that is used to log audit events.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.AuditLevel" /> value that specifies the type of message authentication level that is used to log audit events. The default value is <see cref="F:System.ServiceModel.AuditLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.ServiceAuthorizationAuditLevel">
      <summary>Gets or sets the types of authorization events that are recorded in the audit log. </summary>
      <returns>A valid <see cref="T:System.ServiceModel.AuditLevel" /> value that specifies the type of authorization events that are recorded in the audit log. The default value is <see cref="F:System.ServiceModel.AuditLevel.None" />. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceSecurityAuditElement.SuppressAuditFailure">
      <summary>Gets or sets a Boolean value that specifies the behavior for suppressing failures of writing to the audit log.</summary>
      <returns>true if exceptions other than <see cref="T:System.OutOfMemoryException" />, <see cref="T:System.StackOverflowException" />, <see cref="T:System.Threading.ThreadAbortException" />, and <see cref="T:System.ArgumentException" /> that result from attempts to write audit events are handled by the system, and are not propagated to the application; false if all exceptions that result from attempts to write audit events are passed up to the application. The default is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServicesSection">
      <summary>Represents the configuration section that contains services. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServicesSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServicesSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServicesSection.Services">
      <summary>Gets all the services configured in this section.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.ServiceElementCollection" /> that contains all the services configured in this section.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceThrottlingElement">
      <summary>Represents a configuration element that specifies the throttling mechanism of Windows Communication Foundation (WCF). This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceThrottlingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceThrottlingElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceThrottlingElement.BehaviorType">
      <summary>Gets the type of this behavior configuration element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceThrottlingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceThrottlingElement.MaxConcurrentCalls">
      <summary>Gets or sets a value that specifies the number of concurrent calls to a single service instance.</summary>
      <returns>The number of concurrent calls to a single service instance. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceThrottlingElement.MaxConcurrentInstances">
      <summary>Gets or sets a value that specifies the maximum number of concurrent service instances.</summary>
      <returns>The maximum number of concurrent service instances. The default is 26.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceThrottlingElement.MaxConcurrentSessions">
      <summary>Gets or sets a value that specifies the maximum number of concurrent connections to a single service.</summary>
      <returns>The maximum number of concurrent connections to a single service. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.ServiceTimeoutsElement">
      <summary>Represents a configuration element that specifies the timeout for a service. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceTimeoutsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ServiceTimeoutsElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceTimeoutsElement.BehaviorType">
      <summary>Gets the type of this behavior element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceTimeoutsElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceTimeoutsElement.TransactionTimeout">
      <summary>Gets or sets the period within which a transaction must complete.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that represents the time within which transactions must complete or be automatically aborted.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SslStreamSecurityElement">
      <summary>Represents the configuration element that specifies the security settings for a SSL stream binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SslStreamSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.SslStreamSecurityElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SslStreamSecurityElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SslStreamSecurityElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>The type of this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.SslStreamSecurityElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.SslStreamSecurityElement.RequireClientCertificate">
      <summary>Gets or sets a Boolean value that specifies whether a client certificate is required for this binding.</summary>
      <returns>true if a client certificate is required for this binding; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingCollectionElement`2">
      <summary>Provides a base class for the configuration sections that specify predefined bindings provided by Windows Communication Foundation (WCF).</summary>
      <typeparam name="TStandardBinding">A standard binding element.</typeparam>
      <typeparam name="TBindingConfiguration">A binding configuration element.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.StandardBindingCollectionElement`2" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.Bindings">
      <summary>Gets all the standard bindings defined in this configuration section.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Configuration.StandardBindingElement" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.BindingType">
      <summary>Gets the type of this binding.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.ConfiguredBindings">
      <summary>Gets a collection of configured bindings objects.</summary>
      <returns>A collection of configured bindings objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.ContainsKey(System.String)">
      <summary>Determines whether a binding exists in the collection using the specified name.</summary>
      <returns>true if the collection contains the binding with the specified <paramref name="name" />; otherwise, false. </returns>
      <param name="name">The name of the binding to be located.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.GetDefault">
      <summary>Gets the default binding used.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents the default binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingCollectionElement`2.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
      <summary>Adds the specified binding to the collection.</summary>
      <returns>true if the binding can be added to this collection; otherwise, false. </returns>
      <param name="name">The name of the binding to be added.</param>
      <param name="binding">A <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents the binding to be added.</param>
      <param name="config">The configuration settings of this binding.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingElement">
      <summary>Provides a base class for the configuration elements that specify predefined bindings provided by Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.StandardBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.StandardBindingElement" /> class with the specified name. </summary>
      <param name="name">A name that uniquely identifies this configuration element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the content of the specified binding to this binding configuration element.</summary>
      <param name="binding">A binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The type of this binding element is different from the type specified by <paramref name="binding" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.BindingElementType">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Type" /> object that represents the custom binding element. </summary>
      <returns>A <see cref="T:System.Type" /> object that represents the custom binding type.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout">
      <summary>Gets or sets the interval of time provided for a close operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration element with the content of the specified binding.</summary>
      <param name="binding">A binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The type of this binding element is different from the type specified by <paramref name="binding" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.Name">
      <summary>Gets or sets the name of the binding. </summary>
      <returns>The name of the binding.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Called when the content of a specified binding element is applied to this binding configuration element.</summary>
      <param name="binding">A binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout">
      <summary>Gets or sets the interval of time provided for an open operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout">
      <summary>Gets or sets the interval of time provided for a receive operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingElement.SendTimeout">
      <summary>Gets or sets the interval of time provided for a send operation to complete.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingElementCollection`1">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.StandardBindingElement" /> objects. This class cannot be inherited.</summary>
      <typeparam name="TBindingConfiguration">A binding configuration element.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElementCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.StandardBindingElementCollection`1" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement">
      <summary>Represents the optional configuration setting for WS-Reliable Messaging defined in a standard binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement.ApplyConfiguration(System.ServiceModel.OptionalReliableSession)">
      <summary>Applies the content of a specified binding element to this configuration section.</summary>
      <param name="optionalReliableSession">The configuration element to apply.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionalReliableSession" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement.Enabled">
      <summary>Gets or sets a Boolean value that specifies whether reliable session is enabled for this binding.</summary>
      <returns>true if reliable session is enabled for this binding; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement.InitializeFrom(System.ServiceModel.OptionalReliableSession)">
      <summary>Initializes the settings of this configuration element from the content of a specified configuration element.</summary>
      <param name="optionalReliableSession">The configuration element whose settings are to be copied. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionalReliableSession" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.StandardBindingReliableSessionElement">
      <summary>Represents the configuration setting for WS-Reliable Messaging defined in a standard binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.StandardBindingReliableSessionElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.ApplyConfiguration(System.ServiceModel.ReliableSession)">
      <summary>Applies the content of a specified binding element to this configuration section.</summary>
      <param name="reliableSession">The configuration element to apply.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reliableSession" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.InactivityTimeout">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel. The default is 00:10:00. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.InitializeFrom(System.ServiceModel.ReliableSession)">
      <summary>Initializes this configuration element with values from the specified section.</summary>
      <param name="reliableSession">The configuration element to be initialized from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reliableSession" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.Ordered">
      <summary>Gets or sets a Boolean value that specifies whether messages are guaranteed to arrive in the order they were sent.</summary>
      <returns>true if messages are guaranteed to arrive in the order they were sent; false if messages can arrive out of order. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.StandardBindingReliableSessionElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.SynchronousReceiveElement">
      <summary>Represents a configuration element that is used to specify run-time behavior for receiving messages in either a service or client application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.SynchronousReceiveElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.SynchronousReceiveElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.SynchronousReceiveElement.BehaviorType">
      <summary>Gets the type of this behavior configuration element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement">
      <summary>Represents a configuration element that specifies additional connection pool settings for a TCP transport. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.GroupName">
      <summary>Gets or sets a string that defines the name of the connection pool used for outgoing channels.</summary>
      <returns>The name of the connection pool used for outgoing channels.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.IdleTimeout">
      <summary>Gets or sets the maximum time the connection can be idle before being disconnected.</summary>
      <returns>A positive <see cref="T:System.TimeSpan" /> that specifies the maximum time the connection can be idle before being disconnected. The default is 00:02:00.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.LeaseTimeout">
      <summary>Gets or sets the time span after which an active connection is closed.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> structure that indicates the duration after which the TCP connection is closed.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint">
      <summary>Gets or sets the maximum number of connections to a remote endpoint initiated by the service.</summary>
      <returns>The maximum number of connections to a remote endpoint initiated by the service. The default is 10.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TcpTransportElement">
      <summary>Specifies a configuration element that causes a channel to transfer messages on the TCP transport when it is included in a custom binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpTransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TcpTransportElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of the specified <see cref="T:System.ServiceModel.Channels.BindingElement" /> to this configuration element.</summary>
      <param name="bindingElement">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> whose settings are to be applied to this configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> object that represents the custom binding element. </summary>
      <returns>A <see cref="T:System.Type" /> object that represents the custom binding element. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.ConnectionPoolSettings">
      <summary>Gets a configuration element that specifies additional connection settings.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.TcpConnectionPoolSettingsElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the settings from the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element whose settings are to be copied to this configuration element section.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.ListenBacklog">
      <summary>Gets or sets the maximum number of channels that can wait on the listener to be accepted.</summary>
      <returns>The maximum number of channels that can wait on the listener to be accepted. The default is 10. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.PortSharingEnabled">
      <summary>Gets or sets a value that specifies whether TCP port sharing is enabled for this connection.</summary>
      <returns>true if TCP port sharing is enabled; false if each binding uses its own exclusive port. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportElement.TeredoEnabled">
      <summary>Gets or sets a value that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.</summary>
      <returns>true if Teredo is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TcpTransportSecurityElement">
      <summary>An XML element that defines the security settings for a TcpTransport binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TcpTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TcpTransportSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportSecurityElement.ClientCredentialType">
      <summary>Gets and sets the type of client credential used for authentication.</summary>
      <returns>A <see cref="T:System.ServiceModel.TcpClientCredentialType" /> that specifies the type of client credential used for authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TcpTransportSecurityElement.ProtectionLevel">
      <summary>Gets or sets a value that defines message level security at the level of the named pipe.</summary>
      <returns>A <see cref="P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel" /> value that defines message level security at the level of the named pipe.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TextMessageEncodingElement">
      <summary>Represents a configuration element that specifies the character encoding and message versioning used for text-based XML messages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TextMessageEncodingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TextMessageEncodingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TextMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration section.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> of this configuration element. </summary>
      <returns>The <see cref="T:System.Type" /> of this configuration element. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TextMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration section to this element.</summary>
      <param name="from">The configuration section to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.MaxReadPoolSize">
      <summary>Gets or sets a value that specifies the maximum number of messages that can be read simultaneously without allocating new readers.</summary>
      <returns>The maximum number of messages that can be read simultaneously without allocating new readers. The default is 64.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.MaxWritePoolSize">
      <summary>Gets or sets a value that specifies the maximum number of messages that can be sent simultaneously without allocating new writers.</summary>
      <returns>The maximum number of messages that can be sent simultaneously without allocating new writers. The default is 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.MessageVersion">
      <summary>Gets or sets the SOAP and WS-Addressing versions that are used to format the text message sent using this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> value that specifies the SOAP version of the messages sent using this binding. The default is <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TextMessageEncodingElement.WriteEncoding">
      <summary>Gets or sets the character set encoding to be used for emitting messages on the binding.</summary>
      <returns>A valid <see cref="T:System.Text.Encoding" /> value that specifies the character set encoding to be used for emitting messages on the binding. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransactedBatchingElement">
      <summary>Represents a configuration element that specifies whether transaction batching is supported for receive operations. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactedBatchingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TransactedBatchingElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactedBatchingElement.BehaviorType">
      <summary>Gets the type of this behavior configuration element.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactedBatchingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactedBatchingElement.MaxBatchSize">
      <summary>Gets or sets the maximum number of receive operations that can be batched together in one transaction.</summary>
      <returns>The maximum number of receive operations that can be batched together in one transaction. The default is 0.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransactionFlowElement">
      <summary>Represents the configuration element that specifies transaction flow support for a binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TransactionFlowElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of this binding configuration section to the specified transaction flow binding element.</summary>
      <param name="bindingElement">A binding element of type <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElement" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="bindingElement" /> is not of type <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactionFlowElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> object that represents the type of this configuration element.</summary>
      <returns>The type of this configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of the specified configuration section to this configuration section.</summary>
      <param name="from">The configuration section to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.CreateBindingElement">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> object that has enabled transaction flow and uses the same <see cref="T:System.ServiceModel.TransactionProtocol" /> as the current element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> object that has enabled transaction flow, and uses the same <see cref="T:System.ServiceModel.TransactionProtocol" /> as the current element </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransactionFlowElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding configuration section with the content of the specified binding element. </summary>
      <param name="bindingElement">A binding element of type <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElement" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="bindingElement" /> is not of type <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactionFlowElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransactionFlowElement.TransactionProtocol">
      <summary>Gets or sets the transaction protocol to be used.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionProtocol" /> that specifies the transaction protocol to be used for transaction flow. The default is <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement">
      <summary>An XML element that identifies the type of a particular transport.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportConfigurationTypeElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportConfigurationTypeElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement" /> class with a unique name. </summary>
      <param name="name">A string that uniquely identifies the transport type.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportConfigurationTypeElement.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement" /> class with a unique name, and the type that implements the specific transport.</summary>
      <param name="name">A string that uniquely identifies the transport type.</param>
      <param name="transportConfigurationTypeName">The type that implements the specific transport.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="transportConfigurationTypeName" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportConfigurationTypeElement.Name">
      <summary>Gets or sets a name that uniquely identifies the transport type.</summary>
      <returns>The name that uniquely identifies the transport type.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportConfigurationTypeElement.TransportConfigurationType">
      <summary>Gets or sets a string that contains the type that implements the specific transport.</summary>
      <returns>The type that implements the specific transport.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransportConfigurationTypeElementCollection">
      <summary>A collection of <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportConfigurationTypeElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TransportConfigurationTypeElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.TransportElement">
      <summary>Provides a base class to represent a transport binding configuration element.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.TransportElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the settings of the specified <see cref="T:System.ServiceModel.Channels.BindingElement" /> to this configuration element.</summary>
      <param name="bindingElement">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to this configuration element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the settings from the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element whose settings are to be copied to this configuration element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.CreateBindingElement">
      <summary>Creates a new custom binding element object whose properties are copied from the settings of this configuration element.</summary>
      <returns>A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.CreateDefaultBindingElement">
      <summary>Returns a custom binding element object with default values.</summary>
      <returns>A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object with default values.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.TransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportElement.ManualAddressing">
      <summary>Gets or sets a Boolean value that specifies whether the user takes control of message addressing.</summary>
      <returns>true if the user can address every message individually; false if the default WCF addressing mechanism automatically creates addresses for all messages. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size of the buffer pool.</summary>
      <returns>The maximum size of the buffer pool. The default is 524,288 bytes (512 * 1024).</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum allowable message size that can be received.</summary>
      <returns>The maximum allowable message size that can be received.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.TransportElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UseManagedPresentationElement">
      <summary>Represents a binding element that manages presentation.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UseManagedPresentationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.UseManagedPresentationElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.UseManagedPresentationElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> object that represents the binding element. </summary>
      <returns>A <see cref="T:System.Type" /> object that represents the binding element. </returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.UseManagedPresentationElement.CreateBindingElement">
      <summary>Creates a new custom binding element object whose properties are copied from the settings of this configuration element.</summary>
      <returns>A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UserNameServiceElement">
      <summary>Represents a configuration element that specifies a service's credentials based on username and password. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UserNameServiceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.UserNameServiceElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime">
      <summary>Gets or sets the maximum length of time a token is cached. </summary>
      <returns>A <see cref="T:System.Timespan" /> that represents the maximum length of time a token is cached.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens">
      <summary>Gets or sets a value that indicates whether logon tokens are cached. </summary>
      <returns>true if logon tokens are cached; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType">
      <summary>Gets or sets the type of custom username password validator used.</summary>
      <returns>The type of custom username password validator used.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups">
      <summary>Gets or sets a value that indicates whether Windows groups are included in the security context. </summary>
      <returns>true if Windows groups are included in the security context; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens">
      <summary>Gets or sets the maximum number of logon tokens to cache. </summary>
      <returns>The maximum number of logon tokens to cache.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName">
      <summary>Gets or sets a string that specifies the name of a member provider that provides password validation logic.</summary>
      <returns>The name of a member provider that provides password validation logic.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode">
      <summary>Gets or sets the manner in which username password is validated. </summary>
      <returns>A valid <see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" /> value.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UserPrincipalNameElement">
      <summary>Represents a configuration element that specifies a user principal name. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UserPrincipalNameElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.UserPrincipalNameElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.UserPrincipalNameElement.Value">
      <summary>Gets or sets the value set for this configuration element.</summary>
      <returns>A string that specifies a user account name (sometimes referred to as the user logon name) and a domain name identifying the domain in which the user account is located. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WindowsClientElement">
      <summary>Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsClientElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WindowsClientElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel">
      <summary>Gets or sets the permissible impersonation level.</summary>
      <returns>A valid <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> value that specifies the permissible impersonation level. The default is <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm">
      <summary>Gets or sets a boolean value that specifies whether NTLM authentication is allowed.</summary>
      <returns>true if Windows security is enabled in the workgroup scenario; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsClientElement.Copy(System.ServiceModel.Configuration.WindowsClientElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.WindowsServiceElement">
      <summary>Represents a configuration element that specifies the settings of a Windows service credential. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsServiceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WindowsServiceElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsServiceElement.AllowAnonymousLogons">
      <summary>Gets or sets a Boolean value that specifies whether anonymous users can logon.</summary>
      <returns>true if anonymous users can logon; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsServiceElement.Copy(System.ServiceModel.Configuration.WindowsServiceElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsServiceElement.IncludeWindowsGroups">
      <summary>Gets or sets a value that indicates whether Windows groups are included in the security context.</summary>
      <returns>true if Windows groups are included in the security context; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WindowsStreamSecurityElement">
      <summary>Represents a configuration element that is used to specify settings for Windows stream security for a binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsStreamSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WindowsStreamSecurityElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsStreamSecurityElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>Applies the content of a specified binding element to this binding configuration element.</summary>
      <param name="bindingElement">A binding element.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsStreamSecurityElement.BindingElementType">
      <summary>Gets the <see cref="T:System.Type" /> object that represents the binding element. </summary>
      <returns>A <see cref="T:System.Type" /> object that represents the binding type.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WindowsStreamSecurityElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>Copies the content of a specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WindowsStreamSecurityElement.ProtectionLevel">
      <summary>Gets or sets the message-level security used.</summary>
      <returns>A <see cref="T:System.Net.Security.ProtectionLevel" /> that specifies the message-level security used. The default value is <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" /> .</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WsdlImporterElement">
      <summary>Represents the configuration element that specifies the import of Web Services Description Language (WSDL) 1.1 metadata with WS-Policy attachments.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WsdlImporterElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WsdlImporterElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WsdlImporterElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WsdlImporterElement" /> class with the specified type.</summary>
      <param name="type">The specified type.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WsdlImporterElement.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WsdlImporterElement" /> class with the specified type.</summary>
      <param name="type">The specified type.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WsdlImporterElement.Type">
      <summary>Gets or sets the type of this configuration element.</summary>
      <returns>The type of this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WsdlImporterElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.WsdlImporterElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WsdlImporterElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WsdlImporterElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSDualHttpBindingCollectionElement">
      <summary>Represents a configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSDualHttpBindingElement">
      <summary>Represents the configuration element for a secure and interoperable binding that is suitable for duplex service contracts or communication through SOAP intermediaries.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> class with the specified name.</summary>
      <param name="name">The configuration name of the binding. This value should be unique because it is used as identification for the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>The <see cref="T:System.Type" /> of this binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal">
      <summary>Gets or sets a boolean value that specifies whether to bypass the proxy server for local addresses.</summary>
      <returns>true if the proxy server is bypassed for local addresses; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress">
      <summary>Gets or sets a URI that specifies the base address the client listens to for response messages from the service.</summary>
      <returns>A URI that specifies the base address that the client listens to for response messages from the service. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode">
      <summary>Gets or sets the HTTP hostname comparison mode used to parse URIs.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that specifies whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration section with the content of the specified binding collection.</summary>
      <param name="binding">A collection of binding elements.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory that can be allocated for the message buffer manager, which receives messages at the endpoints configured with this binding.</summary>
      <returns>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524288 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be received on a channel configured with this binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding">
      <summary>Gets or sets the encoder used to encode the message. </summary>
      <returns>A <see cref="T:System.ServiceModel.WSMessageEncoding" /> value that specifies the encoder used to encode the message. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Called when the content of a specified binding collection is applied to this binding configuration element.</summary>
      <param name="binding">The binding to be applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress">
      <summary>Gets or set a URI that specifies the address of the HTTP proxy.</summary>
      <returns>A URI that specifies the address of the HTTP proxy. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession">
      <summary>Gets a configuration element that specifies whether reliable sessions are enabled for the endpoint configured with this binding.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" /> that specifies whether reliable sessions are enabled for the endpoint configured with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.Security">
      <summary>Gets the type of security to be used with this binding. </summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement" /> that specifies the security settings used with this binding. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding">
      <summary>Gets or sets the character set encoding to be used for emitting messages on the binding.</summary>
      <returns>A valid <see cref="T:System.Text.Encoding" /> value that specifies the character set encoding to be used for emitting messages on the binding. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow">
      <summary>Gets or sets a boolean value that specifies whether the binding supports flowing WS-Transactions.</summary>
      <returns>true if the binding supports flowing WS-Transactions; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy">
      <summary>Gets or sets a boolean value that specifies whether the system’s auto-configured HTTP proxy is used.</summary>
      <returns>true if the system’s auto-configured HTTP proxy is used; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement">
      <summary>Represents an XML element that defines the security settings for a wsDualHttpBinding binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSDualHttpSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpSecurityElement.Message">
      <summary>Gets the security settings for the message. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverTcpElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSDualHttpSecurityElement.Mode">
      <summary>Gets or sets the type of security that is applied to this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> that specifies the type of security that is applied to this binding The default value is <see cref="P:System.ServiceModel.Configuration.WSDualHttpSecurityElement.Message" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSFederationHttpBindingCollectionElement">
      <summary>Represents a configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement">
      <summary>Represents a configuration element that defines a binding that supports WS-Federation.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" /> class with the specified configuration name. </summary>
      <param name="name">The configuration name of the binding. This value should be unique because it is used as identification for the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>The <see cref="T:System.Type" /> of this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration section with the content of a specified binding collection.</summary>
      <param name="binding">A collection of binding elements.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Called when the content of a specified binding collection is applied to this binding configuration element.</summary>
      <param name="binding">A collection of binding elements.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.PrivacyNoticeAt">
      <summary>Gets or sets the URI at which the privacy notice is located.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the privacy notice is located.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.PrivacyNoticeVersion">
      <summary>Gets or sets an integer that specifies the version of the current privacy notice.</summary>
      <returns>An integer that specifies the version of the current privacy notice.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpBindingElement.Security">
      <summary>Gets the type of security to be used with this binding. </summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.WSFederationHttpSecurityElement" /> that defines the security used with this binding. The default value is <see cref="F:System.ServiceModel.SecurityMode.Message" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSFederationHttpSecurityElement">
      <summary>Represents an XML element that defines the security settings for a wsFederationHttp binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSFederationHttpSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSFederationHttpSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpSecurityElement.Message">
      <summary>Gets the security settings for the message. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.FederatedMessageSecurityOverHttpElement" /> that specifies the security settings for the message. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSFederationHttpSecurityElement.Mode">
      <summary>Gets or sets the type of security that is applied to this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> that specifies the type of security that is applied to this binding. The default value is <see cref="P:System.ServiceModel.Configuration.WSFederationHttpSecurityElement.Message" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpBindingBaseElement">
      <summary>Provides the base class with members common to the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" /> and the <see cref="T:System.ServiceModel.Configuration.WSFederationHttpBindingElement" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingBaseElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingBaseElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingBaseElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingBaseElement" /> class. </summary>
      <param name="name">The configuration name of the binding. This value should be unique because it is used as identification for the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.BypassProxyOnLocal">
      <summary>Gets or sets a Boolean value that specifies whether to bypass the proxy server for local addresses.</summary>
      <returns>true if the proxy server is bypassed for local addresses; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.HostNameComparisonMode">
      <summary>Gets or sets the HTTP hostname comparison mode used to parse URIs.</summary>
      <returns>A <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that specifies the HTTP hostname comparison mode used to parse URIs.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration section with the content of the specified binding elements.</summary>
      <param name="binding">A collection of binding elements.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size for a buffer pool that stores TCP messages processed by the binding.</summary>
      <returns>The maximum size (in bytes) for a buffer pool that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be processed by the binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.MessageEncoding">
      <summary>Gets or sets the encoder used to encode the message. </summary>
      <returns>A <see cref="T:System.ServiceModel.WSMessageEncoding" /> value that specifies the encoder used to encode the message. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Applies the specified binding to this <see cref="T:System.ServiceModel.Configuration.WsDualHttpBindingElement" /> instance.</summary>
      <param name="binding">The binding to be applied.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.ProxyAddress">
      <summary>Gets or set a URI that specifies the address of the HTTP proxy.</summary>
      <returns>A URI that specifies the address of the HTTP proxy. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.ReliableSession">
      <summary>Gets a configuration element that specifies whether reliable sessions are enabled for the endpoint configured with this binding.</summary>
      <returns>An <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> that specifies whether reliable sessions are enabled for the endpoint configured with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.TextEncoding">
      <summary>Gets or sets the character set encoding to be used for emitting messages on the binding.</summary>
      <returns>An <see cref="T:System.Text.Encoding" /> value that specifies the character set encoding to be used for emitting messages on the binding. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.TransactionFlow">
      <summary>Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.</summary>
      <returns>true if the binding supports flowing WS-Transactions; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingBaseElement.UseDefaultWebProxy">
      <summary>Gets or sets a Boolean value that specifies whether the system’s auto-configured HTTP proxy is used.</summary>
      <returns>true if the system’s auto-configured HTTP proxy is used; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpBindingCollectionElement">
      <summary>Represents a configuration element that contains sub-elements that specify settings for using the wsHttpBinding binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpBindingElement">
      <summary>Represents an interoperable binding that supports distributed transactions and secure, reliable sessions.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" /> class. </summary>
      <param name="name">The configuration name of the binding. This value should be unique because it is used as identification for the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingElement.AllowCookies">
      <summary>Gets or sets a Boolean value that specifies whether the client accepts cookies and propagates them on future requests. </summary>
      <returns>true if the client accepts cookies and propagates them on future requests; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>The <see cref="T:System.Type" /> of this binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>Initializes this binding configuration element with the content of the specified binding element.</summary>
      <param name="binding">A binding element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>Called when the content of a specified binding collection is applied to this binding configuration element.</summary>
      <param name="binding">A collection of binding elements.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpBindingElement.Security">
      <summary>Gets the type of security to be used with this binding. </summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.WSHttpSecurityElement" /> that is used with this binding. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpSecurityElement">
      <summary>An XML element that defines the security settings for a wsHttpBinding binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSHttpSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpSecurityElement.Message">
      <summary>Gets the security settings for the message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.MessageSecurityOverHttpElement" /> that specifies the security settings for the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpSecurityElement.Mode">
      <summary>Specifies the type of security that is applied.</summary>
      <returns>A <see cref="T:System.ServiceModel.SecurityMode" /> value that specifies the type of security that is applied. The default value is <see cref="F:System.ServiceModel.SecurityMode.Message" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpSecurityElement.Transport">
      <summary>Gets the security settings for the transport. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.HttpTransportSecurityElement" /> that specifies the security settings for the transport. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WSHttpTransportSecurityElement">
      <summary>Represents a configuration element that defines authentication settings for the HTTP transport. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WSHttpTransportSecurityElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSHttpTransportSecurityElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpTransportSecurityElement.ClientCredentialType">
      <summary>Gets or sets the credential used to authenticate the client to the service.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.HttpClientCredentialType" /> value that specifies the credential used to authenticate the client to the service. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpTransportSecurityElement.ProxyCredentialType">
      <summary>Gets or sets the credential used to authenticate the client to a domain proxy.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.HttpProxyCredentialType" /> value that specifies the credential used to authenticate the client to a domain proxy. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.WSHttpTransportSecurityElement.Realm">
      <summary>Gets or sets a string that specifies the authentication realm for digest or basic authentication.</summary>
      <returns>A string that specifies the authentication realm for digest or basic authentication. The default is an empty string. </returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement">
      <summary>Represents a configuration element that specifies a certificate issued by a trusted issuer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.Copy(System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.FindValue">
      <summary>Gets or sets a string that specifies the value to search for in the X.509 certificate store.</summary>
      <returns>The value to search for in the X.509 certificate store.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.StoreLocation">
      <summary>Gets or sets a value that specifies the location of the certificate store the client can use to validate the server’s certificate.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> that specifies the location of the certificate store the client can use to validate the server’s certificate. The default value is <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.StoreName">
      <summary>Gets or sets the name of the X.509 certificate store to open.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the name of the X.509 certificate store to open.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement.X509FindType">
      <summary>Gets or sets the type of X.509 search to be executed.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> that specifies the type of X.509 search to be executed.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection">
      <summary>Contains a collection of <see cref="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement">
      <summary>Represents a configuration element that specifies authentication settings for a client certificate. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.CertificateValidationMode">
      <summary>Gets the certificate validation mode.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" /> value.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.Copy(System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement)">
      <summary>Copies the content of a specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.CustomCertificateValidatorType">
      <summary>Gets or sets the type of custom client certificate validator used.</summary>
      <returns>The type of <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> to be used.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.IncludeWindowsGroups">
      <summary>Gets or sets a value that indicates whether Windows groups are included in the security context.</summary>
      <returns>true if Windows groups are included in the security context; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.MapClientCertificateToWindowsAccount">
      <summary>Gets or sets a value that indicates whether the certificate is mapped to Windows accounts. </summary>
      <returns>true if the certificate is mapped to Windows accounts; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.RevocationMode">
      <summary>Gets or sets the certificate revocation mode.</summary>
      <returns>A valid <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> value. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement.TrustedStoreLocation">
      <summary>Gets or sets the trusted store location where the client certificate is validated.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement">
      <summary>Represents a configuration element that specifies a certificate used by a client. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.Copy(System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.FindValue">
      <summary>Gets or sets a string that specifies the value to search for in the X.509 certificate store.</summary>
      <returns>The value to search for in the X.509 certificate store.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.StoreLocation">
      <summary>Gets or sets a value that specifies the location of the certificate store that the service can use to validate the client's certificate.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />. The default value is <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.StoreName">
      <summary>Gets or sets the name of the X.509 certificate store to open.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the name of the X.509 certificate store to open.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement.X509FindType">
      <summary>Gets or sets the type of X.509 search to be executed.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> that specifies the type of X.509 search to be executed.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement">
      <summary>Represents a configuration element that specifies a default certificate used by a service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.Copy(System.ServiceModel.Configuration.X509DefaultServiceCertificateElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.FindValue">
      <summary>Gets or sets a string that specifies the value to search for in the X.509 certificate store.</summary>
      <returns>The value to search for in the X.509 certificate store.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.StoreLocation">
      <summary>Gets or sets a value that specifies the location of the certificate store the client can use to validate the server’s certificate.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> that specifies the location of the certificate store the client can use to validate the server’s certificate. The default value is <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.StoreName">
      <summary>Gets or sets the name of the X.509 certificate store to open.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the name of the X.509 certificate store to open.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement.X509FindType">
      <summary>Gets or sets the type of X.509 search to be executed.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> that specifies the type of X.509 search to be executed.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement">
      <summary>Represents a configuration element that specifies a certificate used by a client to identify itself. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.Copy(System.ServiceModel.Configuration.X509InitiatorCertificateClientElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.FindValue">
      <summary>Gets or sets a string that specifies the value to search for in the X.509 certificate store.</summary>
      <returns>The value to search for in the X.509 certificate store.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.StoreLocation">
      <summary>Gets or sets a value that specifies the location of the certificate store the client can use to validate the server’s certificate.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> that specifies the location of the certificate store the client can use to validate the server’s certificate. The default value is <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.StoreName">
      <summary>Gets or sets the name of the X.509 certificate store to open.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the name of the X.509 certificate store to open.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement.X509FindType">
      <summary>Gets or sets the type of X.509 search to be executed.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> that specifies the type of X.509 search to be executed.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement">
      <summary>Represent a configuration element that specifies the sender's requirement for an X.509 certificate, which is used by the recipient when replying to the sender. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement.Authentication">
      <summary>Gets the client certificate used for authentication.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" /> that contains the client certificate used for authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement.Certificate">
      <summary>Gets the certificate that is used to represent the service when communicating back to the client.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that is used to represent the service when communicating back to the client.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement.Copy(System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement">
      <summary>Represents a configuration element that specifies authentication settings for a peer certificate. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.CertificateValidationMode">
      <summary>Gets the certificate validation mode.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" /> value.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.Copy(System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.CustomCertificateValidatorType">
      <summary>Gets or sets the type of custom peer certificate validator to be used.</summary>
      <returns>The type of <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> to be used.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.RevocationMode">
      <summary>Gets or sets the certificate revocation mode.</summary>
      <returns>A valid <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> value. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement.TrustedStoreLocation">
      <summary>Gets or sets the trusted store location where the peer certificate is validated.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509PeerCertificateElement">
      <summary>Represents a configuration element that specifies a certificate used by a peer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509PeerCertificateElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509PeerCertificateElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509PeerCertificateElement.Copy(System.ServiceModel.Configuration.X509PeerCertificateElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateElement.FindValue">
      <summary>Gets or sets a string that specifies the value to search for in the X.509 certificate store.</summary>
      <returns>The value to search for in the X.509 certificate store.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateElement.StoreLocation">
      <summary>Gets or sets a value that specifies the location of the certificate store the client can use to validate the peer certificate.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />. The default value is <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateElement.StoreName">
      <summary>Gets or sets the name of the X.509 certificate store to open.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the name of the X.509 certificate store to open.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509PeerCertificateElement.X509FindType">
      <summary>Gets or sets the type of X.509 search to be executed.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> that specifies the type of X.509 search to be executed.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509RecipientCertificateClientElement">
      <summary>Represents a configuration element that specifies a recipient's requirements for an X.509 certificate to be used by the sender. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509RecipientCertificateClientElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.Authentication">
      <summary>Gets the certificate used for authentication.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.Copy(System.ServiceModel.Configuration.X509RecipientCertificateClientElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.DefaultCertificate">
      <summary>Gets the default certificate to be used to represent the service when communicating back to the client.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to be used to represent the service when communicating back to the client.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateClientElement.ScopedCertificates">
      <summary>Gets a scoped certificate to be used for representing the service when communicating back to the client.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to be used for representing the service when communicating back to the client.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement">
      <summary>Represents a configuration element that specifies a certificate used by a service to identify itself. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.Copy(System.ServiceModel.Configuration.X509RecipientCertificateServiceElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.FindValue">
      <summary>Gets or sets a string that specifies the value to search for in the X.509 certificate store.</summary>
      <returns>The value to search for in the X.509 certificate store.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.StoreLocation">
      <summary>Gets or sets a value that specifies the location of the certificate store the client can use to validate the server’s certificate.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> that specifies the location of the certificate store the client can use to validate the server’s certificate. The default value is <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.StoreName">
      <summary>Gets or sets the name of the X.509 certificate store to open.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the name of the X.509 certificate store to open.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement.X509FindType">
      <summary>Gets or sets the type of X.509 search to be executed.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> that specifies the type of X.509 search to be executed.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement">
      <summary>Represents a configuration element that specifies a service certificate. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.Copy(System.ServiceModel.Configuration.X509ScopedServiceCertificateElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.FindValue">
      <summary>Gets or sets a string that specifies the value to search for in the X.509 certificate store.</summary>
      <returns>The value to search for in the X.509 certificate store.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.StoreLocation">
      <summary>Gets or sets a value that specifies the location of the certificate store the client can use to validate the server’s certificate.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />. The default value is <see cref="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.StoreName">
      <summary>Gets or sets the name of the X.509 certificate store to open.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the name of the X.509 certificate store to open.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.TargetUri">
      <summary>Gets or sets the URI for this certificate.</summary>
      <returns>A URI.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement.X509FindType">
      <summary>Gets or sets the type of X.509 search to be executed.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> that specifies the type of X.509 search to be executed.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElementCollection">
      <summary>Contains a collection of <see cref="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ScopedServiceCertificateElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement">
      <summary>Represents a configuration element that specifies authentication settings for a service certificate. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.CertificateValidationMode">
      <summary>Gets the certificate validation mode.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" /> value.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.Copy(System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement)">
      <summary>Copies the content of the specified configuration element to this configuration element.</summary>
      <param name="from">The configuration element to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="from" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.CustomCertificateValidatorType">
      <summary>Gets or sets the type of custom service certificate validator to be used.</summary>
      <returns>The type of <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> to be used.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.RevocationMode">
      <summary>Gets or sets the certificate revocation mode.</summary>
      <returns>A valid <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> value. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement.TrustedStoreLocation">
      <summary>Gets or sets the trusted store location where the service certificate is validated.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement">
      <summary>Represents the configuration element that defines the constraints on the complexity of SOAP messages that can be processed by endpoints configured with a binding. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength">
      <summary>Gets and sets the maximum allowed array length.</summary>
      <returns>The maximum allowed array length.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead">
      <summary>Gets and sets the maximum allowed bytes returned for each read.</summary>
      <returns>The maximum allowed bytes returned for each read.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth">
      <summary>Gets and sets the maximum nested node depth for each read.</summary>
      <returns>The maximum nested node depth for each read.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount">
      <summary>Gets and sets the maximum characters allowed in a table name.</summary>
      <returns>The maximum characters allowed in a table name.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength">
      <summary>Gets and sets the maximum characters allowed in XML element content.</summary>
      <returns>The maximum characters allowed in XML element content.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.XmlElementElement">
      <summary>Represents the configuration settings for an XML element. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlElementElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.XmlElementElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlElementElement.#ctor(System.Xml.XmlElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.XmlElementElement" /> class with the specific XML element.</summary>
      <param name="element">The <see cref="T:System.Xml.XmlElement" /> from which this instance is initialized.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlElementElement.Copy(System.ServiceModel.Configuration.XmlElementElement)">
      <summary>Copies the content of the specified <see cref="T:System.Xml.XmlElement" /> to this instance.</summary>
      <param name="source">The <see cref="T:System.Xml.XmlElement" /> to copy from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is null.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.XmlElementElement.XmlElement">
      <summary>Gets the <see cref="T:System.Xml.XmlElement" /> that this class encapsulates. </summary>
      <returns>A <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.XmlElementElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.XmlElementElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XmlElementElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.XmlElementElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.XPathMessageFilterElement">
      <summary>Represents a configuration element that is used in message logging. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.XPathMessageFilterElement.Filter">
      <summary>Gets or sets the XPath filter defined.</summary>
      <returns>A <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.XPathMessageFilterElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElementCollection" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElementCollection.ContainsKey(System.Object)">
      <summary>Determines whether the <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElementCollection" /> contains an element with the specified key.</summary>
      <returns>true if the key exists in the collection; otherwise, false.</returns>
      <param name="key">The key to look up in the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The type associated with <paramref name="key" /> is invalid.</exception>
    </member>
    <member name="P:System.ServiceModel.Configuration.XPathMessageFilterElementCollection.Item(System.Object)">
      <summary>Gets an item with the specified key from the collection.</summary>
      <returns>The <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" /> associated with the specified <paramref name="key" /> in the collection. </returns>
      <param name="key">The key to look up in the collection.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.XPathMessageFilterElementComparer">
      <summary>Provides functionality to compare two <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElementComparer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElementComparer" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.XPathMessageFilterElementComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>Compare two <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" /> instances.</summary>
      <returns>The following table shows the possible values.ValueCondition-1<paramref name="x" /> is less than <paramref name="y" />.0<paramref name="x" /> is equal to <paramref name="y" />.1<paramref name="x" /> is greater than <paramref name="y" />.</returns>
      <param name="x">A <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" />.</param>
      <param name="y">A <see cref="T:System.ServiceModel.Configuration.XPathMessageFilterElement" />.</param>
      <exception cref="T:System.InvalidOperationException">The XPath filter specified by <paramref name="x" /> or <paramref name="y" /> cannot be parsed.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The XPath namespace prefix specified by <paramref name="x" /> or <paramref name="y" />.cannot be found.</exception>
    </member>
    <member name="T:System.ServiceModel.Configuration.AllowedAudienceUriElement">
      <summary>Represents a configuration element specifying the URI of an audience that can access a particular service.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AllowedAudienceUriElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.AllowedAudienceUriElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.AllowedAudienceUriElement.AllowedAudienceUri">
      <summary>Gets or sets a string specifying the URI of an audience that can access a particular service.</summary>
      <returns>A string specifying the URI of an audience that can access a particular service.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection">
      <summary>Represents a collection of <see cref="System.ServiceModel.Configuration.AllowedAudienceUriElement" /> which is a target URI for which the <see cref="System.IdentityModel.Tokens.SamlSecurityToken" /> security token can be targeted for in order to be considered valid by a <see cref="System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> instance.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement">
      <summary>Represents a configuration element that specifies a pass through filter, which provides a mechanism to pick the appropriate IIS bindings when hosting a Windows Communication Foundation (WCF) application in IIS. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement" /> class with a specific URI.</summary>
      <param name="prefix">A filter that causes the service to listen on all URIs that start with this specific prefix. </param>
    </member>
    <member name="P:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement.Prefix">
      <summary>Gets or sets a prefix that is used to match a part of a base address.</summary>
      <returns>A URI that is used to match a part of a base address.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElementCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.BaseAddressPrefixFilterElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElementCollection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WS2007FederationHttpBinding">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement" /> objects.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingCollectionElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.BindingsSection.WS2007HttpBinding">
      <summary>Gets the configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" /> objects.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingCollectionElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenParametersElement.DefaultMessageSecurityVersion">
      <summary>Gets or sets the default message security version to be used with this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.MessageSecurityVersion" /> that provides information about the versions of the security specifications, (WS-Security, WS-Trust, WS-Secure Conversation and WS-Security Policy), that must be supported by the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.AllowedAudienceUris">
      <summary>Gets a <see cref="T:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.AllowedAudienceUriElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.AudienceUriMode">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token's <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> should be validated. </summary>
      <returns>A valid value of <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" /> that specifies whether the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token's <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> should be validated. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.CertificateValidationMode">
      <summary>Gets or sets the certificate validation mode. </summary>
      <returns>One of the valid values of <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />. If set to <see cref="F:System.ServiceModel.Security.X509CertificateValidationMode.Custom" />, then a customCertificateValidator must also be supplied. The default is <see cref="F:System.ServiceModel.Security.X509CertificateValidationMode.ChainTrust" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.CustomCertificateValidatorType">
      <summary>Gets or sets a type and assembly used to validate a custom type. </summary>
      <returns>The type and assembly used to validate a custom type. </returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.RevocationMode">
      <summary>Gets or sets the revocation mode that specifies whether a revocation check occurs, and if it is performed online or offline.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.IssuedTokenServiceElement.TrustedStoreLocation">
      <summary>Gets or sets the location of the X.509 certificate store. </summary>
      <returns>A valid value of <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion">
      <summary>Gets or sets the version of WS-ReliableMessaging specified by the configuration element.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the version of the WS-ReliableMessaging protocol used by the configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceCredentialsElement.ApplyConfiguration(System.ServiceModel.Description.ServiceCredentials)">
      <summary>Applies the content of a specified binding element to this binding configuration element.</summary>
      <param name="behavior">A <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceCredentialsElement.CreateBehavior">
      <summary>Creates a behavior extension based on the current configuration settings.</summary>
      <returns>The behavior extension.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceCredentialsElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageBinding">
      <summary>Gets or sets a string value that specifies the binding to be used when HTTP is utilized to access the service help page.</summary>
      <returns>
Returns <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageBindingConfiguration">
      <summary>Gets or sets a string that points to an XML section defining additional configuration information for the binding specified in <see cref="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpHelpPageBinding" />.</summary>
      <returns>
Returns <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageBinding">
      <summary>Gets or sets a string value that specifies the binding to be used when HTTPS is utilized to access the service help page.</summary>
      <returns>
Returns <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageBindingConfiguration">
      <summary>Gets or sets a string that points to an XML section defining additional configuration information for the binding specified in <see cref="P:System.ServiceModel.Configuration.ServiceDebugElement.HttpsHelpPageBinding" />.</summary>
      <returns>
Returns <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection.BaseAddressPrefixFilters">
      <summary>Gets a collection of configuration elements that specify prefix filters for the base addresses used by the service host. </summary>
      <returns>A <see cref="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpGetBinding">
      <summary>A string value that specifies the name of the binding to be used for metadata retrieval in HTTP GET scenarios.</summary>
      <returns>
Returns <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpGetBindingConfiguration">
      <summary>Gets or sets a string that points to an XML section defining additional configuration information for the binding specified in <see cref="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement..HttpGetBinding" />.</summary>
      <returns>
Returns <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpsGetBinding">
      <summary>A string value that specifies the name of the binding to be used for metadata retrieval in HTTPS GET scenarios.</summary>
      <returns>
Returns <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.HttpsGetBindingConfiguration">
      <summary>Gets or sets a string that points to an XML section defining additional configuration information for the binding specified in <see cref="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement..HttpsGetBinding" />.</summary>
      <returns>
Returns <see cref="T:System.String" />.
</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.ServiceMetadataPublishingElement.PolicyVersion">
      <summary>Gets or sets a value that specifies the version of the WS-Policy specification being used. </summary>
      <returns>A valid value of <see cref="T:System.ServiceModel.Description.PolicyVersion" /> that specifies the version of the WS-Policy specification being used.</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Resets the internal state of this configuration element object, including the locks and the properties collections.</summary>
      <param name="parentElement">The parent node of this configuration element.</param>
    </member>
    <member name="M:System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Resets the internal state of this configuration element object, including the locks and the properties collections.</summary>
      <param name="parentElement">The parent node of this configuration element.</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingCollectionElement">
      <summary>Represents a configuration element that contains a collection of <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement" /> instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007FederationHttpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement">
      <summary>Represents a configuration element that defines the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement" /> class with the specified configuration name. </summary>
      <param name="name">The configuration name of the binding. This value should be unique because it is used as identification for the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WS2007FederationHttpBindingElement.BindingElementType">
      <summary>Gets the type of the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> class.</summary>
      <returns>The <see cref="T:System.Type" /> of this binding element.</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.WS2007HttpBindingCollectionElement">
      <summary>Represents a configuration element that contains sub-elements that specify settings for using the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007HttpBindingCollectionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingCollectionElement" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.WS2007HttpBindingElement">
      <summary>Represents an interoperable binding that derives from <see cref="T:System.ServiceModel.WSHttpBinding" /> and provides support for the correct versions of the <see cref="P:System.ServiceModel.WSHttpBinding.Security" />, <see cref="T:System.ServiceModel.ReliableSession" />, and <see cref="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" /> binding elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007HttpBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.WS2007HttpBindingElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" /> class with a specified binding. </summary>
      <param name="name">The configuration name of the binding. This value should be unique because it is used as identification for the binding.</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.WS2007HttpBindingElement.BindingElementType">
      <summary>Gets the type of this binding element.</summary>
      <returns>The type of this binding element.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.CallbackDebugBehavior">
      <summary>Enables service debugging for a Windows Communication Foundation (WCF) callback object.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.CallbackDebugBehavior" /> class. </summary>
      <param name="includeExceptionDetailInFaults">Controls whether a WCF callback object includes managed exception information in the detail of the SOAP faults sent back to the service.</param>
    </member>
    <member name="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that controls whether client callback objects return managed exception information in SOAP faults back to the service.</summary>
      <returns>true if WCF returns managed client callback exception information in the SOAP faults for service debugging purposes in duplex communication; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to support the behavior.</summary>
      <param name="serviceEndpoint">The endpoint to modify.</param>
      <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> to support the behavior.</summary>
      <param name="serviceEndpoint">The endpoint that is to be customized.</param>
      <param name="behavior">The client runtime to be customized.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> to support the behavior.</summary>
      <param name="serviceEndpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implements <see cref="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" /> to support the behavior.</summary>
      <param name="serviceEndpoint">The endpoint to validate.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Enables the user to configure client and service credentials as well as service credential authentication settings for use on the client side of communication.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ClientCredentials" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>This is a copy constructor. </summary>
      <param name="other">A <see cref="T:System.ServiceModel.Description.ClientCredentials" />. All properties of the newly-constructed instance reflect the values of this parameter. </param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Applies the specified client behavior to the endpoint.</summary>
      <param name="serviceEndpoint">The endpoint to which the specified client behavior is to be applied.</param>
      <param name="behavior">The client behavior that is to be applied to the specified endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceEndpoint" /> or<paramref name=" behavior" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.ClientCertificate">
      <summary>Gets an object that you can use to provide the X.509 certificate that the client uses to authenticate to the service. </summary>
      <returns>An <see cref="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" /> that represents the client certificate. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Creates a new copy of this <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Creates a new copy of this <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CreateSecurityTokenManager">
      <summary>Creates a security token manager for this instance. This method is rarely called explicitly; it is primarily used in extensibility scenarios and is called by the system itself. </summary>
      <returns>A <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> for this <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.GetInfoCardSecurityToken(System.Boolean,System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Generates and returns a security token using the CardSpace system and the specified policy chain and token serializer.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /> that represents the generated security token. Returns null if <paramref name="requiresInfoCard" /> is false.</returns>
      <param name="requiresInfoCard">A value that determines whether CardSpace is required.</param>
      <param name="chain">An array of <see cref="T:System.IdentityModel.Selectors.CardSpacePolicyElement" /> that describes the federated security chain that the client requires a final token to unwind.</param>
      <param name="tokenSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that can read a KeyInfo clause.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.HttpDigest">
      <summary>Gets the current HTTP Digest credential.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.HttpDigestClientCredential" /> that represents the credential that the client uses to authenticate to the service when the HTTP Digest authentication method is chosen. </returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.IssuedToken">
      <summary>Use this property to specify the endpoint address and binding to use when contacting your local Security Token Service. This information is used when a service requires authentication using an issued token, but the policy of the service (represented as a binding on the client) does not explicitly specify how and where to obtain the issued token. </summary>
      <returns>An <see cref="T:System.ServiceModel.Security.IssuedTokenClientCredential" /> that specifies parameters to be used to obtain a token from a local Security Token Service. </returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Peer">
      <summary>Controls the credentials that a peer node uses to authenticate itself to other nodes in the mesh, as well as authentication settings that a peer node uses to authenticate other peer nodes. </summary>
      <returns>A <see cref="T:System.ServiceModel.Security.PeerCredential" /> that represents the current peer credential.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate">
      <summary>Gets an object used to specify a service's X.509 certificate. </summary>
      <returns>An <see cref="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" /> that represents the certificate to use for a particular service. </returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.SupportInteractive">
      <summary>Gets or sets a value that indicates whether the system is allowed to interactively prompt the user for credentials when necessary. For example, setting it to false might be desired in middle-tier scenarios. </summary>
      <returns>true if the credential supports interactive mode; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds this instance of this class to a binding parameter collection.</summary>
      <param name="serviceEndpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to add.</param>
      <param name="bindingParameters">The collection of binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"></member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Reserved for future use.</summary>
      <param name="serviceEndpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to validate.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Gets a credential object that you can use to set the user name and password that the client uses to authenticate itself to the service. </summary>
      <returns>A <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" /> that represents the current UserName credential.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Windows">
      <summary>Gets an object used to control the Windows credential that the client uses to authenticate itself to the service. </summary>
      <returns>A <see cref="T:System.ServiceModel.Security.WindowsClientCredential" /> that represents the current Windows credential.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientViaBehavior">
      <summary>The <see cref="T:System.ServiceModel.Description.ClientViaBehavior" /> is used by clients to specify the URI for which the transport channel should be created. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ClientViaBehavior" /> class.</summary>
      <param name="uri">The URI for which the transport channel should be created.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Is not implemented.</summary>
      <param name="serviceEndpoint">The service endpoint.</param>
      <param name="bindingParameters">The binding parameters to be applied to the service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Sets the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Via" /> to the URI for which the transport channel is created.</summary>
      <param name="serviceEndpoint">The service endpoint.</param>
      <param name="behavior">The <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> for which the client behavior is to be applied.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implements a modification or extension of the service across an endpoint.</summary>
      <param name="serviceEndpoint">The service endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to be modified.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientViaBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Is not implemented.</summary>
      <param name="serviceEndpoint">The service endpoint that exposes the contract.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientViaBehavior.Uri">
      <summary>Gets or set the URI for which the transport channel should be created.</summary>
      <returns>The URI for which the transport channel should be created.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Describes a Windows Communication Foundation (WCF) contract that specifies what an endpoint communicates to the outside world.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ContractDescription" /> class with a specified name.</summary>
      <param name="name">The name of the contract.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is empty.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ContractDescription" /> class with a namespace-qualified name specified.</summary>
      <param name="name">The name of the contract.</param>
      <param name="ns">The namespace that contains the name of the contract.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is empty.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Behaviors">
      <summary>Gets the behaviors associated with the contract description.</summary>
      <returns>The <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> of type <see cref="T:System.ServiceModel.Description.IContractBehavior" /> associated with the contract description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Gets or sets the type of callback contract that the contract description specifies.</summary>
      <returns>The <see cref="T:System.Type" /> of callback contract that the contract description specifies.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Gets or sets the configuration name for the contract description.</summary>
      <returns>The configuration name for the contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Gets or sets the contract type that the contract description specifies.</summary>
      <returns>The <see cref="T:System.Type" /> of contract that the contract description specifies.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.GetContract(System.Type)">
      <summary>Returns the contract description for a specified type of contract.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the specified type of contract.</returns>
      <param name="contractType">The <see cref="T:System.Type" /> of contract.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.GetContract(System.Type,System.Object)">
      <summary>Returns the contract description for a specified type of contract and service implementation.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the specified type of contract and service implementation.</returns>
      <param name="contractType">The <see cref="T:System.Type" /> of contract.</param>
      <param name="serviceImplementation">The <see cref="T:System.Object" /> that implements the service.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.GetContract(System.Type,System.Type)">
      <summary>Returns the contract description for a specified type of contract and a specified type of service.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the specified type of contract and type of service.</returns>
      <param name="contractType">The <see cref="T:System.Type" /> of contract.</param>
      <param name="serviceType">The <see cref="T:System.Type" /> of service.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.GetInheritedContracts">
      <summary>Returns a collection of contract descriptions that are inherited by the current contract description.</summary>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Description.ContractDescription" /> that is inherited by the current contract description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.HasProtectionLevel">
      <summary>Gets a value that indicates whether the contract has had a protection level set.</summary>
      <returns>true if the protection level has been set; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Gets or sets the name of the contract.</summary>
      <returns>The name of the contract description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Gets or sets the namespace for the contract.</summary>
      <returns>The namespace of the contract.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Gets the collection of operation descriptions associated with the contract.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" /> that contains the operation descriptions associated with the contract description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ProtectionLevel">
      <summary>Gets or sets the level of security protection associated with the contract.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> for the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.SessionMode">
      <summary>Gets or sets a value that indicates whether a session is required by the contract.</summary>
      <returns>The <see cref="T:System.ServiceModel.SessionMode" /> that specifies the support for reliable sessions that a contract requires or supports.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerMessageContractImporter">
      <summary>Handles the importation of data contract messages from WSDL documents.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.DataContractSerializerMessageContractImporter" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.Enabled">
      <summary>Gets or sets a value that specifies whether importation of messages is enabled.</summary>
      <returns>true if importation is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Specifies a service description and schema set to use when importing a set of WSDL documents.</summary>
      <param name="wsdlDocuments">A <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> that represents the WSDL documents to inspect.</param>
      <param name="xmlSchemas">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that represents the schemas to use when converting messages.</param>
      <param name="policy">A <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the policy documents to use when importing messages.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Imports a message contract from a WSDL document.</summary>
      <param name="importer">A <see cref="T:System.ServiceModel.Description.WsdlImporter" /> to use when importing.</param>
      <param name="contractContext">A  <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> that represents the contract context.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Converts the WSDL document from a specified endpoint.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> to use when importing.</param>
      <param name="endpointContext">The <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> used to define the endpoint.</param>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior">
      <summary>Represents the run-time behavior of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> class with the specified operation.</summary>
      <param name="operation">An <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> class with the specified operation and <see cref="T:System.ServiceModel.DataContractFormatAttribute" />.</summary>
      <param name="operation">An <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
      <param name="dataContractFormatAttribute">A <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> used to control the serialization.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
      <summary>Creates an instance of a class that inherits from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> for serialization and deserialization operations.</summary>
      <returns>An instance of a class that inherits from the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> class.</returns>
      <param name="type">The <see cref="T:System.Type" /> to create the serializer for.</param>
      <param name="name">The name of the generated type.</param>
      <param name="ns">The namespace of the generated type.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.Type" /> that contains known types.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
      <summary>Creates an instance of a class that inherits from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> for serialization and deserialization operations with an <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace.</summary>
      <returns>An instance of a class that inherits from the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> class.</returns>
      <param name="type">The type to serialize or deserialize.</param>
      <param name="name">The name of the serialized type.</param>
      <param name="ns">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the serialized type.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.Type" /> that contains known types.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractFormatAttribute">
      <summary>Gets the <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> associated with the operation.</summary>
      <returns>The <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> associated with the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractSurrogate">
      <summary>Gets or sets a surrogate to be used during serialization and deserialization.</summary>
      <returns>An <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> used as a substitute serializer.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.IgnoreExtensionDataObject">
      <summary>Gets or sets a value that specifies whether data provided by an extension of a type (and therefore not in the data contract) is ignored.</summary>
      <returns>true to ignore the data; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.MaxItemsInObjectGraph">
      <summary>Gets or sets the maximum number of items to serialize or deserialize.</summary>
      <returns>The maximum number of items to serialize or deserialize. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds a collection of parameters to the behavior. </summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to add the parameters to.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that contains the parameters to add.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Attaches a client behavior to the operation.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.OperationDescription" />  that represents the operation.</param>
      <param name="proxy">A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> that represents a client.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Applies the behavior to the operation.</summary>
      <param name="description">An <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
      <param name="dispatch">The <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> to attach the behavior to.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Validates the operation.</summary>
      <param name="description">An <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation to validate.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Exports the WSDL representation of the operation.</summary>
      <param name="exporter">A <see cref="T:System.ServiceModel.Description.WsdlExporter" /> to use for the export.</param>
      <param name="contractContext">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> for the WSDL.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Exports the endpoint description as a WSDL document.</summary>
      <param name="exporter">A <see cref="T:System.ServiceModel.Description.WsdlExporter" /> to use for the export.</param>
      <param name="endpointContext">A <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> for the WSDL.</param>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Represents a SOAP fault.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.FaultDescription" /> class using the specified action value.</summary>
      <param name="action">The action of the SOAP fault message.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>The value of the action in the SOAP fault message.</summary>
      <returns>The action of the SOAP fault.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>The type of the SOAP fault detail.</summary>
      <returns>The type of the serializable detail object.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.HasProtectionLevel">
      <summary>Gets a value that indicates whether the fault message has a protection level assigned.</summary>
      <returns>true if the fault message has a protection level; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Gets or sets the name of the SOAP fault.</summary>
      <returns>The name of the SOAP fault.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Gets or sets the namespace of the SOAP fault.</summary>
      <returns>The namespace of the SOAP fault.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.ProtectionLevel">
      <summary>Specifies the level of protection the SOAP fault requires from the binding.</summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>A collection of <see cref="T:System.ServiceModel.Description.FaultDescription" /> objects that you can use to obtain information about SOAP faults in a contract.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescriptionCollection.Find(System.String)">
      <summary>Returns the <see cref="T:System.ServiceModel.Description.FaultDescription" /> object that has the specified action value.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.FaultDescription" /> object that has the specified action, or null. If more than one <see cref="T:System.ServiceModel.Description.FaultDescription" /> object has the same action, the first one in the collection is returned.</returns>
      <param name="action">The value of the SOAP fault action.</param>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescriptionCollection.FindAll(System.String)">
      <summary>Returns all <see cref="T:System.ServiceModel.Description.FaultDescription" /> objects that have the specified action value.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.FaultDescription" /> objects that have the specified action. If there are no <see cref="T:System.ServiceModel.Description.FaultDescription" /> objects with the action, an empty collection is returned.</returns>
      <param name="action">The value of the SOAP fault action.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehavior">
      <summary>Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures any binding elements to support the contract behavior.</summary>
      <param name="contractDescription">The contract description to modify.</param>
      <param name="endpoint">The endpoint to modify.</param>
      <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements a modification or extension of the client across a contract.</summary>
      <param name="contractDescription">The contract description for which the extension is intended.</param>
      <param name="endpoint">The endpoint.</param>
      <param name="clientRuntime">The client runtime.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implements a modification or extension of the client across a contract.</summary>
      <param name="contractDescription">The contract description to be modified.</param>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="dispatchRuntime">The dispatch runtime that controls service execution.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implement to confirm that the contract and endpoint can support the contract behavior.</summary>
      <param name="contractDescription">The contract to validate.</param>
      <param name="endpoint">The endpoint to validate.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehaviorAttribute">
      <summary>Specifies the contract for which an attribute that implements the <see cref="T:System.ServiceModel.Description.IContractBehavior" /> interface is active.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract">
      <summary>Gets the type of the contract to which the contract behavior is applicable.</summary>
      <returns>The contract to which the contract behavior is applicable.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.IEndpointBehavior">
      <summary>Implements methods that can be used to extend run-time behavior for an endpoint in either a service or client application.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implement to pass data at runtime to bindings to support custom behavior.</summary>
      <param name="endpoint">The endpoint to modify.</param>
      <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements a modification or extension of the client across an endpoint.</summary>
      <param name="endpoint">The endpoint that is to be customized.</param>
      <param name="clientRuntime">The client runtime to be customized.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implements a modification or extension of the service across an endpoint.</summary>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implement to confirm that the endpoint meets some intended criteria.</summary>
      <param name="endpoint">The endpoint to validate.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IMetadataExchange">
      <summary>Exposes methods used to return metadata about a service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IMetadataExchange.BeginGet(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous retrieval of metadata.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that can be passed to the <see cref="M:System.ServiceModel.Description.IMetadataExchange.EndGet(System.IAsyncResult)" /> method.</returns>
      <param name="request">A <see cref="T:System.ServiceModel.Channels.Message" /> that should be processed to determine the metadata to return.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> that points to the method that will process the metadata.</param>
      <param name="state">Any data which allows the caller to determine which asynchronous call is being returned.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IMetadataExchange.EndGet(System.IAsyncResult)">
      <summary>Concludes the retrieval of metadata.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> containing the processed metadata.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" />  that contains data used to further process the metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IMetadataExchange.Get(System.ServiceModel.Channels.Message)">
      <summary>Returns the service metadata.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> containing the metadata.</returns>
      <param name="request">A <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request for metadata.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationBehavior">
      <summary>Implements methods that can be used to extend run-time behavior for an operation in either a service or client application.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implement to pass data at runtime to bindings to support custom behavior.</summary>
      <param name="operationDescription">The operation being examined. Use for examination only. If the operation description is modified, the results are undefined.</param>
      <param name="bindingParameters">The collection of objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements a modification or extension of the client across an operation.</summary>
      <param name="operationDescription">The operation being examined. Use for examination only. If the operation description is modified, the results are undefined.</param>
      <param name="clientOperation">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements a modification or extension of the service across an operation.</summary>
      <param name="operationDescription">The operation being examined. Use for examination only. If the operation description is modified, the results are undefined.</param>
      <param name="dispatchOperation">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implement to confirm that the operation meets some intended criteria.</summary>
      <param name="operationDescription">The operation being examined. Use for examination only. If the operation description is modified, the results are undefined.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationContractGenerationExtension">
      <summary>Defines the methods called during contract generation that can be used to modify the generated code for an operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation(System.ServiceModel.Description.OperationContractGenerationContext)">
      <summary>Implement to modify the code document object model prior to the contract generation process.</summary>
      <param name="context">The working context that contains the <see cref="N:System.CodeDom" /> types necessary to modify the generated operation.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IPolicyExportExtension">
      <summary>Implement <see cref="T:System.ServiceModel.Description.IPolicyExportExtension" /> to insert custom binding policy assertions in the Web Services Description Language (WSDL) information.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Implement to include for exporting a custom policy assertion about bindings.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IPolicyImportExtension">
      <summary>Defines a method for objects that import custom policy assertions about bindings.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Defines a method that can import custom policy assertions and add implementing binding elements.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> object in use.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IServiceBehavior">
      <summary>Provides a mechanism to modify or insert custom extensions across an entire service, including the <see cref="T:System.ServiceModel.ServiceHostBase" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Provides the ability to pass custom data to binding elements to support the contract implementation.</summary>
      <param name="serviceDescription">The service description of the service.</param>
      <param name="serviceHostBase">The host of the service.</param>
      <param name="endpoints">The service endpoints.</param>
      <param name="bindingParameters">Custom objects to which binding elements have access.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The host that is currently being built.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host that is currently being constructed.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IServiceContractGenerationExtension">
      <summary>Defines the methods called during contract generation that can be used to modify the generated code for a service contract.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract(System.ServiceModel.Description.ServiceContractGenerationContext)">
      <summary>Implement to modify the code document object model prior to the contract generation process.</summary>
      <param name="context">The code generated context to use to modify the code document prior to generation.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IWsdlExportExtension">
      <summary>Defines endpoint or contract behaviors that can export custom metadata.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">Provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the endpoint information.</param>
      <param name="context">Provides mappings from exported WSDL elements to the endpoint description.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IWsdlImportExtension">
      <summary>Implement and attach to a <see cref="T:System.ServiceModel.Description.WsdlImporter" /> object to control how the importer maps Web Services Description Language (WSDL) parts to those of a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Called prior to importing metadata documents.</summary>
      <param name="wsdlDocuments">The service descriptions to modify.</param>
      <param name="xmlSchemas">The schema collection to be used when importing.</param>
      <param name="policy">The policy assertions used when importing.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlImportExtension.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Called when importing a contract.</summary>
      <param name="importer">The importer.</param>
      <param name="context">The import context to be modified.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Called when importing an endpoint.</summary>
      <param name="importer">The importer.</param>
      <param name="context">The import context to modify.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ListenUriMode">
      <summary>Indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ListenUriMode.Explicit">
      <summary>Uses the <see cref="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" /> exactly as provided. This is the default value.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ListenUriMode.Unique">
      <summary>Specifies that the transport should use a transport-specific mechanism to ensure that the <see cref="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri" /> is unique.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Represents the body of a SOAP message.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessageBodyDescription" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Gets the parts for the body of the SOAP message.</summary>
      <returns>The body parts that you can inspect or modify.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Gets or sets the portion of the SOAP message that contains the return value.</summary>
      <returns>The return value, if any.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Gets or sets the name of the wrapper element inside the SOAP body element if there is one.</summary>
      <returns>The wrapper element if there is one.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Gets or sets the namespace of the wrapper element in the SOAP body if there is one.</summary>
      <returns>The namespace of the wrapper element if there is one.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Represents the description of a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessageDescription" /> class with a specified action and direction.</summary>
      <param name="action">The action parameter of the SOAP message that identifies the intent of the message.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> if the message is incoming or <see cref="F:System.ServiceModel.Description.MessageDirection.Output" /> if the message is outgoing.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="direction" /> is neither <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> or <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Gets or sets the action parameter of the SOAP message that identifies the intent of the message.</summary>
      <returns>A <see cref="T:System.String" /> that contains the action URI.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Gets the body of the SOAP message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> that contains the body of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Gets the direction that indicates whether the message is incoming or outgoing.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessageDirection" /> that indicates whether the message is incoming to or outgoing from the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.HasProtectionLevel">
      <summary>Gets a value that indicates whether the <see cref="P:System.ServiceModel.Description.MessageDescription.ProtectionLevel" /> has been set.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.Description.MessageDescription.ProtectionLevel" /> has been set; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Headers">
      <summary>Gets the description of the headers of the SOAP message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection" /> that contains descriptions of the headers of the SOAP message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Gets or sets a type that identifies the type of message contract.</summary>
      <returns>A <see cref="T:System.Type" /> that identifies the type of message contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Properties">
      <summary>Gets a description of the properties of the SOAP message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection" /> that contains the descriptions of the properties of the SOAP message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.ProtectionLevel">
      <summary>Gets or sets the security services required for the message. </summary>
      <returns>The value of <see cref="T:System.Net.Security.ProtectionLevel" /> that specified the security services required for the message.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is not valid value for <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Provides a collection that is used to store descriptions of the messages that make up an operation that belongs to a contract.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Finds and returns the first message description in a collection for a message with a specified action.</summary>
      <returns>The first <see cref="T:System.ServiceModel.Description.MessageDescription" /> from the collection whose message has the specified <paramref name="action" /> and null if no matching <paramref name="action" /> is found.</returns>
      <param name="action">The action of the message being found.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Finds and returns all of the message descriptions in a collection whose messages have a specified action.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> that contains the collection message descriptions from the current collection whose messages have the specified <paramref name="action" />. If no matching <see cref="T:System.ServiceModel.Description.MessageDescription" /> objects are found, an empty collection is returned.</returns>
      <param name="action">The action of the messages being found.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Specifies the direction of the message.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>The message is incoming.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>The message is outgoing.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescription">
      <summary>Represents a SOAP message header.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> class with a specified qualified name.</summary>
      <param name="name">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Actor">
      <summary>Gets or sets the intended recipient of the message header.</summary>
      <returns>A URI that indicates the intended recipient of the message header.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand">
      <summary>Gets or sets a value indicating if the header must be understood according to the SOAP 1.1 and 1.2 specification..</summary>
      <returns>true if processing the message header is mandatory; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Relay">
      <summary>Gets a value that indicates whether the header should be relayed.</summary>
      <returns>true if the message header can be relayed; otherwise, false. The default is false according to the SOAP 1.1 specification.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.TypedHeader">
      <summary>Gets or sets a value that indicates whether the message header is a message contract header.</summary>
      <returns>true if the message header is a message contract header; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessageHeaderDescription)">
      <summary>When called by a derived class, returns the <see cref="T:System.Xml.XmlQualifiedName" /> of the message header.</summary>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the message header.</returns>
      <param name="item">The <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> to locate.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Represents a description of a SOAP message part.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> class. </summary>
      <param name="name">The XML name of the message part.</param>
      <param name="ns">The XML namespace of the message part.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.HasProtectionLevel">
      <summary>Gets a value that indicates whether the message part has a value for the <see cref="P:System.ServiceModel.Description.MessagePartDescription.ProtectionLevel" /> property.</summary>
      <returns>true if a <see cref="T:System.Net.Security.ProtectionLevel" /> has been set for this message part; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Gets or sets the index of the message part.</summary>
      <returns>The index of the message part.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Gets or sets the member information for the message part.</summary>
      <returns>The member information for this message part.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Multiple">
      <summary>Gets or sets a value that controls whether the message part can occur more than once in the message.</summary>
      <returns>true if there can be more than one; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Gets or sets the name of the message part.</summary>
      <returns>The name of the message part.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Gets or sets the namespace of the message part.</summary>
      <returns>The namespace of the message part.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.ProtectionLevel">
      <summary>Gets or sets the <see cref="T:System.Net.Security.ProtectionLevel" /> of the message part.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> of the message part.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Gets or sets the type of the message part.</summary>
      <returns>The type of the message part.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>When called by a derived class, returns the <see cref="T:System.Xml.XmlQualifiedName" /> of the <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">The <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> to locate.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescription">
      <summary>Represents a message property specified by the <see cref="T:System.ServiceModel.MessagePropertyAttribute" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> class. </summary>
      <param name="name">The name of the property.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePropertyDescription)">
      <summary>Returns an <see cref="T:System.Xml.XmlQualifiedName" /> for a <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</returns>
      <param name="item">The <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> to locate.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataConversionError">
      <summary>Represents an error or warning event that occurred during the use of a <see cref="T:System.ServiceModel.Description.MetadataExporter" /> or <see cref="T:System.ServiceModel.Description.MetadataImporter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataConversionError.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> class using the specified message. </summary>
      <param name="message">The error or warning message.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataConversionError.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> class using the specified message and <paramref name="isWarning" /> value. </summary>
      <param name="message">The message for the warning or error.</param>
      <param name="isWarning">Whether the <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> is an error or a warning.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataConversionError.Equals(System.Object)">
      <summary>Returns a value that indicates whether two <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects have value equality.</summary>
      <returns>true if the two <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects have value equality; otherwise, false.</returns>
      <param name="obj">The object with which this object is compared.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataConversionError.GetHashCode">
      <summary>Returns a value that serves as a hash function for a <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> object.</summary>
      <returns>A value suitable for use in hashing algorithms and data structures, such as a hash table.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataConversionError.IsWarning">
      <summary>Gets a value that indicates whether the <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> is a warning or an error.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> is to be considered a warning; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataConversionError.Message">
      <summary>Gets the error or warning message.</summary>
      <returns>The message for the <see cref="T:System.ServiceModel.Description.MetadataConversionError" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataExchangeBindings">
      <summary>Used to create system-provided bindings for WS-Transfer metadata exchange using the <see cref="T:System.ServiceModel.Description.IMetadataExchange" /> contract.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeBindings.CreateMexHttpBinding">
      <summary>Returns a <see cref="T:System.ServiceModel.WSHttpBinding" /> with security disabled.</summary>
      <returns>A <see cref="T:System.ServiceModel.WSHttpBinding" /> with security disabled. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeBindings.CreateMexHttpsBinding">
      <summary>Returns a <see cref="T:System.ServiceModel.WSHttpBinding" /> that supports transport-level security.</summary>
      <returns>A <see cref="T:System.ServiceModel.WSHttpBinding" /> that supports transport-level security.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeBindings.CreateMexNamedPipeBinding">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.CustomBinding" /> with a <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.CustomBinding" /> with a <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeBindings.CreateMexTcpBinding">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.CustomBinding" /> with a <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.CustomBinding" /> with a <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataExchangeClient">
      <summary>Downloads service metadata.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> class using the specified binding.</summary>
      <param name="mexBinding">The binding to use when retrieving metadata using WS-Transfer.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> class. </summary>
      <param name="address">The metadata address.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> class. </summary>
      <param name="endpointConfigurationName">The name of the endpoint configuration information to use when downloading metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> class. </summary>
      <param name="address">The address of the metadata.</param>
      <param name="mode">The mode to use when downloading the metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous method call that returns a <see cref="T:System.ServiceModel.Description.MetadataSet" />.</summary>
      <returns>The metadata.</returns>
      <param name="callback">The asynchronous callback delegate invoked when the call is complete.</param>
      <param name="asyncState">The state associated with the asynchronous call.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous method call that returns a <see cref="T:System.ServiceModel.Description.MetadataSet" /> using the specified address, callback, and asynchronous state.</summary>
      <returns>The metadata obtained from the specified <paramref name="address" />.</returns>
      <param name="address">The address of the metadata.</param>
      <param name="callback">The asynchronous callback delegate invoked when the call is complete.</param>
      <param name="asyncState">The state associated with the asynchronous call.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous method call that returns a <see cref="T:System.ServiceModel.Description.MetadataSet" /> using the specified address, callback, asynchronous state, and download mechanism.</summary>
      <returns>The metadata obtained from the specified <paramref name="address" />.</returns>
      <param name="address">The address of the metadata.</param>
      <param name="mode">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> value to use when downloading the metadata.</param>
      <param name="callback">The asynchronous callback delegate invoked when the call is complete.</param>
      <param name="asyncState">The state associated with the asynchronous call.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(System.IAsyncResult)">
      <summary>Ends an asynchronous method call that returns a <see cref="T:System.ServiceModel.Description.MetadataSet" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MetadataSet" /> that contains the downloaded metadata.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> object that is received from a call to the <see cref="Overload:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)">
      <summary>When overridden in a derived class, returns the channel factory that is used to make the WS-Transfer metadata request.</summary>
      <returns>A <see cref="T:System.ServiceModel.ChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IRequestChannel" /> that makes the WS-Transfer metadata request.</returns>
      <param name="metadataAddress">The metadata address.</param>
      <param name="dialect">The dialect of the metadata.</param>
      <param name="identifier">The identifier of the metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.MetadataSet" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MetadataSet" /> that contains the downloaded metadata.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress)">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.MetadataSet" /> from the specified address.</summary>
      <returns>The metadata located at the <paramref name="address" />.</returns>
      <param name="address">The address from which to download the metadata.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.MetadataSet" /> from the specified address using the specified download mode.</summary>
      <returns>The metadata that is downloaded.</returns>
      <param name="address">The address from which to download the metadata.</param>
      <param name="mode">The download mechanism to use.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(System.Uri,System.String,System.String)">
      <summary>When overridden in a derived class, returns the <see cref="T:System.Net.HttpWebRequest" /> used to make HTTP/GET metadata requests.</summary>
      <returns>The internal <see cref="T:System.Net.HttpWebRequest" /> used to make HTTP GET metadata requests.</returns>
      <param name="location">The location of the metadata.</param>
      <param name="dialect">The dialect of the metadata.</param>
      <param name="identifier">The identifier of the metadata.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials">
      <summary>Gets or sets the credentials used to make an HTTP/GET request.</summary>
      <returns>The <see cref="T:System.Net.ICredentials" /> object used to establish the request credentials.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences">
      <summary>Gets or sets the maximum number of references to metadata that the <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> downloads.</summary>
      <returns>The number of metadata references the <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> resolves. The default is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout">
      <summary>Gets or sets the period of time within which the metadata must be downloaded before an exception is thrown.</summary>
      <returns>The period within which the metadata must be downloaded; the default is 1 minute.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences">
      <summary>Gets or sets a value that controls whether references to metadata are resolved.</summary>
      <returns>true if references to metadata are resolved; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials">
      <summary>Gets or sets the client security credentials used to make a WS-Transfer metadata request.</summary>
      <returns>The client security credentials used to make a WS-Transfer metadata request.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataExchangeClientMode">
      <summary>Specifies the exchange mode used to obtain metadata.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange">
      <summary>A WS-Transfer Get request is used.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MetadataExchangeClientMode.HttpGet">
      <summary>An HTTP GET request is used.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataExporter">
      <summary>Exports service description information into metadata.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExporter.Errors">
      <summary>Gets a collection of errors that occurred during metadata export.</summary>
      <returns>The export errors that occurred.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExporter.ExportContract(System.ServiceModel.Description.ContractDescription)">
      <summary>When overridden in a derived class, exports a contract description into metadata. </summary>
      <param name="contract">The contract to export.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>When overridden in a derived class, converts an endpoint into metadata. </summary>
      <param name="endpoint">The endpoint to convert.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExporter.ExportPolicy(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Converts policy assertions into a <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> object. </summary>
      <returns>An object that contains policy assertion information for the endpoint. The policy assertions can then be embedded in a metadata document.</returns>
      <param name="endpoint">The endpoint from which to extract policy assertions.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataExporter.GetGeneratedMetadata">
      <summary>When overridden in a derived class, returns the metadata generated by a call to either <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportContract(System.ServiceModel.Description.ContractDescription)" />, <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />, or <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportPolicy(System.ServiceModel.Description.ServiceEndpoint)" />. </summary>
      <returns>An enumerable collection of <see cref="T:System.ServiceModel.Description.MetadataSection" /> objects that contain the exported metadata.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExporter.State">
      <summary>Gets a dictionary of objects used in the export of metadata.</summary>
      <returns>A dictionary of objects used by the importer to export contracts and endpoints.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataImporter">
      <summary>Imports metadata into <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporter.Errors">
      <summary>Gets a value that indicates whether there were errors importing the metadata.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts">
      <summary>When overridden in a derived class, returns a collection of contracts imported from the metadata. </summary>
      <returns>The contracts imported from the metadata.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
      <summary>When overridden in a derived class, returns all endpoints in the metadata. </summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects that are published by a service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
      <summary>Gets a dictionary of contracts by name that the importer knows about.</summary>
      <returns>A dictionary of contracts listed by XML qualified name.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
      <summary>Gets a collection of policy importers that the importer calls to process policy assertions.</summary>
      <returns>A collection of policy importers that the <see cref="T:System.ServiceModel.Description.MetadataImporter" /> uses to process policy assertions.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporter.State">
      <summary>Gets or sets a collection of objects used in the importing of metadata.</summary>
      <returns>A dictionary of objects keyed by type.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataLocation">
      <summary>Represents the address of metadata documents.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataLocation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataLocation" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataLocation.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataLocation" /> class that assigns the specified metadata location to the <see cref="P:System.ServiceModel.Description.MetadataLocation.Location" /> property. </summary>
      <param name="location">The address of the metadata documents.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataLocation.Location">
      <summary>Gets or sets the address of the metadata documents.</summary>
      <returns>The address of the metadata documents.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataReference">
      <summary>Represents a reference to a metadata document returned from a metadata exchange endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataReference" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataReference" /> class and specifies the network address and address version of the endpoint. </summary>
      <param name="address">An <see cref="T:System.ServiceModel.EndpointAddress" /> that contains the URI of the endpoint.</param>
      <param name="addressVersion">An <see cref="T:System.ServiceModel.Channels.AddressingVersion" />  that contains the WS-Addressing version implemented by the endpoint.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataReference.Address">
      <summary>Gets or sets the network address of a service that returns metadata.</summary>
      <returns>An endpoint that returns metadata.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataReference.AddressVersion">
      <summary>Gets or sets the version implemented in, or used by the endpoint.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that represents the version implemented in, or used by the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Returns an XML schema document for the metadata reference endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Reads using the supplied reader object.</summary>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> used to read with.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataReference.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Writes an XML stream with the specified writer object.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> used to write with.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataResolver">
      <summary>Retrieves and imports metadata as <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address and asynchronous state and delegate.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation. </returns>
      <param name="contracts">The contracts for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="callback">The asynchronous callback delegate invoked when the call is complete.</param>
      <param name="asyncState">The state associated with the asynchronous call.</param>
      <exception cref="T:System.ArgumentNullException">The address, contract, or callback is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, asynchronous state and delegate.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</returns>
      <param name="contracts">The contracts for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="client">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</param>
      <param name="callback">The asynchronous callback delegate invoked when the call is complete.</param>
      <param name="asyncState">The state associated with the asynchronous call.</param>
      <exception cref="T:System.ArgumentNullException">The address, contract, client, or callback is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> value, asynchronous state and delegate.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</returns>
      <param name="contracts">The contracts for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="mode">The mode of retrieval.</param>
      <param name="callback">The asynchronous callback delegate invoked when the call is complete.</param>
      <param name="asyncState">The state associated with the asynchronous call.</param>
      <exception cref="T:System.ArgumentNullException">The address, contract, or callback is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, asynchronous state, and delegate.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</returns>
      <param name="contracts">The contracts for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="mode">The mode of retrieval.</param>
      <param name="client">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</param>
      <param name="callback">The asynchronous callback delegate invoked when the call is complete.</param>
      <param name="asyncState">The state associated with the asynchronous call.</param>
      <exception cref="T:System.ArgumentNullException">The address, contract, or callback is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract using the specified address and asynchronous state and delegate.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</returns>
      <param name="contract">The contract for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="callback">The asynchronous callback delegate invoked when the call is complete.</param>
      <param name="asyncState">The state associated with the asynchronous call.</param>
      <exception cref="T:System.ArgumentNullException">The address, contract, or callback is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, asynchronous state and delegate.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</returns>
      <param name="contract">The contract for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="mode">The mode of retrieval.</param>
      <param name="callback">The asynchronous callback delegate invoked when the call is complete.</param>
      <param name="asyncState">The state associated with the asynchronous call.</param>
      <exception cref="T:System.ArgumentNullException">The address, contract, or callback is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)">
      <summary>Completes an asynchronous call to resolve metadata into a collection of endpoints.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the endpoints contained in the metadata.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> object that was received from a call to the <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)">
      <summary>Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified metadata address.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</returns>
      <param name="contracts">The contracts for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <exception cref="T:System.ArgumentNullException">The address or contracts collection is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)">
      <summary>Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified metadata address and <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</returns>
      <param name="contracts">The contracts for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="client">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</param>
      <exception cref="T:System.ArgumentNullException">The address, contracts collection, or client is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)">
      <summary>Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified address and transfer mode.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</returns>
      <param name="contracts">The contracts for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="mode">The mode of retrieval.</param>
      <exception cref="T:System.ArgumentNullException">The address or contracts collection is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)">
      <summary>Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified address, transfer mode, and transfer client.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</returns>
      <param name="contracts">The contracts for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="mode">The mode of retrieval.</param>
      <param name="client">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</param>
      <exception cref="T:System.ArgumentNullException">The address, contracts collection, or client is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)">
      <summary>Downloads and resolves a metadata address into a collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for a specified contract at a specified address.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</returns>
      <param name="contract">The contracts for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <exception cref="T:System.ArgumentNullException">The address or the contract is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)">
      <summary>Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract using the specified address and transfer mode.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</returns>
      <param name="contract">The contract for which to download and resolve metadata.</param>
      <param name="address">The metadata address.</param>
      <param name="mode">The mode of retrieval.</param>
      <exception cref="T:System.ArgumentNullException">The address or contract is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataSection">
      <summary>Represents XML metadata or references to XML metadata.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataSection" /> class with no dialect, identifier, or XML metadata.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.#ctor(System.String,System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataSection" /> class using the specified dialect, identifier, and XML metadata.</summary>
      <param name="dialect">The dialect of the metadata.</param>
      <param name="identifier">An identifier for the metadata.</param>
      <param name="metadata">The XML metadata.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.Attributes">
      <summary>Gets a collection of XML attributes that you can use to add or remove attributes extensions to the metadata.</summary>
      <returns>The collection of XML attributes for the <see cref="T:System.ServiceModel.Description.MetadataSection" />. The default collection is empty.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.CreateFromPolicy(System.Xml.XmlElement,System.String)">
      <summary>Creates a <see cref="T:System.ServiceModel.Description.MetadataSection" /> from the specified policy information.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.MetadataSection" /> that contains the specified policy expression with the specified identifier.</returns>
      <param name="policy">An XML representation of a policy as defined in WS-Policy.</param>
      <param name="identifier">An identifier for the policy.</param>
      <exception cref="T:System.ArgumentException">The XML element is not a policy element.</exception>
      <exception cref="T:System.ArgumentNullException">The policy is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.CreateFromSchema(System.Xml.Schema.XmlSchema)">
      <summary>Creates a <see cref="T:System.ServiceModel.Description.MetadataSection" /> from the specified <see cref="T:System.Xml.Schema.XmlSchema" /> object.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.MetadataSection" /> containing the specified XML schema.</returns>
      <param name="schema">An XML Schema document.</param>
      <exception cref="T:System.ArgumentNullException">The schema is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSection.CreateFromServiceDescription(System.Web.Services.Description.ServiceDescription)">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.MetadataSection" /> that contains the specified <see cref="T:System.ServiceModel.Description.ServiceDescription" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.MetadataSection" /> that contains the specified <see cref="T:System.ServiceModel.Description.ServiceDescription" />.</returns>
      <param name="serviceDescription">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> used to create a <see cref="T:System.ServiceModel.Description.MetadataSection" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="serviceDescription" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.Dialect">
      <summary>Gets or sets a value that indicates the type of metadata.</summary>
      <returns>The dialect for the metadata. The default is null.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.Identifier">
      <summary>Gets or sets an identifier for the metadata.</summary>
      <returns>The identifier for the metadata. The default is null.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.Metadata">
      <summary>Gets or sets the contained metadata object.</summary>
      <returns>The metadata contents for this <see cref="T:System.ServiceModel.Description.MetadataSection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.MetadataExchangeDialect">
      <summary>Contains the value of the metadata exchange dialect.</summary>
      <returns>The dialect for a WS-Metadata Exchange document.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.PolicyDialect">
      <summary>Contains the value of the WS-Policy dialect.</summary>
      <returns>The dialect for a WS-Policy policy expression.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.ServiceDescriptionDialect">
      <summary>Contains the value of the Web Services Description Language (WSDL) dialect.</summary>
      <returns>The dialect for a WSDL document.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSection.XmlSchemaDialect">
      <summary>Contains the value of the XML Schema dialect.</summary>
      <returns>The dialect for an XML Schema document.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataSet">
      <summary>Represents a serializable collection of service metadata in XML form.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataSet" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.MetadataSection})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MetadataSet" /> class that contains the specified collection of <see cref="T:System.ServiceModel.Description.MetadataSection" /> objects.</summary>
      <param name="sections">The metadata values that the <see cref="T:System.ServiceModel.Description.MetadataSet" /> is to contain.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSet.Attributes">
      <summary>Gets a collection of <see cref="T:System.Xml.XmlAttribute" /> objects that appear in the serialized form of the <see cref="T:System.ServiceModel.Description.MetadataSet" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlAttribute" /> objects that appear in the serialized form of the <see cref="T:System.ServiceModel.Description.MetadataSet" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataSet.MetadataSections">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Description.MetadataSection" /> objects that represents the metadata.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.MetadataSection" /> objects that represents the metadata.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.ReadFrom(System.Xml.XmlReader)">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.MetadataSet" /> from the specified <see cref="T:System.Xml.XmlReader" /> object.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.MetadataSet" /> that contains all the metadata present in the XML stream.</returns>
      <param name="reader">The reader to read in XML.</param>
      <exception cref="T:System.ArgumentNullException">The reader is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method to provide serialization support.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method to support deserialization from XML.</summary>
      <param name="reader">The reader to use when reading XML.</param>
      <exception cref="T:System.ArgumentNullException">The reader is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method to support serialization to XML.</summary>
      <param name="writer">The writer to use when writing XML.</param>
      <exception cref="T:System.ArgumentNullException">The writer is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataSet.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Description.MetadataSet" /> to XML using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The writer to use to write the XML.</param>
      <exception cref="T:System.ArgumentNullException">The writer is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.MustUnderstandBehavior">
      <summary>Instructs Windows Communication Foundation (WCF) to disable the mandatory processing of headers not in the <see cref="P:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders" /> collection that must be understood according to the SOAP 1.1 and 1.2 specifications.  </summary>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MustUnderstandBehavior" /> class using the specified value. </summary>
      <param name="validate">A value that specifies whether to enforce validation of mustUnderstand headers.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Supports behavior functionality.</summary>
      <param name="serviceEndpoint">The endpoint to which the behavior applies.</param>
      <param name="bindingParameters">The binding parameters for the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Assigns the value of <see cref="P:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand" /> to the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand" /> property.</summary>
      <param name="serviceEndpoint">The endpoint to which the behavior applies.</param>
      <param name="behavior">The client runtime to set.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Assigns the value of <see cref="P:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand" /> to the <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand" /> property.</summary>
      <param name="serviceEndpoint">The endpoint to which the behavior applies.</param>
      <param name="endpointDispatcher">The dispatcher to set.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Supports behavior functionality.</summary>
      <param name="serviceEndpoint">The endpoint to validate.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand">
      <summary>Gets or sets a value that specifies whether to ensure that a header is understood according to the SOAP 1.1 and 1.2 specifications.</summary>
      <returns>true if the header must be correctly processed or a fault is thrown; otherwise, false. The default is false. </returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationContractGenerationContext">
      <summary>Passed to the <see cref="M:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation(System.ServiceModel.Description.OperationContractGenerationContext)" /> method to enable the modification of an operation contract and its context prior to generating code.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ServiceContractGenerationContext,System.ServiceModel.Description.OperationDescription,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" /> class using the specified contract generator, contract context, operation description, code type declaration, and method. </summary>
      <param name="serviceContractGenerator">The service contract generator that generates the code.</param>
      <param name="contract">The contract and its generation context.</param>
      <param name="operation">The operation description for the operation to be generated.</param>
      <param name="declaringType">The declaring code type.</param>
      <param name="method">The method to be generated.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ServiceContractGenerationContext,System.ServiceModel.Description.OperationDescription,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" /> class. </summary>
      <param name="serviceContractGenerator">The service contract generator that generates the code.</param>
      <param name="contract">The contract and its generation context.</param>
      <param name="operation">The operation description for the operation to be generated.</param>
      <param name="declaringType">The declaring code type.</param>
      <param name="syncMethod">The synchronous method.</param>
      <param name="beginMethod">The asynchronous begin method.</param>
      <param name="endMethod">The asynchronous end method.</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.BeginMethod">
      <summary>Gets the <see cref="T:System.CodeDom.CodeMemberMethod" /> for the asynchronous begin operation.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeMemberMethod" /> for the asynchronous begin operation. Returns null if the operation is a synchronous operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.Contract">
      <summary>Gets the code generation context for the service contract.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceContractGenerationContext" /> for the current operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.DeclaringType">
      <summary>Gets the declaring type for the current operation.</summary>
      <returns>The declaring type for the current operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.EndMethod">
      <summary>Gets the asynchronous end operation declaration.</summary>
      <returns>The asynchronous end operation. Returns null if the operation is a synchronous operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.IsAsync">
      <summary>Gets a value that indicates whether asynchronous methods are generated for the current operation.</summary>
      <returns>true if the operation is asynchronous; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.Operation">
      <summary>Gets the <see cref="T:System.ServiceModel.Description.OperationDescription" /> for the current operation.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.OperationDescription" /> for the current operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.ServiceContractGenerator">
      <summary>Gets the <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> that generates the current operation.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> that generates the current operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationContractGenerationContext.SyncMethod">
      <summary>Gets the <see cref="T:System.CodeDom.CodeMemberMethod" /> for the synchronous operation.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeMemberMethod" /> for the synchronous operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Represents the description of a contract operation that provides a description of the messages that make up the operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.OperationDescription" /> class with a specified name and contract description.</summary>
      <param name="name">The name of the operation description.</param>
      <param name="declaringContract">The <see cref="T:System.ServiceModel.Description.ContractDescription" /> used to initialize the operation description.</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>Gets or sets the begin method of the operation.</summary>
      <returns>The <see cref="T:System.Reflection.MethodInfo" /> that provides access to the attributes and metadata of the method.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Behaviors">
      <summary>Gets or sets the operation behaviors associated with the operation.</summary>
      <returns>A <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> that contains the <see cref="T:System.ServiceModel.Description.IOperationBehavior" /> objects associated with the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Gets or sets the contract to which the operation belongs.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>Gets or sets the end method of the operation.</summary>
      <returns>The <see cref="T:System.Reflection.MethodInfo" /> that provides access to the attributes and metadata of the method.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Gets the descriptions of the faults associated with the operation description.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" /> that contains details about the faults associated with the operation description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.HasProtectionLevel">
      <summary>Gets a value that indicates whether the operation has had a protection level set.</summary>
      <returns>true if the protection level has been set; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsInitiating">
      <summary>Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists). </summary>
      <returns>true if the operation is permitted to initiate a session on the server, otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Gets or sets a value that indicates whether an operation returns a reply message.</summary>
      <returns>true if this method receives a request message and returns no reply message; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsTerminating">
      <summary>Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</summary>
      <returns>true if the operation causes the server to close the session, otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Gets the known types associated with the operation description.</summary>
      <returns>The collection of known types associated with the operation description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Gets or sets the descriptions of the messages that make up the operation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> that contains descriptions of the messages that makes up the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Gets or sets the name of the operation description.</summary>
      <returns>The name of the operation description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.ProtectionLevel">
      <summary>Gets or sets the protection level for the operation.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> for the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>Gets or sets the service synchronization method of the operation description.</summary>
      <returns>The <see cref="T:System.Reflection.MethodInfo" /> that provides access the attributes and metadata of the method.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Represents a collection that contains operation descriptions.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Returns an operation description with a specified name from the collection of operation descriptions.</summary>
      <returns>An <see cref="T:System.ServiceModel.Description.OperationDescription" /> with the name specified.</returns>
      <param name="name">The name of the operation.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Returns a collection of all the operation descriptions from the collection that have the specified name.</summary>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Description.OperationDescription" /> that contains the operation descriptions with the specified name.</returns>
      <param name="name">The name of the operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Inserts an element into the operation description collection at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Replaces the operation description element in the collection at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.PolicyAssertionCollection">
      <summary>Contains policy assertions.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.PolicyAssertionCollection" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlElement})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.PolicyAssertionCollection" /> class using the specified <see cref="T:System.Xml.XmlElement" /> objects. </summary>
      <param name="elements">The policy assertions the collection is to contain.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.Contains(System.String,System.String)">
      <summary>Returns a value that indicates whether the collection contains the specified policy assertion.</summary>
      <returns>true if the collection contains the specified policy assertion; otherwise, false.</returns>
      <param name="localName">The name of the policy assertion.</param>
      <param name="namespaceUri">The namespace of the policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.Find(System.String,System.String)">
      <summary>Returns the specified policy assertion.</summary>
      <returns>The specified policy assertion, or null if the assertion cannot be found.</returns>
      <param name="localName">The local name of the policy assertion.</param>
      <param name="namespaceUri">The namespace of the policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.FindAll(System.String,System.String)">
      <summary>Returns all specified policy assertions.</summary>
      <returns>A collection of all policy assertions that match the specification, or an empty collection.</returns>
      <param name="localName">The local name of the policy assertion.</param>
      <param name="namespaceUri">The namespace of the policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.InsertItem(System.Int32,System.Xml.XmlElement)">
      <summary>Inserts a specified policy assertion into the collection at the specified index.</summary>
      <param name="index">The index at which to insert <paramref name="item" />.</param>
      <param name="item">The policy assertion to insert at <paramref name="index" />. The assertion must not be null.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.Remove(System.String,System.String)">
      <summary>Removes the specified policy assertion from the collection.</summary>
      <returns>The policy assertion that was removed from the collection or null if the policy assertion was not in the collection.</returns>
      <param name="localName">The local name of the policy assertion.</param>
      <param name="namespaceUri">The namespace of the policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.RemoveAll(System.String,System.String)">
      <summary>Removes all policy assertions that match the specified name and namespace.</summary>
      <returns>A collection of all removed policy assertions or an empty collection if no assertions were found that match the specified name and namespace.</returns>
      <param name="localName">The local name of the policy assertion.</param>
      <param name="namespaceUri">The namespace of the policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyAssertionCollection.SetItem(System.Int32,System.Xml.XmlElement)">
      <summary>Replaces the policy assertion at a specified index with a specified policy assertion.</summary>
      <param name="index">The index that contains the assertion to replace.</param>
      <param name="item">The policy assertion to replace the assertion already at <paramref name="index" />. The assertion must not be null.</param>
    </member>
    <member name="T:System.ServiceModel.Description.PolicyConversionContext">
      <summary>Defines a class used to retrieve binding assertions in metadata and to attach implementing binding elements at the appropriate scope.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> class. </summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> for the policy context.</param>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyConversionContext.BindingElements">
      <summary>Gets a collection of binding elements to which custom binding elements that implement policy assertions are added.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the binding elements for an endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyConversionContext.Contract">
      <summary>Gets the contract for the endpoint.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ContractDescription" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions">
      <summary>Gets a collection of policy assertions from metadata.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.Xml.XmlElement" /> that contains binding policy assertions.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.GetFaultBindingAssertions(System.ServiceModel.Description.FaultDescription)">
      <summary>Returns a collection of policy assertions for the specified SOAP fault.</summary>
      <returns>A collection of policy assertions for the specified SOAP fault.</returns>
      <param name="fault">The <see cref="T:System.ServiceModel.Description.FaultDescription" /> object for which policy assertions are to be added or for which bindings are to be configured..</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions(System.ServiceModel.Description.MessageDescription)">
      <summary>Gets a collection of policy assertions for a message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessageDescription" /> for which policy assertions are to be added or for which bindings are to be configured.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Description.MessageDescription" /> for which there are binding assertions.</param>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions(System.ServiceModel.Description.OperationDescription)">
      <summary>Returns a collection of policy assertions for the specified operation.</summary>
      <returns>The policy assertions for the operation.</returns>
      <param name="operation">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> policy assertions are to be added or for which bindings are to be configured.</param>
    </member>
    <member name="T:System.ServiceModel.Description.PrincipalPermissionMode">
      <summary>Sets the mode for authorization checks when using the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> to control access to a method. </summary>
    </member>
    <member name="F:System.ServiceModel.Description.PrincipalPermissionMode.None">
      <summary>
        <see cref="P:System.Threading.Thread.CurrentPrincipal" /> is not set.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups">
      <summary>
        <see cref="P:System.Threading.Thread.CurrentPrincipal" /> is set based on Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />). If the user identity is not associated with a Windows account, anonymous Windows is used. </summary>
    </member>
    <member name="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles">
      <summary>
        <see cref="P:System.Threading.Thread.CurrentPrincipal" /> is set based on the ASP.NET role provider (<see cref="T:System.Web.Security.RoleProvider" />). </summary>
    </member>
    <member name="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom">
      <summary>Enables the user to specify a custom <see cref="T:System.Security.Principal.IPrincipal" /> class for <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceAuthorizationBehavior">
      <summary>Provides properties related to service authorization behavior.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies">
      <summary>Gets or sets a collection of external authorization policies. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />s.</returns>
      <exception cref="T:System.InvalidOperationException">Behavior is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations">
      <summary>Gets or sets a value that indicates whether the service performs impersonation for all the operations that it supports. </summary>
      <returns>true if the service performs impersonation for all the operations that it supports; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">Behavior is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode">
      <summary>Gets or sets the principal permission mode. </summary>
      <returns>The <see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider">
      <summary>Gets or sets a custom role provider.</summary>
      <returns>The <see cref="T:System.Web.Security.RoleProvider" />.</returns>
      <exception cref="T:System.InvalidOperationException">Behavior is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager">
      <summary>Gets or sets the service authorization manager.</summary>
      <returns>The <see cref="T:System.ServiceModel.ServiceAuthorizationManager" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>An explicit interface implementation that adds parameters to configure the binding.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" />.</param>
      <param name="serviceHostBase">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
      <param name="endpoints">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />s.</param>
      <param name="parameters">A <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>An explicit interface implementation that adds dispatch behaviors to configure the binding.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" />.</param>
      <param name="serviceHostBase">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Validates the behavior.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" />.</param>
      <param name="serviceHostBase">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceContractGenerationContext">
      <summary>Passed to the <see cref="M:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract(System.ServiceModel.Description.ServiceContractGenerationContext)" /> method to enable the modification of a service contract and its context prior to generating code.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ContractDescription,System.CodeDom.CodeTypeDeclaration)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceContractGenerationContext" /> class using the specified contract generator, contract description, and contract code type declaration. </summary>
      <param name="serviceContractGenerator">The generator that generates the code for the contract.</param>
      <param name="contract">The contract description for the contract to be generated.</param>
      <param name="contractType">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for the contract code to be generated.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ContractDescription,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceContractGenerationContext" /> class using the specified contract generator, contract description, and contract code type declaration. </summary>
      <param name="serviceContractGenerator">The generator that generates the code for the contract.</param>
      <param name="contract">The contract description for the contract to be generated.</param>
      <param name="contractType">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for the contract code to be generated.</param>
      <param name="duplexCallbackType">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for the duplex contract code to be generated.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.Contract">
      <summary>Gets the <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the current contract.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the current contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.ContractType">
      <summary>Gets the <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for the current contract.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for the current contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.DuplexCallbackType">
      <summary>Gets the <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for the duplex callback contract on the service contract.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for the duplex callback contract on the service contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.Operations">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" /> objects that represent the contract operations.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" /> objects that represent the contract operations.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerationContext.ServiceContractGenerator">
      <summary>Gets the <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> that is to generate the contract.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> that is to generate the contract.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceContractGenerationOptions">
      <summary>Represents the contract generation options available using the <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.None">
      <summary>No options specified.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.AsynchronousMethods">
      <summary>Generates asynchronous methods for operations in addition to synchronous versions.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.ChannelInterface">
      <summary>Generates an interface that derives from the contract interface and <see cref="T:System.ServiceModel.IClientChannel" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.InternalTypes">
      <summary>Causes all types to be marked internal.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.ClientClass">
      <summary>Generates a Windows Communication Foundation (WCF) client class that extends <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.TypedMessages">
      <summary>Generate message contracts.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceContractGenerationOptions.EventBasedAsynchronousMethods">
      <summary>Generates event-based asynchronous methods for operations in addition to synchronous versions.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceContractGenerator">
      <summary>The <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> type generates service contract code and binding configurations from <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> description objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> class with a new <see cref="T:System.CodeDom.CodeCompileUnit" /> instance.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.#ctor(System.CodeDom.CodeCompileUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> class with the specified <see cref="T:System.CodeDom.CodeCompileUnit" /> instance.</summary>
      <param name="targetCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> instance to use to generate code.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.#ctor(System.CodeDom.CodeCompileUnit,System.Configuration.Configuration)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> class with the specified <see cref="T:System.CodeDom.CodeCompileUnit" /> instance and the specified <see cref="T:System.Configuration.Configuration" /> instance.</summary>
      <param name="targetCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> instance to use to generate code.</param>
      <param name="targetConfig">The <see cref="T:System.Configuration.Configuration" /> instance to use to generate binding configurations.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.#ctor(System.Configuration.Configuration)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> class with the specified <see cref="T:System.Configuration.Configuration" /> instance.</summary>
      <param name="targetConfig">The <see cref="T:System.Configuration.Configuration" /> instance to use to generate binding configurations.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.Configuration">
      <summary>Gets the <see cref="T:System.Configuration.Configuration" /> instance that contains the generated binding configurations.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> instance that contains the generated endpoint configurations.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.Errors">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects generated when generating service contract code and endpoint configurations.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.GenerateBinding(System.ServiceModel.Channels.Binding,System.String@,System.String@)">
      <summary>Generates a binding configuration for the specified <see cref="T:System.ServiceModel.Channels.Binding" /> instance.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> to use to generate the binding configuration.</param>
      <param name="bindingSectionName">The name of the generated binding section.</param>
      <param name="configurationName">The name of the generated binding configuration.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.GenerateServiceContractType(System.ServiceModel.Description.ContractDescription)">
      <summary>Generates a service contract type from the specified <see cref="T:System.ServiceModel.Description.ContractDescription" /> instance.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> instance for the generated contract type.</returns>
      <param name="contractDescription">The <see cref="T:System.ServiceModel.Description.ContractDescription" /> to use to generate the contract type.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceContractGenerator.GenerateServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement@)">
      <summary>Generates a service contract type and an endpoint configuration from the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> instance.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> instance for the generated contract type.</returns>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to use to generate the contract type.</param>
      <param name="channelElement">The generated endpoint configuration.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.NamespaceMappings">
      <summary>Gets a mapping from contract description namespaces to managed namespaces that is used when generating code.</summary>
      <returns>A mapping from contract description namespaces to managed namespaces.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.Options">
      <summary>Gets or sets options for generating service contract code.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceContractGenerationOptions" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.ReferencedTypes">
      <summary>Gets a mapping from contract descriptions to referenced contract types.  </summary>
      <returns>A mapping from contract descriptions to referenced contract types.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceContractGenerator.TargetCompileUnit">
      <summary>Gets the target <see cref="T:System.CodeDom.CodeCompileUnit" /> object for generating service contract code.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> object.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceCredentials">
      <summary>Configures a service credential. Use this class to specify the credential for the service such as an X.509 certificate. Also, use this class to specify the authentication model for various client credentials such as user name and password validation.  </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.#ctor(System.ServiceModel.Description.ServiceCredentials)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> from the specified <see cref="T:System.ServiceModel.Description.ServiceCredentials" />. </summary>
      <param name="other">The <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> instance used to initialize the new instance.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate">
      <summary>Gets the current client certificate authentication and provisioning settings for this service.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.Clone">
      <summary>Creates a copy of the current instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.CloneCore">
      <summary>Copies the essential members of the current instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager">
      <summary>Creates a token manager for this service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication">
      <summary>Gets the current issued token (for example, SAML) authentication settings for this service.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.IssuedTokenServiceCredential" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.Peer">
      <summary>Gets the current credential authentication and provisioning settings to be used by peer transport endpoints configured on the service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.PeerCredential" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication">
      <summary>Gets the current settings to be used by a secure conversation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecureConversationServiceCredential" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate">
      <summary>Gets the current certificate associated with this service.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds this instance to a binding parameter collection. This is an infrastructure method and not intended to be called directly.</summary>
      <param name="description">A description of the service.</param>
      <param name="serviceHostBase">The service host base.</param>
      <param name="endpoints">A collection of service endpoints.</param>
      <param name="parameters">A collection of parameters.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameters" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Apply the dispatch behavior. This is an infrastructure method and not intended to be called directly.</summary>
      <param name="description">The service description.</param>
      <param name="serviceHostBase">The service host base.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Validates a service description. This is an infrastructure method and not intended to be called directly.</summary>
      <param name="description">The service description.</param>
      <param name="serviceHostBase">The service host base.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication">
      <summary>Gets the current user name/password authentication settings for this service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication">
      <summary>Gets the current Windows authentication settings for this service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.WindowsServiceCredential" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceDebugBehavior">
      <summary>Enables debugging and help information features for a Windows Communication Foundation (WCF) service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDebugBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceDebugBehavior" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled">
      <summary>Gets or sets a value that controls whether Windows Communication Foundation (WCF) publishes an HTML help page at the address controlled by the <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" /> property.</summary>
      <returns>true if WCF publishes an HTML help page; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl">
      <summary>Gets or sets the location at which the HTML help file is published.</summary>
      <returns>The relative or absolute HTTP-based URL of the custom HTML help file that the user sees when the endpoint is viewed using an HTML browser.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled">
      <summary>Gets or sets a value that specifies whether Windows Communication Foundation (WCF) returns an HTML help file over HTTPS at the address controlled by the <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" /> property.</summary>
      <returns>true if an HTML help file is returned to clients making an HTTPS/GET request such as that of an HTML browser; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl">
      <summary>Gets or sets the location at which an HTML file is published for retrieval using HTTPS.</summary>
      <returns>The relative or absolute HTTPS-based URL of the custom HTML help file that the user sees when the endpoint is viewed using an HTML browser.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that specifies whether to include managed exception information in the detail of SOAP faults returned to the client for debugging purposes.</summary>
      <returns>true if Windows Communication Foundation (WCF) returns managed exception information in the SOAP faults for client debugging purposes; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> method to support the behavior.</summary>
      <param name="description"></param>
      <param name="serviceHostBase">The service host.</param>
      <param name="endpoints"></param>
      <param name="parameters"></param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method to support the behavior.</summary>
      <param name="description"></param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method to support the behavior.</summary>
      <param name="description"></param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceDescription">
      <summary>Represents a complete, in-memory description of the service, including all the endpoints for the service and specifications for their respective addresses, bindings, contracts and behaviors.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceDescription" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDescription.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceDescription" /> class from a specified enumeration of service endpoints.</summary>
      <param name="endpoints">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> used to initialize the service description.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoints" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.Behaviors">
      <summary>Gets the behaviors associated with the service.</summary>
      <returns>The <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> of type <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that contains the behaviors associated with the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.ConfigurationName">
      <summary>Gets or sets the name of the &lt;service&gt; configuration element.</summary>
      <returns>The name of the &lt;service&gt; configuration element used to configure the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.Endpoints">
      <summary>Gets the collection of endpoints from the service description.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that contains the endpoints defined for the service.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDescription.GetService(System.Object)">
      <summary>Returns a service description initialized with a specified service object.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the service object provided.</returns>
      <param name="serviceImplementation">The <see cref="T:System.Object" /> that implements the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceImplementation" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceDescription.GetService(System.Type)">
      <summary>Returns a service description initialized with a specified service type.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the service type provided.</returns>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.Name">
      <summary>Gets or sets the name of the service.</summary>
      <returns>The name of the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.Namespace">
      <summary>Gets or sets the namespace for the service.</summary>
      <returns>The namespace for the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDescription.ServiceType">
      <summary>Gets the type of the service.</summary>
      <returns>An instance of the <see cref="T:System.Type" /> that implements the service.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Represents the endpoint for a service that allows clients of the service to find and communicate with the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> class for a specified contract.</summary>
      <param name="contract">The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> class with a specified contract, binding, and address.</summary>
      <param name="contract">The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the service endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> that specifies how the service endpoint communicates with the world.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> for the service endpoint.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Gets or sets the endpoint address for the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> that specifies the location of the service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Behaviors">
      <summary>Gets the behaviors for the service endpoint.</summary>
      <returns>The <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> of type <see cref="T:System.ServiceModel.Description.IEndpointBehavior" /> that contains the behaviors specified for the service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Gets or sets the binding for the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> for the service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Gets the contract for the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> that specifies the contract for the service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.ListenUri">
      <summary>Gets or sets the URI at which the service endpoint listens.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the service endpoint listens. The default value is provided by <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> of the <see cref="T:System.ServiceModel.EndpointAddress" /> returned by <see cref="P:System.ServiceModel.Description.ServiceEndpoint.Address" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.ListenUriMode">
      <summary>Gets or sets how the transport handles the URI that is provided for the service to listen on.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ListenUriMode" /> for the service endpoint. The default value is <see cref="F:System.ServiceModel.Description.ListenUriMode.Explicit" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Gets or sets the name of the service endpoint.</summary>
      <returns>The name the service endpoint. The default value is the concatenation of the binding name and the contract description name. For example, <see cref="P:System.ServiceModel.Channels.Binding.Name" /> +'_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpointCollection">
      <summary>A collection that contains the endpoints for a service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type)">
      <summary>Returns the first service endpoint found that satisfies the specified contract type from the collection of service endpoints.</summary>
      <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the specified contract type or null if none was found.</returns>
      <param name="contractType">The <see cref="T:System.Type" /> of contract for the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type,System.Xml.XmlQualifiedName)">
      <summary>Returns a service endpoint of a specified contract type and with a specified binding name and namespace from the collection of service endpoints.</summary>
      <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the specified contract type and binding name and namespace or null if none was found.</returns>
      <param name="contractType">The <see cref="T:System.Type" /> of contract for the service endpoint.</param>
      <param name="bindingName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the binding of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractType" /> or <paramref name="bindingName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Uri)">
      <summary>Returns a service endpoint with a specified address from the collection of service endpoints.</summary>
      <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the specified address or null if none was found.</returns>
      <param name="address">The <see cref="T:System.Uri" /> for the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName)">
      <summary>Returns a service endpoint with a specified namespace and contract name from the collection of service endpoints.</summary>
      <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> with the specified namespace and contract name or null if none was found.</returns>
      <param name="contractName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the contract of the service.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Returns the first service endpoint with the specified contract name and namespace and binding name and namespace from the collection of service endpoints.</summary>
      <returns>The first <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> with the specified binding and contract names and namespaces.</returns>
      <param name="contractName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the contract of the service.</param>
      <param name="bindingName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the binding of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractName" /> or <paramref name="bindingName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Type)">
      <summary>Returns a collection of all the service endpoints for a specified type of service.</summary>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> that contains service endpoints of the specified type or the empty collection if none is found.</returns>
      <param name="contractType">The <see cref="T:System.Type" /> of contract for the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Xml.XmlQualifiedName)">
      <summary>Returns a collection of all the service endpoints for a specified service name.</summary>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> that contains service endpoints with the specified contract name and namespace or the empty collection if none is found.</returns>
      <param name="contractName">The <see cref="T:System.Xml.XmlQualifiedName" /> for the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contractName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Inserts an item into the collection at the specified index.</summary>
      <param name="index">The zero-based index at which the item should be inserted.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> item to insert at the specified <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is greater than the number of items contained in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpointCollection.SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Replaces the element in the collection at the specified index.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> item at the specified <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is greater than the number of items contained in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceMetadataBehavior">
      <summary>Controls the publication of service metadata and associated information.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation">
      <summary>Gets or sets a value that is the location of service metadata.</summary>
      <returns>The location of the service metadata.</returns>
      <exception cref="T:System.ArgumentException">The value is absolute and the schema is neither http nor https.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled">
      <summary>Gets or sets a value that indicates whether to publish service metadata for retrieval using an HTTP/GET request.</summary>
      <returns>true if the WSDL is published; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl">
      <summary>Gets or sets the location of metadata publication for HTTP/GET requests.</summary>
      <returns>The absolute or relative location of the metadata.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled">
      <summary>Gets or sets a value that indicates whether to publish service metadata for retrieval using an HTTPS/GET request.</summary>
      <returns>true if the WSDL is published; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl">
      <summary>Gets or sets the location of metadata publication for HTTPS/GET requests.</summary>
      <returns>The address of HTTPS metadata.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter">
      <summary>Gets or sets the internal <see cref="T:System.ServiceModel.Description.MetadataExporter" /> object used to publish the service metadata.</summary>
      <returns>The internal <see cref="T:System.ServiceModel.Description.MetadataExporter" /> object.</returns>
    </member>
    <member name="F:System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName">
      <summary>Returns the string IMetadataContract.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implementation of <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that configures the underlying bindings to support the behavior.</summary>
      <param name="description">The service description to be configured.</param>
      <param name="serviceHostBase">The host of the service.</param>
      <param name="endpoints">The endpoints to be configured.</param>
      <param name="parameters">The binding parameters to be configured.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implementation of <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that configures the underlying bindings to support the behavior on the service.</summary>
      <param name="description">The service description to be modified.</param>
      <param name="serviceHostBase">The host of the service.</param>
      <exception cref="T:System.ArgumentNullException">Either the <paramref name="description" /> or the <paramref name="serviceHostBase" /> are null.</exception>
      <exception cref="T:System.InvalidOperationException">The destination address of the <paramref name="serviceHostBase" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implementation of <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that validates that the service description can support the behavior.</summary>
      <param name="description">The service description to be validated.</param>
      <param name="serviceHostBase">The host of the service.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceMetadataExtension">
      <summary>Provides the implementation for the metadata publishing protocols.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataExtension.#ctor">
      <summary>Creates an instance of a <see cref="T:System.ServiceModel.Description.ServiceMetadataExtension" /> object.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataExtension.Metadata">
      <summary>Gets the service's metadata at runtime.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.MetadataSet" /> object that contains the service's metadata at runtime. Note:Changes in the returned collection are reflected in subsequent requests for the service metadata. </returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataExtension.System#ServiceModel#IExtension{T}#Attach(System.ServiceModel.ServiceHostBase)">
      <summary>Enables an object to participate in custom behavior. Called when the runtime attaches the extension to an instance of the <see cref="T:System.ServiceModel.ServiceHostBase" /> class. For internal use only.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceMetadataExtension.System#ServiceModel#IExtension{T}#Detach(System.ServiceModel.ServiceHostBase)">
      <summary>Enables an object to participate in custom behavior. Called when the runtime detaches the extension from an instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class. For internal use only.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.InstanceContext" />.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceSecurityAuditBehavior">
      <summary>Specifies the audit behavior of security events. In general, the security events consist of authentication events such as transport, message or negotiate authentication and authorization event. For more information, see  <see cref="T:System.ServiceModel.ServiceAuthorizationManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceSecurityAuditBehavior" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.AuditLogLocation">
      <summary>Gets or sets the location where secure-related event logs are written. </summary>
      <returns>The <see cref="T:System.ServiceModel.AuditLogLocation" />. The default value is <see cref="F:System.ServiceModel.AuditLogLocation.Default" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">set and value are not valid members of <see cref="T:System.ServiceModel.AuditLogLocation" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.MessageAuthenticationAuditLevel">
      <summary>Gets or sets the type of authentication events to audit at the message level.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.AuditLevel" /> enumeration values. The default is <see cref="F:System.ServiceModel.AuditLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">set and value are not valid members of <see cref="T:System.ServiceModel.AuditLevel" />. </exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.ServiceAuthorizationAuditLevel">
      <summary>Gets or sets the type of authorization events to audit at the service level.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.AuditLevel" /> enumeration values. The default is None.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">set and value are not valid members of <see cref="T:System.ServiceModel.AuditLevel" />. The default is <see cref="F:System.ServiceModel.AuditLevel.None" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.SuppressAuditFailure">
      <summary>Gets or sets a value that indicates whether failure to audit affects the application. </summary>
      <returns>true if failure to audit does not affect the application; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Passes custom data to binding elements to support the contract implementation.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the service.</param>
      <param name="serviceHostBase">The host of the service.</param>
      <param name="endpoints">The service endpoints.</param>
      <param name="parameters">A <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">set and <paramref name="parameters" /> are null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the service.</param>
      <param name="serviceHostBase">The host of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="description" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceHostBase" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Not implemented.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the service.</param>
      <param name="serviceHostBase">The host of the service.</param>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceThrottlingBehavior">
      <summary>Configures run-time throughput settings that enable you to tune service performance.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceThrottlingBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceThrottlingBehavior" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls">
      <summary>Gets or sets a value that specifies the maximum number of messages actively processing across a <see cref="T:System.ServiceModel.ServiceHost" />.</summary>
      <returns>The upper limit of active messages in the service. The default is 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances">
      <summary>Gets or sets a value that specifies the maximum number of <see cref="T:System.ServiceModel.InstanceContext" /> objects in the service that can execute at one time.</summary>
      <returns>The maximum number of <see cref="T:System.ServiceModel.InstanceContext" /> objects in the service at one time. The default is 26.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions">
      <summary>Gets or sets a value that specifies the maximum number of sessions a <see cref="T:System.ServiceModel.ServiceHost" /> object can accept at one time.</summary>
      <returns>The maximum number of sessions a service host accepts. The default is 10.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures the bindings to support the service behavior.</summary>
      <param name="description">The service description.</param>
      <param name="serviceHostBase">The host for the service.</param>
      <param name="endpoints">The endpoints exposed by the service.</param>
      <param name="parameters">The binding parameters to be configured to support the service behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Configures the service to support the service behavior.</summary>
      <param name="description">The service description to be configured.</param>
      <param name="serviceHostBase">The host for the service.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Validates that the service and host can support the service behavior.</summary>
      <param name="description">The service description to be validated by the service behavior.</param>
      <param name="serviceHostBase">The service host to be validated by the service behavior.</param>
    </member>
    <member name="T:System.ServiceModel.Description.SynchronousReceiveBehavior">
      <summary>Controls whether channels listen synchronously or asynchronously.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.#ctor">
      <summary>Creates an instance of the <see cref="T:System.ServiceModel.Description.SynchronousReceiveBehavior" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Not implemented in this class. </summary>
      <param name="serviceEndpoint">The endpoint to modify.</param>
      <param name="parameters">The objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Not implemented in this class. </summary>
      <param name="serviceEndpoint">The endpoint that is to be customized.</param>
      <param name="behavior">The client runtime to be customized.</param>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Sets the <see cref="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" /> property to true.</summary>
      <param name="serviceEndpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
    </member>
    <member name="M:System.ServiceModel.Description.SynchronousReceiveBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Not implemented in this class.</summary>
      <param name="serviceEndpoint">The endpoint to validate.</param>
    </member>
    <member name="T:System.ServiceModel.Description.TransactedBatchingBehavior">
      <summary>Represents a behavior that optimizes the receive operations for transports that support transactional receives.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.TransactedBatchingBehavior" /> class with the specified batch size.</summary>
      <param name="maxBatchSize">The maximum number of receive operations that can be batched together.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="MaxBatchSize" /> is less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.TransactedBatchingBehavior.MaxBatchSize">
      <summary>Gets or sets the maximum number of receive operations that can be batched together in one transaction.</summary>
      <returns>The maximum number of receive operations that can be batched together in one transaction.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="MaxBatchSize" /> is less than 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Applies binding settings to the specified service endpoint. This method cannot be inherited.</summary>
      <param name="serviceEndpoint">A service endpoint where behavior settings are applied.</param>
      <param name="bindingParameters">A collection of binding parameters that store information used by binding elements to build factories.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Applies transaction batching behavior settings to the specified service endpoint. This method cannot be inherited.</summary>
      <param name="serviceEndpoint">A service endpoint where behavior settings are applied.</param>
      <param name="behavior">Contains the transaction batching behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Associates an endpoint dispatcher with the specified service endpoint. This method cannot be inherited.</summary>
      <param name="serviceEndpoint">A service endpoint where behavior settings are applied.</param>
      <param name="endpointDispatcher">An endpoint dispatching for dispatching messages </param>
    </member>
    <member name="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Ensures that transacted batching is applicable only for the bindings that support transacted receive operation. This method cannot be inherited.</summary>
      <param name="serviceEndpoint">A service endpoint for which batching behavior is validated.</param>
    </member>
    <member name="T:System.ServiceModel.Description.TypedMessageConverter">
      <summary>Converts a typed message to an untyped message, or an untyped message to a typed message.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="formatterAttribute">A <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> that specifies the formatter to be used.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="formatterAttribute">A <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> that specifies the formatter to be used.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="defaultNamespace">A namespace.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="defaultNamespace">A namespace.</param>
      <param name="formatterAttribute">A <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> that specifies the formatter to be used.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="defaultNamespace">A namespace.</param>
      <param name="formatterAttribute">A <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> that specifies the formatter to be used.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)">
      <summary>Creates a typed message from the specified <see cref="T:System.ServiceModel.Channels.Message" /> instance.</summary>
      <returns>An object that is a typed message.</returns>
      <param name="message">An untyped message.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.Message" /> instance from the specified typed message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> instance.</returns>
      <param name="typedMessage">A typed message.</param>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.Message" /> instance from the specified typed message using the specified version.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> instance.</returns>
      <param name="typedMessage">A typed message.</param>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that specifies the versions of SOAP and WS-Addressing associated with a message.</param>
    </member>
    <member name="T:System.ServiceModel.Description.WsdlContractConversionContext">
      <summary>Passed to custom WSDL exporters and importers to enable customization of the metadata export and import processes for a contract.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlContractConversionContext.Contract">
      <summary>Gets the <see cref="T:System.ServiceModel.Description.ContractDescription" /> being exported or imported.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> being exported or imported.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetFaultDescription(System.Web.Services.Description.OperationFault)">
      <summary>Returns the fault description for the specified fault.</summary>
      <returns>The fault description for the specified fault.</returns>
      <param name="operationFault">The <see cref="T:System.Web.Services.Description.OperationFault" /> for the requested <see cref="T:System.ServiceModel.Description.FaultDescription" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The value was not found.</exception>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetMessageDescription(System.Web.Services.Description.OperationMessage)">
      <summary>Returns the message description for the specified message.</summary>
      <returns>The message description for the specified message.</returns>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> for the requested <see cref="T:System.ServiceModel.Description.MessageDescription" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The value was not found.</exception>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetOperation(System.ServiceModel.Description.OperationDescription)">
      <summary>Returns the operation for the specified operation description.</summary>
      <returns>The operation for the specified operation description.</returns>
      <param name="operation">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> for the requested <see cref="T:System.Web.Services.Description.Operation" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The value was not found.</exception>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetOperationDescription(System.Web.Services.Description.Operation)">
      <summary>Returns the operation description associated with the operation.</summary>
      <returns>The operation description associated with the operation.</returns>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> for the requested <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The value was not found.</exception>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetOperationFault(System.ServiceModel.Description.FaultDescription)">
      <summary>Returns the <see cref="T:System.Web.Services.Description.OperationFault" /> for the requested <see cref="T:System.ServiceModel.Description.FaultDescription" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.OperationFault" /> for the requested <see cref="T:System.ServiceModel.Description.FaultDescription" />.</returns>
      <param name="fault">The <see cref="T:System.ServiceModel.Description.FaultDescription" /> for the requested <see cref="T:System.Web.Services.Description.OperationFault" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The value was not found.</exception>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlContractConversionContext.GetOperationMessage(System.ServiceModel.Description.MessageDescription)">
      <summary>Gets a <see cref="T:System.Web.Services.Description.OperationMessage" /> object for the specified <paramref name="message" /> that represents a message type passed by the action of an XML Web service.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.OperationMessage" /> object that represents a message type passed by the action of an XML Web service.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Description.MessageDescription" /> for the requested <see cref="T:System.Web.Services.Description.OperationMessage" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The value was not found.</exception>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlContractConversionContext.WsdlPortType">
      <summary>Gets the <see cref="T:System.Web.Services.Description.PortType" /> that represents the contract.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.PortType" /> that represents the contract.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WsdlEndpointConversionContext">
      <summary>Passed to custom WSDL exporters and importers to enable customization of the metadata export and import processes for a WSDL endpoint.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlEndpointConversionContext.ContractConversionContext">
      <summary>Gets the <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> being exported or imported.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> being exported or imported. </returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlEndpointConversionContext.Endpoint">
      <summary>Gets the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> being exported or imported.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> being exported or imported.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetFaultBinding(System.ServiceModel.Description.FaultDescription)">
      <summary>Gets the WSDL binding associated with the fault.</summary>
      <returns>The WSDL <see cref="T:System.Web.Services.Description.FaultBinding" /> associated with the fault.</returns>
      <param name="fault">The <see cref="T:System.ServiceModel.Description.FaultDescription" /> for the fault associated with the WSDL binding.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetFaultDescription(System.Web.Services.Description.FaultBinding)">
      <summary>Gets the description for the fault associated with the WSDL fault binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.FaultDescription" /> for the fault associated with the WSDL binding.</returns>
      <param name="faultBinding">The <see cref="T:System.Web.Services.Description.FaultBinding" /> associated with the WSDL fault binding.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetMessageBinding(System.ServiceModel.Description.MessageDescription)">
      <summary>Gets the WSDL binding for the message specified by the description.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.MessageBinding" /> for the message specified by the description.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Description.MessageDescription" /> associated with the description.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetMessageDescription(System.Web.Services.Description.MessageBinding)">
      <summary>Gets the message description for the message specified by the WSDL binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessageDescription" /> for the message specified by the binding.</returns>
      <param name="messageBinding">The <see cref="T:System.Web.Services.Description.MessageBinding" /> associated with the message.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetOperationBinding(System.ServiceModel.Description.OperationDescription)">
      <summary>Gets the WSDL binding for the operation specified by the description.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.OperationBinding" /> for the operation specified by the description.</returns>
      <param name="operation">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> of the operation associated with the binding.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlEndpointConversionContext.GetOperationDescription(System.Web.Services.Description.OperationBinding)">
      <summary>Returns the operation description of the operation associated with the WSDL binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.OperationDescription" /> of the operation associated with the binding.</returns>
      <param name="operationBinding">The <see cref="T:System.Web.Services.Description.OperationBinding" /> associated with the description.</param>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlEndpointConversionContext.WsdlBinding">
      <summary>Gets the <see cref="T:System.Web.Services.Description.Binding" /> for the WSDL endpoint.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.Binding" /> for the WSDL endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlEndpointConversionContext.WsdlPort">
      <summary>Gets the <see cref="T:System.Web.Services.Description.Port" /> for the WSDL endpoint.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.Port" /> for the WSDL endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WsdlExporter">
      <summary>Converts service, contract, and endpoint information into metadata documents.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WsdlExporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.ExportContract(System.ServiceModel.Description.ContractDescription)">
      <summary>Exports metadata that describes only the contract information from the specified contract description.</summary>
      <param name="contract">The <see cref="T:System.ServiceModel.Description.ContractDescription" /> to generate metadata from.</param>
      <exception cref="T:System.InvalidOperationException">The exporter encountered an error.</exception>
      <exception cref="T:System.ArgumentNullException">The contract is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Generates metadata about the specified endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> about which to return metadata.</param>
      <exception cref="T:System.InvalidOperationException">The exporter encountered an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The binding is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.ExportEndpoints(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint},System.Xml.XmlQualifiedName)">
      <summary>Generates metadata about a group of endpoints from a specified service.</summary>
      <param name="endpoints">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects about which to generate metadata.</param>
      <param name="wsdlServiceQName">The name of the service.</param>
      <exception cref="T:System.InvalidOperationException">The exporter encountered an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoints" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wsdlServiceQName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A binding is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlExporter.GeneratedWsdlDocuments">
      <summary>Gets a collection of <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects after calling one of the export methods. </summary>
      <returns>A collection of <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlExporter.GeneratedXmlSchemas">
      <summary>Gets a set of <see cref="T:System.Xml.Schema.XmlSchema" /> objects after calling one of the export methods.</summary>
      <returns>A set of <see cref="T:System.Xml.Schema.XmlSchema" /> objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlExporter.GetGeneratedMetadata">
      <summary>Returns an enumerable collection of generated <see cref="T:System.ServiceModel.Description.MetadataSection" /> objects.</summary>
      <returns>An enumerable collection of generated <see cref="T:System.ServiceModel.Description.MetadataSection" /> objects that represents the metadata generated as a result of calls to <see cref="M:System.ServiceModel.Description.WsdlExporter.ExportContract(System.ServiceModel.Description.ContractDescription)" />, <see cref="M:System.ServiceModel.Description.WsdlExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />, or <see cref="M:System.ServiceModel.Description.WsdlExporter.ExportEndpoints(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint},System.Xml.XmlQualifiedName)" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.WsdlImporter">
      <summary>Imports Web Services Description Language (WSDL) 1.1 metadata with WS-Policy attachments.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.WsdlImporter" /> class.</summary>
      <param name="metadata">A collection of metadata documents from which to extract contract, endpoint, and binding information.</param>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})">
      <summary>Creates a <see cref="T:System.ServiceModel.Description.WsdlImporter" /> object from the specified metadata, custom policy importers, and custom WSDL importers.</summary>
      <param name="metadata">The downloaded metadata.</param>
      <param name="policyImportExtensions">The custom policy importers used to import custom policy statements.</param>
      <param name="wsdlImportExtensions">The custom WSDL importers used to import custom WSDL elements.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="metadata" /> argument is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings">
      <summary>Returns a set of <see cref="T:System.ServiceModel.Channels.Binding" /> objects imported from the metadata documents.</summary>
      <returns>A set of <see cref="T:System.ServiceModel.Channels.Binding" /> objects imported from the metadata documents.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts">
      <summary>Returns a set of <see cref="T:System.ServiceModel.Description.ContractDescription" /> objects that represent port type information in the metadata documents.</summary>
      <returns>A set of <see cref="T:System.ServiceModel.Description.ContractDescription" /> objects that represent port type information in the metadata documents.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents the endpoints in WSDL documents.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents the endpoints in WSDL documents.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents binding information from a set of metadata documents.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.Binding" /> object that represents binding information from a set of metadata documents.</returns>
      <param name="wsdlBinding">A <see cref="T:System.Web.Services.Description.Binding" /> object that represents binding information in a metadata file.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlBinding" /> parameter is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.ContractDescription" /> object that represents metadata located by the specified port type information.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ContractDescription" /> object that represents metadata located by the specified port type information.</returns>
      <param name="wsdlPortType">A <see cref="T:System.Web.Services.Description.PortType" /> object that represents the desired port type.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
      <exception cref="T:System.ArgumentNullException">The port type is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> from a set of metadata documents that uses information from the specified <see cref="T:System.Web.Services.Description.Port" /> object.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> object that represents specific WSDL port information in the metadata document.</returns>
      <param name="wsdlPort">A <see cref="T:System.Web.Services.Description.Port" /> object that represents the desired WSDL port information.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlPort" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types using the specified <see cref="T:System.Web.Services.Description.Binding" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types using the specified <see cref="T:System.Web.Services.Description.Binding" />.</returns>
      <param name="wsdlBinding">A <see cref="T:System.Web.Services.Description.Binding" /> object used in a WSDL port. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlBinding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types associated with the specified <see cref="T:System.Web.Services.Description.PortType" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types associated with the specified <see cref="T:System.Web.Services.Description.PortType" />.</returns>
      <param name="wsdlPortType">The <see cref="T:System.Web.Services.Description.PortType" /> object that is used to find associated WSDL port information.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlBinding" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlPortType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)">
      <summary>Returns a <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types within the specified <see cref="T:System.Web.Services.Description.Service" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> that represents all WSDL port types within the specified <see cref="T:System.Web.Services.Description.Service" />.</returns>
      <param name="wsdlService">The <see cref="T:System.Web.Services.Description.Service" /> object within which to search for WSDL port information.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> has encountered an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="wsdlService" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments">
      <summary>Gets a set of <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects that describe the contract information in the metadata documents.</summary>
      <returns>A collection of <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects that describe the contract information in the metadata documents.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions">
      <summary>Gets a set of <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> objects used to import custom WSDL information.</summary>
      <returns>A set of <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> objects used to import custom WSDL information.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas">
      <summary>Gets a set of <see cref="T:System.Xml.Schema.XmlSchema" /> objects that describe types in the metadata.</summary>
      <returns>A set of <see cref="T:System.Xml.Schema.XmlSchema" /> objects that describe types in the metadata.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerMessageContractImporter">
      <summary>Handles the import of messages from WSDL documents using the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerMessageContractImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.XmlSerializerMessageContractImporter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>Specifies a service description and schema set to use when importing a set of WSDL documents.</summary>
      <param name="wsdlDocuments">A <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> that represents the WSDL documents to inspect.</param>
      <param name="xmlSchemas">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that represents the schemas to use when converting messages.</param>
      <param name="policy">A <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the policy documents to use when importing messages.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Imports the contract.</summary>
      <param name="importer">The <see cref="T:System.ServiceModel.Description.WsdlImporter" /> to use for the import.</param>
      <param name="contractContext">The <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> that represents the context to use.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerMessageContractImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Imports a specific endpoint.</summary>
      <param name="importer">A <see cref="T:System.ServiceModel.Description.WsdlImporter" /> that represents the importer to use.</param>
      <param name="endpointContext">A <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> that represents the endpoint to import.</param>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>Controls run-time behavior of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> associated with an operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.XmlSerializerOperationBehavior" /> class with a specific operation.</summary>
      <param name="operation">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to export or serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.XmlSerializerFormatAttribute)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.XmlSerializerOperationBehavior" /> class. </summary>
      <param name="operation">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to export or serialize.</param>
      <param name="attribute">An <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> used to hold SOAP use and format options.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.GetXmlMappings">
      <summary>Gets the collection of mappings between XML schema elements and CLR data types.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of <see cref="T:System.Xml.Serialization.XmlMapping" />s that contains the mappings.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds a set of parameters to an operation description.</summary>
      <param name="description">The target <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <param name="parameters">A <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that contains the parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Applies a client's behavior to the operation.</summary>
      <param name="description">A <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
      <param name="proxy">A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> that represents a client operation.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Applies a dispatch behavior to the operation.</summary>
      <param name="description">The target <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <param name="dispatch">The <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> to apply.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Validates the operation.</summary>
      <param name="description">The target <see cref="T:System.ServiceModel.Description.OperationDescription" /> to validate.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Exports the operation data as a WSDL document.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> to use for the export.</param>
      <param name="contractContext">The <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> to export.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Exports the endpoint data as a WSDL document.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> to use for the export.</param>
      <param name="endpointContext">The <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> to export.</param>
    </member>
    <member name="P:System.ServiceModel.Description.XmlSerializerOperationBehavior.XmlSerializerFormatAttribute">
      <summary>Gets the object that holds SOAP use and format options.</summary>
      <returns>An <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> that holds SOAP use and format options.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataExporter.PolicyVersion">
      <summary>Specifies the version of WS-Policy specification being used.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.PolicyVersion" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MetadataImporterQuotas">
      <summary>Specifies the quotas for metadata importers that derive from the <see cref="T:System.ServiceModel.Description.MetadataImporter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MetadataImporterQuotas.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Description.MetadataImporterQuotas" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporterQuotas.Defaults">
      <summary>Gets the default set of quotas for metadata importers.</summary>
      <returns>
Returns the <see cref="T:System.ServiceModel.Description.MetadataImporterQuotas" /> that contains the default set of quotas for metadata importers.
</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MetadataImporterQuotas.Max">
      <summary>Gets the maximum quotas values for a metadata importer.</summary>
      <returns>
Returns the <see cref="T:System.ServiceModel.Description.MetadataImporterQuotas" /> that contains the maximum quota values for a metadata importer.
</returns>
    </member>
    <member name="T:System.ServiceModel.Description.PolicyVersion">
      <summary>A class used to specify the version of the WS-Policy specification being used.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyVersion.Default">
      <summary>Gets the default WS-Policy version.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.PolicyVersion" /> instance that specifies the default policy version.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyVersion.Namespace">
      <summary>Gets the namespace for the policy version.</summary>
      <returns>A string that contains the WS-Policy namespace.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyVersion.Policy12">
      <summary>Gets a <see cref="T:System.ServiceModel.Description.PolicyVersion" /> instance that represents WS-Policy 1.2.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.PolicyVersion" /> instance that represents WS-Policy 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.PolicyVersion.Policy15">
      <summary>Gets a <see cref="T:System.ServiceModel.Description.PolicyVersion" /> instance that represents WS-Policy 1.5.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.PolicyVersion" /> instance that represents WS-Policy 1.5.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.PolicyVersion.ToString">
      <summary>Converts the <see cref="T:System.ServiceModel.Description.PolicyVersion" /> instance into a string representation.</summary>
      <returns>The namespace for the version of WS-Policy being used.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding"></member>
    <member name="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding"></member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding"></member>
    <member name="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding"></member>
    <member name="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)">
      <summary>Creates a <see cref="T:System.ServiceModel.Description.WsdlImporter" /> object from the specified metadata, custom policy importers, and custom WSDL importers.</summary>
      <param name="metadata">The downloaded metadata.</param>
      <param name="policyImportExtensions">The custom policy importers used to import custom policy statements.</param>
      <param name="wsdlImportExtensions">The custom WSDL importers used to import custom WSDL elements.</param>
      <param name="quotas"></param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="metadata" /> argument is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Diagnostics.PerformanceCounterScope">
      <summary>Specifies whether performance counters for the assembly are enabled. </summary>
    </member>
    <member name="F:System.ServiceModel.Diagnostics.PerformanceCounterScope.Off">
      <summary>Performance counters are disabled. This is the default value.</summary>
    </member>
    <member name="F:System.ServiceModel.Diagnostics.PerformanceCounterScope.ServiceOnly">
      <summary>Only performance counters relevant to this service is enabled.</summary>
    </member>
    <member name="F:System.ServiceModel.Diagnostics.PerformanceCounterScope.All">
      <summary>Performance counters can be viewed at runtime.</summary>
    </member>
    <member name="F:System.ServiceModel.Diagnostics.PerformanceCounterScope.Default">
      <summary>A single performance counter instance _WCF_Admin is created. This instance is used to enable the collection of SQM data for used by the infrastructure. None of the counter values for this instance are updated and therefore will remain at zero. This is the default value if no configuration is present for Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ActionMessageFilter">
      <summary>Represents a query that tests whether the action of a message is one of a specified set of actions.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ActionMessageFilter.#ctor(System.String[])">
      <summary>Initializes a new instance of this class with the set of actions for which it tests.</summary>
      <param name="actions">The <see cref="T:System.Array" /> that contains the set of actions for which the filter tests.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actions" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The<paramref name=" actions" /> array is empty. </exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ActionMessageFilter.Actions">
      <summary>Gets a read-only copy of action strings for which this <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> tests.</summary>
      <returns>The <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the action strings for which this <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> tests.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ActionMessageFilter.CreateFilterTable``1">
      <summary>Creates a new filter table that tests efficiently on message actions.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />s and associated <paramref name="FilterData" /> can be added.</returns>
      <typeparam name="FilterData">Data associated with the filters in the table.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Tests whether a message's action matches one of the actions specified in this <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.Message" /> action header matches one of the specified actions; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Tests whether a buffered message's action header matches one of the actions specified in this <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> action header matches one of the specified actions; otherwise, false.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBuffer" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ChannelDispatcher">
      <summary>A component that accepts channels and associates them with a service.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class. </summary>
      <param name="listener">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</param>
      <exception cref="T:system.ArgumentNullException">
        <paramref name="listener" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class. </summary>
      <param name="listener">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</param>
      <param name="bindingName">The name of the binding used to configure the service.</param>
      <exception cref="T:system.ArgumentNullException">
        <paramref name="listener" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class. </summary>
      <param name="listener">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the service.</param>
      <param name="bindingName">The name of the binding used to configure the service.</param>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> for the service.</param>
      <exception cref="T:system.ArgumentNullException">
        <paramref name="listener" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)">
      <summary>Attaches the channel dispatcher to the host.</summary>
      <param name="host">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName">
      <summary>Gets the name of the binding used to configure the service.</summary>
      <returns>The binding name of the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers">
      <summary>Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects that you can use to inspect and add state to channels when they are first created.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput">
      <summary>Stops the listener from accepting new channels.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout">
      <summary>Gets the default interval of time allowed for the channel dispatcher to close.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout">
      <summary>Gets the default interval of time allowed for the channel dispatcher to open.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)">
      <summary>Detaches the service host from the channel dispatcher.</summary>
      <param name="host">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="host" /> is not the host of the channel dispatcher.</exception>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints">
      <summary>Gets the endpoint dispatchers which forward messages to the channel endpoints.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> which forward messages to the channel endpoints.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers">
      <summary>Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects that can be used to insert custom error handling functionality for an endpoint.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host">
      <summary>Gets the host for the service associated with the dispatcher.</summary>
      <returns>The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that indicates whether to include the details about an exception in a fault.</summary>
      <returns>true if the details about an exception are included in the faults; otherwise, false. </returns>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept">
      <summary>Gets a value that indicates whether the accept method calls on the listener are done under a transaction.</summary>
      <returns>true if the accept method calls on the listener are done under a transaction; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive">
      <summary>Gets a value that indicates whether the receive method calls on the listener are done under a transaction.</summary>
      <returns>true if the receive method calls on the listener are done under a transaction; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener">
      <summary>Gets the listener associated with the channel dispatcher.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing">
      <summary>Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.</summary>
      <returns>true if the proxy does not add any addressing headers; otherwise, false. The default is false. See Remarks.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize">
      <summary>Gets or sets the maximum size for a transacted batch.</summary>
      <returns>The maximum size for a transacted batch.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion">
      <summary>Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used or expected.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort">
      <summary>Aborts the listener associated with the dispatcher.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close a channel listener for the dispatcher. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a channel listener for the dispatcher. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.InvalidOperationException">The host or the message version is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)">
      <summary>Closes the channel listener associated with the dispatcher within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time allowed for the listener to close.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed">
      <summary>Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close a channel listener for the dispatcher.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open a channel listener for the dispatcher.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)">
      <summary>Opens the listener associated with the channel dispatcher.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies the interval of time allowed for the listener to open.</param>
      <exception cref="T:System.InvalidOperationException">The host or the message version is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened">
      <summary>Populates and validates filter table used to dispatch to the endpoints.</summary>
      <exception cref="T:System.InvalidOperationException">The host is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening">
      <summary>Checks whether the channel dispatcher is attached to a host.</summary>
      <exception cref="T:System.InvalidOperationException">The host is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously">
      <summary>Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.</summary>
      <returns>true if the dispatcher uses synchronous methods to read messages from channels; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle">
      <summary>Gets or sets the service throttle for the service associated with the channel dispatcher.</summary>
      <returns>A <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel">
      <summary>Gets or sets the default isolation level for transactions.</summary>
      <returns>One of the <see cref="T:System.Transactions.IsolationLevel" /> values. The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The isolation level set is not defined.</exception>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout">
      <summary>Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> value that represents the default timeout period for transactions. The default is <see cref="F:System.TimeSpan.Zero" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than zero or is too large.</exception>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
      <summary>Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
      <summary>When overridden in a derived class, attaches the channel dispatcher to a specific host.</summary>
      <param name="host">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
      <summary>When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
      <summary>When overridden in a derived class, detaches the channel dispatcher from a specific host.</summary>
      <param name="host">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
      <summary>When overridden in a derived class, gets the service host associated with the channel dispatcher. </summary>
      <returns>The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
      <summary>When overridden in a derived class, gets the channel listener associated with the channel dispatcher. </summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection">
      <summary>Provides a thread-safe collection that contains channel dispatchers.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.ClearItems">
      <summary>Removes all channel dispatchers from the collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.InsertItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)">
      <summary>Inserts a channel dispatcher into the collection at a specified index.</summary>
      <param name="index">The zero-based index of the channel dispatcher to be retrieved from the collection.</param>
      <param name="item">The channel dispatcher to be inserted into the collection as an element.</param>
      <exception cref="T:System.ObjectDisposedException">The service host associated with the channel dispatcher collection is closed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The commutation object is not in a state </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.RemoveItem(System.Int32)">
      <summary>Removes a channel dispatcher at a specified index from the collection.</summary>
      <param name="index">The zero-based index of the channel dispatcher to be removed from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.SetItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)">
      <summary>Replaces the channel dispatcher at a specified index with another item.</summary>
      <param name="index">The zero-based index of the channel dispatcher to be replaced.</param>
      <param name="item">The channel dispatcher to replace </param>
      <exception cref="T:System.ObjectDisposedException">The service associated with this collection of channel dispatchers is in a <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Used to modify or extend the execution behavior of a specific contract operation in a client object or client channel object. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> class using the specified <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, name, and action values. </summary>
      <param name="parent">The containing <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object.</param>
      <param name="name">The name of the operation.</param>
      <param name="action">The action of the operation.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> class using the specified <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, name, action, and reply action values. </summary>
      <param name="parent">The containing <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object.</param>
      <param name="name">The name of the operation.</param>
      <param name="action">The action of the operation.</param>
      <param name="replyAction">The action of the reply message.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Gets the action of the operation.</summary>
      <returns>The action of the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>Gets or sets the method associated with an asynchronous operation.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> object that represents the method handling the begin portion of an asynchronous method pair, or null if the operation is not part of an asynchronous method pair.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> property value is used to deserialize the reply message.</summary>
      <returns>true if the return type is not a <see cref="T:System.ServiceModel.Channels.Message" />; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>Gets or sets the method that implements the asynchronous end method for the operation.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> that represents the end method for the operation, or null if the operation is not asynchronous.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> objects that represent the specified SOAP faults for this operation.</summary>
      <returns>A collection of SOAP faults specified for this operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Gets or sets the formatter that serializes objects into messages and deserializes messages into objects.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> implementation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <summary>Gets or sets a value that indicates whether a session can be started by a message to this operation.</summary>
      <returns>true if a message to this operation can initiate a session; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Gets or sets a value that indicates if the operation is a one-way operation.</summary>
      <returns>true if the indigo2 client should not expect a reply; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <summary>Gets or sets a value that indicates if this operation is the last one in a session.</summary>
      <returns>true if the associated session is closed after the operation is invoked; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Gets the name of the operation.</summary>
      <returns>The name of the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors">
      <summary>Gets or sets a collection of <see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" /> objects that can inspect and modify inbound and outbound objects for a particular client method.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" /> implementations.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Gets the containing <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object.</summary>
      <returns>The containing <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Gets the action of the reply message for this operation.</summary>
      <returns>The action of the reply.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Gets or sets a value that specifies whether the <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> object serializes an outbound message.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> property serializes the return values into a reply message; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>Gets or sets the method that is associated with this operation.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> that represents the method that implements the operation. If the operation is asynchronous, this value is null and the implementing methods are stored in the <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /> and <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" /> properties.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>The insertion point for classes that extend the functionality of Windows Communication Foundation (WCF) client objects for all messages handled by a client application.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType">
      <summary>Gets or sets the type of the callback contract associated with a duplex client.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the callback contract associated with a duplex client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime">
      <summary>Gets the dispatch run-time that dispatches service-initiated operations.</summary>
      <returns>A <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object. If the contract is a duplex contract, the dispatch behavior contains service-initiated operations; otherwise the dispatch behavior contains no operations.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers">
      <summary>Gets a collection of channel initializer objects used to customize the channel associated with a client.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> implementations.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Gets the type of the contract associated with a client.</summary>
      <returns>The <see cref="T:System.Type" /> object that represents the contract associated with this client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Gets the name of the contract associated with a client.</summary>
      <returns>The contract name for a client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Gets the namespace of the contract associated with a client.</summary>
      <returns>The namespace of the contract associated with a client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers">
      <summary>An interactive channel initializer.</summary>
      <returns>A synchronized collection of type <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Gets or sets a value that indicates whether the client adds addressing headers to request-reply messages.</summary>
      <returns>true if the client does not add any addressing headers; otherwise, false. The default is false. See Remarks.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Gets or sets the maximum fault size. </summary>
      <returns>An integer representing the maximum fault size.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors">
      <summary>Gets a collection of message inspector implementations for a client.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Dispatcher.IClientMessageInspector" /> implementations.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations">
      <summary>Gets a collection of client operations for a client.</summary>
      <returns>A synchronized collection of <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Gets or sets a <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> implementation that can be used to select a <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> object that selects a <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Returns the client operation for methods that do not have a corresponding <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /> collection.</summary>
      <returns>A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> that represents the method to which the current message contents are routed when the operation selector cannot find an operation that matches the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
      <summary>Gets or sets a value that specifies whether the system or the application enforces SOAP MustUnderstand header processing.</summary>
      <returns>true if the system is to perform SOAP header MustUnderstand processing; otherwise false, which indicates that the application performs this processing. The default value is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Gets or sets the transport address that is used to send messages through the client.</summary>
      <returns>A <see cref="T:System.Uri" /> that is the destination address for the transport. The default value is the <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> value of the client.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchOperation">
      <summary>Used to modify or extend the execution behavior of a specific service operation in a service endpoint. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> class using the specified dispatch run-time, name, and action values.</summary>
      <param name="parent">The associated <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object.</param>
      <param name="name">The name of the dispatch operation.This is used as the key to the <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" /> collection.</param>
      <param name="action">The message action for which this dispatch operation is being created.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> class using the specified dispatch run-time, name, action, and reply action values.</summary>
      <param name="parent">The associated <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object.</param>
      <param name="name">The name of the dispatch operation.</param>
      <param name="action">The SOAP message Action for which this dispatch operation is being created.</param>
      <param name="replyAction">The reply action associated with this dispatch operation.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Action">
      <summary>Gets the value of the action for this operation.</summary>
      <returns>The value of the action for this operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters">
      <summary>Gets or sets whether parameters are to be automatically disposed.</summary>
      <returns>true if the parameters are to be automatically disposed; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers">
      <summary>A collection of <see cref="T:System.ServiceModel.Dispatcher.ICallContextInitializer" /> objects that defines the methods that enable the initialization and recycling of thread-local storage with the thread that invokes user code.</summary>
      <returns>A collection of<see cref="T:System.ServiceModel.Dispatcher.ICallContextInitializer" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> property value is used to deserialize the request message.</summary>
      <returns>false if the return type is of type <see cref="T:System.ServiceModel.Channels.Message" /> and there are no out parameters; otherwise, true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.FaultContractInfos">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> objects that represent the specified SOAP faults for this operation.</summary>
      <returns>A collection of SOAP faults specified for this operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter">
      <summary>Gets or sets the formatter that deserializes messages into objects and serializes objects into messages.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" /> implementation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation">
      <summary>Gets or sets a value that indicates the degree to which the operation requires impersonation.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.ImpersonationOption" /> values.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Invoker">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.IOperationInvoker" /> object that invokes the user-defined method.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.IOperationInvoker" /> object that invokes the user-defined method.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay">
      <summary>Gets a value that indicates if the operation is a one-way operation.</summary>
      <returns>true if the operation has only an input; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsTerminating">
      <summary>Gets or sets a value that indicates if this operation is the last one in a session.</summary>
      <returns>true if the associated session is closed after the operation is invoked; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Name">
      <summary>Gets the name of the operation.</summary>
      <returns>The name of the operation. This is used as the key to the <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" /> collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors">
      <summary>Gets or sets a collection of <see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" /> objects that can inspect and modify inbound and outbound objects for a particular proxy method.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" /> implementations.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent">
      <summary>Gets the associated <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object.</summary>
      <returns>The associated <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceAfterCall">
      <summary>Gets or sets a value that specifies whether to recycle the service object after a call.</summary>
      <returns>true if the instance is released after a call is completed; otherwise, false. The default is false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceBeforeCall">
      <summary>Gets or sets a value that specifies whether to recycle the service object prior to dispatching the call.</summary>
      <returns>true if the instance is released and a new one created prior to dispatching the call; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.ReplyAction">
      <summary>Gets the action of the reply message for the operation.</summary>
      <returns>The action of the reply message for the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply">
      <summary>Gets or sets a value that specifies whether the <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> object serializes reply messages.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> property serializes the return values into a reply message; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionAutoComplete">
      <summary>Gets or sets a value that specifies whether the current transaction automatically completes when the operation returns successfully.</summary>
      <returns>true if the operation automatically completes on successful return; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionRequired">
      <summary>Gets or sets a value that specifies whether the operation must execute within a transaction.</summary>
      <returns>true if the operation must execute within the scope of a transaction; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <summary>Exposes properties that can be used to modify default service behavior as well as attach custom objects that can modify how incoming messages are transformed into objects and dispatched to operations. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
      <summary>Gets or sets a value that specifies whether the service closes an input session when the client closes an output session. </summary>
      <returns>true if the service closes an input session when the client closes an output session; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime">
      <summary>Gets the <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object that represents the installation point for extensions to Windows Communication Foundation (WCF) for outbound calls to a duplex callback endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object that is the installation point for run-time client customization in duplex contracts.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher">
      <summary>Gets the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> for this dispatch run-time object.</summary>
      <returns>The channel dispatcher for the dispatch run-time object.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode">
      <summary>Gets or sets whether an instance of a service processes messages sequentially or concurrently.</summary>
      <returns>A <see cref="T:System.ServiceModel.ConcurrencyMode" /> object that controls whether an instance of a service processes messages sequentially or concurrently.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher">
      <summary>Gets the <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> for this dispatch runtime.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> for this dispatch runtime.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies">
      <summary>Gets or sets the external authorization policies that define a set of rules for authorizing a user, given a set of claims.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> objects that define a set of rules for authorizing a user, given a set of claims.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty">
      <summary>Gets or sets whether to ignore the <see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" />.</summary>
      <returns>true, the <see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" /> is ignored when executing the service method; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations">
      <summary>Gets or sets a value that controls whether the service attempts to impersonate using the credentials provided by the incoming message.</summary>
      <returns>true if the service attempts to impersonate based on message credentials when an operation's <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /> property value is either <see cref="F:System.ServiceModel.ImpersonationOption.Required" /> or <see cref="F:System.ServiceModel.ImpersonationOption.Allowed" />; false if the service attempts impersonation only if an operation's <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /> property value is <see cref="F:System.ServiceModel.ImpersonationOption.Required" />. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" /> objects that can be used to add a custom handler to control how input sessions are closed.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" /> objects that can be used to inspect or modify an <see cref="T:System.ServiceModel.InstanceContext" /> object when it is first created.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> object of type <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextProvider">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> to be used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> to be used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
      <summary>Gets or sets an <see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /> object that you can use to control the creation and destruction of service objects.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /> object that controls the creation and destruction of service objects associated with an <see cref="T:System.ServiceModel.InstanceContext" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel">
      <summary>Gets or sets a value that specifies whether successful message authentication events are written to the event log specified by <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" />.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.AuditLevel" /> values. The default is <see cref="F:System.ServiceModel.AuditLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" /> objects that can be used to attach a custom message inspector for all incoming and outgoing messages across the endpoint.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> object of type <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> objects that can be used to control the execution behavior of a particular operation.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> of type <see cref="T:System.String" /> and <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /> object that controls the selection of a destination <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> for a particular message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode">
      <summary>Gets or sets a value that specifies how the <see cref="P:System.Threading.Thread.CurrentPrincipal" /> property is set.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" /> values; the default is <see cref="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete">
      <summary>Gets or sets a value that specifies whether the service object is recycled after the transaction successfully completes.</summary>
      <returns>true if the service object is recycled after the transaction successfully completes; otherwise, false. The default value is the value of <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.RoleProvider">
      <summary>Gets or sets the custom <see cref="T:System.Web.Security.RoleProvider" /> that is used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</summary>
      <returns>The custom <see cref="T:System.Web.Security.RoleProvider" /> that is used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation">
      <summary>Gets or sets the location of the audit log.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.AuditLogLocation" /> values.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
      <summary>Gets or sets a value that controls what service authorization events are audited.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.AuditLevel" /> values. The default is <see cref="F:System.ServiceModel.AuditLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager">
      <summary>Gets the <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> that provides authorization checking for the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> that provides authorization checking for the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.SingletonInstanceContext">
      <summary>Gets or sets the singleton <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> to be used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</summary>
      <returns>The singleton <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> to be used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure">
      <summary>Gets or sets a value that specifies whether to suppress non-critical exceptions that occur during the logging process.</summary>
      <returns>true if non-critical exceptions that occur during the logging process are suppressed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext">
      <summary>Gets or sets the synchronization context that is used to invoke the service operations.</summary>
      <returns>The <see cref="T:System.Threading.SynchronizationContext" /> object used to determine on which thread the service operation is invoked.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose">
      <summary>Gets or sets a value that specifies whether to automatically complete the current transaction when the session closes. </summary>
      <returns>true if transactions automatically complete when the session closes; otherwise, false. The default is the value specified by <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.Type">
      <summary>Gets or sets the contract type.</summary>
      <returns>The type of the contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation">
      <summary>Gets or sets the operation to which unrecognized messages are dispatched.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> to which unrecognized messages are dispatched.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand">
      <summary>Gets or sets the value of <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />.</summary>
      <returns>The value of <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
      <summary>Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class with a specified address against which to test a message.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</param>
      <param name="includeHostNameInComparison">true if the host name is included in the endpoint address comparison; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address">
      <summary>Gets the address that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1">
      <summary>Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</summary>
      <returns>An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />. </returns>
      <typeparam name="FilterData">Data associated with the filters in the table.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison">
      <summary>Gets a value that indicates whether the host name is included in the endpoint address comparison.</summary>
      <returns>true if the host name is included in the endpoint address comparison; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Tests whether a message satisfies the specified endpoint address.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, false. </returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Tests whether a buffered message satisfies the specified endpoint address.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, false. </returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBuffer" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>The run-time object that exposes properties that enable the insertion of run-time extensions or modifications for messages in service applications. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> class with the specified address, contract name, and contract namespace. </summary>
      <param name="address">The endpoint address.</param>
      <param name="contractName">The name of the endpoint contract.</param>
      <param name="contractNamespace">The namespace of the endpoint contract.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter">
      <summary>Gets or sets a <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object that is used to identify whether a particular message is destined for the endpoint address.</summary>
      <returns>The address filter used to route the message to the appropriate endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher">
      <summary>Gets the associated <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> object, which can be used to inspect or modify other channel-related values and behaviors.</summary>
      <returns>The <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" /> property gets the associated <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object that is used to identify whether a message is destined for this contract.</summary>
      <returns>The filter used to route messages to the appropriate contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName">
      <summary>Gets the endpoint contract name.</summary>
      <returns>The name of the endpoint contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace">
      <summary>Gets the namespace of the endpoint contract.</summary>
      <returns>The namespace of the endpoint contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime">
      <summary>Gets the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object used to inspect, modify, or extend run-time behavior across a service endpoint or a client callback endpoint. </summary>
      <returns>The <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" /> object used to inspect, modify, or extend run-time behavior across a service endpoint or a client callback endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress">
      <summary>Gets the address of the endpoint.</summary>
      <returns>The address of the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority">
      <summary>Gets or sets the priority of the <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" /> and the <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" /> combination when the <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" /> is selecting endpoints.</summary>
      <returns>The priority of the filter.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ExceptionHandler">
      <summary>Extend the <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> class to create an exception handler for unhandled exceptions that occur within the Windows Communication Foundation (WCF) runtime.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ExceptionHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle">
      <summary>Gets an instance of <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> that handles all exceptions.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> object that returns true for all exceptions.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
      <summary>Gets or sets the current <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> implementation for the application domain.</summary>
      <returns>Assign a custom <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> object that receives unhandled exceptions that occur on asynchronous Windows Communication Foundation (WCF) threads.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
      <summary>When overridden in a derived class, returns true if the exception has been handled, or false if the exception should be rethrown and the application terminated. </summary>
      <returns>true if the exception has been handled; otherwise, false.</returns>
      <param name="exception">The exception the occurred within the Windows Communication Foundation (WCF) runtime and which may terminate the application.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
      <summary>Gets or sets the current transport <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> implementation for the application domain.</summary>
      <returns>A custom <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> object that receives unhandled exceptions that occur within the global Windows Communication Foundation (WCF) transports.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>Represents information about a SOAP fault that is specified in a <see cref="T:System.ServiceModel.FaultContractAttribute" /> attribute.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> class that uses the specified action and detail type.</summary>
      <param name="action">The action of the SOAP fault.</param>
      <param name="detail">The detail type that is serialized as the SOAP fault detail.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>Gets the SOAP fault action value.</summary>
      <returns>The SOAP fault action value.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>The type of the object that is serialized as the SOAP fault detail.</summary>
      <returns>The <see cref="T:System.Type" /> that represents the serialized SOAP fault detail.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException">
      <summary>The exception that is thrown when a filter or filter table attempts to access the body of an unbuffered message.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> with a specified error message and the filters that attempted to inspect the body of the message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="filters">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> that attempted to inspect the body of the message.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class with a specified error message and the inner exception that caused the current exception. </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class with a specified error message, the inner exception that caused the current exception, and the collection that contains the filter that attempted to inspect the body. </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
      <param name="filters">The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> that contains the filter that attempted to inspect the body of the message.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.Filters">
      <summary>Gets the collection of filters that contains the filter that caused the exception to be thrown.</summary>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> that contains the filters that caused the exception to be thrown.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
      <summary>Defines the methods that enable the initialization and recycling of thread-local storage with the thread that invokes user code.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)">
      <summary>Implement to participate in cleaning up the thread that invoked the operation.</summary>
      <param name="correlationState">The correlation object returned from the <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
      <summary>Implement to participate in the initialization of the operation thread.</summary>
      <returns>A correlation object passed back as the parameter of the <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" /> method.</returns>
      <param name="instanceContext">The service instance for the operation.</param>
      <param name="channel">The client channel.</param>
      <param name="message">The incoming message.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IChannelInitializer">
      <summary>Defines the interface to notify a service or client when a channel is created.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IChannelInitializer.Initialize(System.ServiceModel.IClientChannel)">
      <summary>Initializes the <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> class with a specified <see cref="T:System.ServiceModel.IClientChannel" />.</summary>
      <param name="channel">The <see cref="T:System.ServiceModel.IClientChannel" /> used to initialize the <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Defines methods that are used to control the conversion of messages into objects and objects into messages for client applications.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Converts a message into a return value and out parameters that are passed back to the calling operation.</summary>
      <returns>The return value of the operation.</returns>
      <param name="message">The inbound message.</param>
      <param name="parameters">Any out values.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Converts an <see cref="T:System.Object" /> array into an outbound <see cref="T:System.ServiceModel.Channels.Message" />. </summary>
      <returns>The SOAP message sent to the service operation.</returns>
      <param name="messageVersion">The version of the SOAP message to use.</param>
      <param name="parameters">The parameters passed to the WCF client operation.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <summary>Defines a message inspector object that can be added to the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" /> collection to view or modify messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.</summary>
      <param name="reply">The message to be transformed into types and handed back to the client application.</param>
      <param name="correlationState">Correlation state data.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
      <summary>Enables inspection or modification of a message before a request message is sent to a service.</summary>
      <returns>The object that is returned as the <paramref name="correlationState " />argument of the <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" /> method. This is null if no correlation state is used.The best practice is to make this a <see cref="T:System.Guid" /> to ensure that no two <paramref name="correlationState" /> objects are the same.</returns>
      <param name="request">The message to be sent to the service.</param>
      <param name="channel">The WCF client object channel.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Defines the contract for an operation selector.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Gets a value that indicates whether parameters are required to determine the selection.</summary>
      <returns>true if parameters are required; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Returns the selected operation.</summary>
      <returns>The operation selected by the custom operation selector.</returns>
      <param name="method">The method invoked.</param>
      <param name="parameters">The parameters passed to the method.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <summary>Defines methods that deserialize request messages and serialize response messages in a service application.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Deserializes a message into an array of parameters.</summary>
      <param name="message">The incoming message.</param>
      <param name="parameters">The objects that are passed to the operation as parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <summary>Serializes a reply message from a specified message version, array of parameters, and a return value.</summary>
      <returns>The serialized reply message.</returns>
      <param name="messageVersion">The SOAP message version.</param>
      <param name="parameters">The out parameters.</param>
      <param name="result">The return value.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector">
      <summary>Defines the methods that enable custom inspection or modification of inbound and outbound application messages in service applications.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
      <summary>Called after an inbound message has been received but before the message is dispatched to the intended operation.</summary>
      <returns>The object used to correlate state. This object is passed back in the <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)" /> method.</returns>
      <param name="request">The request message.</param>
      <param name="channel">The incoming channel.</param>
      <param name="instanceContext">The current service instance.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Called after the operation has returned but before the reply message is sent.</summary>
      <param name="reply">The reply message. This value is null if the operation is one way.</param>
      <param name="correlationState">The correlation object returned from the <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)" /> method.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector">
      <summary>Defines the contract that associates incoming messages with a local operation to customize service execution behavior.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)">
      <summary>Associates a local operation with the incoming method.</summary>
      <returns>The name of the operation to be associated with the <paramref name="message" />.</returns>
      <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> to be associated with an operation.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IErrorHandler">
      <summary>Allows an implementer to control the fault message returned to the caller and optionally perform custom error processing such as logging.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)">
      <summary>Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases. </summary>
      <returns>true if Windows Communication Foundation (WCF) should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; otherwise, false. The default is false.</returns>
      <param name="error">The exception thrown during processing.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
      <summary>Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1" /> that is returned from an exception in the course of a service method.</summary>
      <param name="error">The <see cref="T:System.Exception" /> object thrown in the course of the service operation.</param>
      <param name="version">The SOAP version of the message.</param>
      <param name="fault">The <see cref="T:System.ServiceModel.Channels.Message" /> object that is returned to the client, or service, in the duplex case.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInputSessionShutdown">
      <summary>Defines the contract that must be implemented to shut down an input session.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted(System.ServiceModel.IDuplexContextChannel)">
      <summary>Indicates that the channel has faulted.</summary>
      <param name="channel">The <see cref="T:System.ServiceModel.IDuplexContextChannel" /> that has faulted.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving(System.ServiceModel.IDuplexContextChannel)">
      <summary>Indicates when the client channel is done receiving messages as part of the duplex message exchange.</summary>
      <param name="channel">The <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that is done receiving.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer">
      <summary>Defines the methods necessary to inspect or modify the creation of <see cref="T:System.ServiceModel.InstanceContext" /> objects when required.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)">
      <summary>Provides the ability to modify the newly created <see cref="T:System.ServiceModel.InstanceContext" /> object.</summary>
      <param name="instanceContext">The system-supplied instance context.</param>
      <param name="message">The message that triggered the creation of the instance context.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
      <summary>Implement to participate in the creation or choosing of a <see cref="T:System.ServiceModel.InstanceContext" /> object, especially to enable shared sessions.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
      <summary>Called when a new message is received.</summary>
      <returns>The <see cref="T:System.ServiceModel.InstanceContext" /> object that is used to process the message; return null to instruct WCF to create a new <see cref="T:System.ServiceModel.InstanceContext" /> object.</returns>
      <param name="message">The incoming message.</param>
      <param name="channel">The channel that received the message.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
      <summary>Called when null is returned from the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" /> method.</summary>
      <param name="instanceContext">The new <see cref="T:System.ServiceModel.InstanceContext" /> object.</param>
      <param name="message">The incoming message.</param>
      <param name="channel">The channel that received the message.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)">
      <summary>Called when all <see cref="T:System.ServiceModel.InstanceContext" /> activities have completed to enable implementers to prevent the <see cref="T:System.ServiceModel.InstanceContext" /> from being recycled.</summary>
      <returns>true if Windows Communication Foundation (WCF) is to close and recycle the <see cref="T:System.ServiceModel.InstanceContext" /> object and adjust the value of <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />; otherwise, false.</returns>
      <param name="instanceContext">The <see cref="T:System.ServiceModel.InstanceContext" /> object that is considered idle.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)">
      <summary>Called when the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> method returns false to enable implementers to provide a callback to notify WCF when the <see cref="T:System.ServiceModel.InstanceContext" /> object is finished.</summary>
      <param name="callback">The <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> object that notifies WCF when the <see cref="T:System.ServiceModel.InstanceContext" /> object is to be closed and recycled.</param>
      <param name="instanceContext">The current <see cref="T:System.ServiceModel.InstanceContext" />. </param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInstanceProvider">
      <summary>Declares methods that provide a service object or recycle a service object for a Windows Communication Foundation (WCF) service.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)">
      <summary>Returns a service object given the specified <see cref="T:System.ServiceModel.InstanceContext" /> object.</summary>
      <returns>A user-defined service object.</returns>
      <param name="instanceContext">The current <see cref="T:System.ServiceModel.InstanceContext" /> object.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)">
      <summary>Returns a service object given the specified <see cref="T:System.ServiceModel.InstanceContext" /> object.</summary>
      <returns>The service object.</returns>
      <param name="instanceContext">The current <see cref="T:System.ServiceModel.InstanceContext" /> object.</param>
      <param name="message">The message that triggered the creation of a service object.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)">
      <summary>Called when an <see cref="T:System.ServiceModel.InstanceContext" /> object recycles a service object.</summary>
      <param name="instanceContext">The service's instance context.</param>
      <param name="instance">The service object to be recycled.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
      <summary>Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
      <summary>An asynchronous call to begin using a user interface to obtain credential information.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</returns>
      <param name="channel">The client channel.</param>
      <param name="callback">The callback object.</param>
      <param name="state">Any state data.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Called when the <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> has finished.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1">
      <summary>An interface that defines the contract that a filter table must implement to inspect messages with query criteria derived from one or more filters.</summary>
      <typeparam name="TFilterData">The type of data associated with each filter in the table.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message, and returns that filter in an out parameter.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="filter">out parameter that stores the filter that is satisfied by the <paramref name="message" />. If no filter was found, the parameter is set to its default value.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message, and returns that filter in an out parameter.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; false if no filter is satisfied.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="filter">out parameter that stores the filter that is satisfied by the <paramref name="message" />. If no filter was found, the parameter is set to its default value.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified message, and adds the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="results">Reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified buffered message, and adds the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; false if no filter is satisfied.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="results">Reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message, and adds the matching filter data to a collection.</summary>
      <returns>true if the match criterion of exactly one filter in the table is satisfied by the message; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="value">out parameter that stores the <paramref name="FilterData" /> that matches the <paramref name="message" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message, and adds the matching filter data to a collection.</summary>
      <returns>true if the match criterion of exactly one filter in the table is satisfied by the message; false if no filter is satisfied.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="value">out parameter that stores the <paramref name="FilterData" /> that matches the <paramref name="messageBuffer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
      <summary>Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message, and adds the <paramref name="FilterData" /> of the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="results">Reference parameter that stores the filter data of the matching filters in a generic collection.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
      <summary>Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message, and adds the <paramref name="FilterData" /> of the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; false if no filter is satisfied.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="results">Reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
      <summary>Represents the method that is called when an <see cref="T:System.ServiceModel.InstanceContext" /> object has finished processing. </summary>
      <param name="instanceContext">The instance context that has finished processing.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
      <summary>An abstract base class for the exceptions that are thrown if an attempt is made to access the body of a message when it is not allowed.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> class with serialized and contextual information specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IOperationInvoker">
      <summary>Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs">
      <summary>Returns an <see cref="T:System.Array" /> of parameter objects.</summary>
      <returns>The parameters that are to be used as arguments to the operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)">
      <summary>Returns an object and a set of output objects from an instance and set of input objects.  </summary>
      <returns>The return value.</returns>
      <param name="instance">The object to be invoked.</param>
      <param name="inputs">The inputs to the method.</param>
      <param name="outputs">The outputs from the method.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
      <summary>An asynchronous implementation of the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> method.</summary>
      <returns>A <see cref="T:System.IAsyncResult" /> used to complete the asynchronous call.</returns>
      <param name="instance">The object to be invoked.</param>
      <param name="inputs">The inputs to the method.</param>
      <param name="callback">The asynchronous callback object.</param>
      <param name="state">Associated state data.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)">
      <summary>The asynchronous end method.</summary>
      <returns>The return value.</returns>
      <param name="instance">The object invoked.</param>
      <param name="outputs">The outputs from the method.</param>
      <param name="result">The <see cref="T:System.IAsyncResult" /> object.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous">
      <summary>Gets a value that specifies whether the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> or <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /> method is called by the dispatcher.</summary>
      <returns>true if the dispatcher invokes the synchronous operation; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IParameterInspector">
      <summary>Defines the contract implemented by custom parameter inspectors that enables inspection or modification of information prior to and subsequent to calls on either the client or the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)">
      <summary>Called after client calls are returned and before service responses are sent.</summary>
      <param name="operationName">The name of the invoked operation.</param>
      <param name="outputs">Any output objects.</param>
      <param name="returnValue">The return value of the operation.</param>
      <param name="correlationState">Any correlation state returned from the <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" /> method, or null. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])">
      <summary>Called before client calls are sent and after service responses are returned.</summary>
      <returns>The correlation state that is returned as the <paramref name="correlationState" /> parameter in <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />. Return null if you do not intend to use correlation state.</returns>
      <param name="operationName">The name of the operation.</param>
      <param name="inputs">The objects passed to the method by the client.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter">
      <summary>Represents a query that is satisfied by every non-null message that it tests.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>This method returns true for every message that is not null.</summary>
      <returns>Returns true.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>The <see cref="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.MessageBuffer)" /> method returns true for every message that is not null.</summary>
      <returns>Returns true.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBuffer" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter">
      <summary>Represents a query that is never satisfied by a message that it tests.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>This method returns false for every message that is not null.</summary>
      <returns>Returns false.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>This method returns false for every message that is not null.</summary>
      <returns>Returns false.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBuffer" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MessageFilter">
      <summary>abstract base class for different classes of filters used to query messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor">
      <summary>When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1">
      <summary>Creates a filter table for a filter that has a specified type of data associated with it.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</returns>
      <typeparam name="FilterData">Data associated with the filters in the table.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>When overridden in a derived class, tests whether a message satisfies the filter criteria. The body cannot be examined.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the filter criteria; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the filter criteria; otherwise, false.</returns>
      <param name="buffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test. </param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MessageFilterException">
      <summary>The base class for the exceptions that are thrown when the quota of nodes inspected by a filter is exceeded.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" /> class with a specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to deserialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" /> class.</summary>
      <param name="message">The message to accompany the exception.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" /> class with a specified error message and a collection of the filters that exceeded the quota of nodes.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="filters">The collection of <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />s that exceeded the quota of nodes.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" /> class with a specified error message and the inner exception that caused the current exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterException" /> class, the inner exception that caused the current exception, and a collection of the filters that exceeded the quota of nodes.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
      <param name="filters">The collection of <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />s that exceeded the quota of nodes.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterException.Filters">
      <summary>Gets the collection of <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />s that exceeded the quota of nodes.</summary>
      <returns>The collection of <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />s that exceeded the quota of nodes.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MessageFilterTable`1">
      <summary>Provides the generic implementation of a filter table.</summary>
      <typeparam name="TFilterData">The type of the <paramref name="FilterData" /> associated with the filter.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class with a default priority of 0.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class with the specified initial default priority.</summary>
      <param name="defaultPriority">The default priority for filter table.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Adds a filter/<paramref name="FilterData" /> (key/value) pair to the filter table.</summary>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <paramref name="FilterData" />&gt; added to the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)">
      <summary>Adds a filter and its associated <paramref name="FilterData" /> to the filter table.</summary>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</param>
      <param name="data">The <paramref name="FilterData" /> associated with the filter used as the value of the pair added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filter" /> is already in the table.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)">
      <summary>Adds a filter and its associated <paramref name="FilterData" /> to the action filter table with a specified priority.</summary>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</param>
      <param name="data">The <paramref name="FilterData" /> associated with the filter used as the value of the pair added.</param>
      <param name="priority">The priority of the filter added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> cannot be null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filter" /> already exists in the table.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="filter" /> type does not match table type.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear">
      <summary>Removes all filters and their associated data from the filter table.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Determines whether the filter table contains a specified filter and its associated <paramref name="FilterData" />.</summary>
      <returns>true if the <paramref name="filter" />/<paramref name="FilterData" /> pair is contained in the filter table; otherwise false.</returns>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <paramref name="FilterData" />&gt; to find in the table.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Determines whether the filter table contains a specified filter.</summary>
      <returns>true if the <paramref name="filter" /> is contained in the filter table; otherwise false.</returns>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> being tested for.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)">
      <summary>Copies the filter/<paramref name="FilterData" /> pairs to an array that starts at a specified index.</summary>
      <param name="array">The zero-based array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <paramref name="FilterData" />&gt; to which the pairs are being copied.</param>
      <param name="arrayIndex">The index at which to begin copying.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Count">
      <summary>Gets the number of filter/<paramref name="FilterData" /> pairs in the filter table.</summary>
      <returns>The number of filter/<paramref name="FilterData" /> pairs items in the filter table.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Instantiates a filter table for a specified type of filter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> that is created that contains the specified filter.</returns>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to be contained in the filter table created.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority">
      <summary>Gets or sets the default priority for the filter table.</summary>
      <returns>The default priority assigned by filters added to the filter table. The default value for the default priority is 0.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the filter table.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, <paramref name="FilterData" />&gt;&gt; that can be used to iterate through the filter table.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an out parameter.</summary>
      <returns>true if match criterion of one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the message; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="filter">The out parameter that stores the filter that is satisfied by the <paramref name="message" />. If no filter was found, the parameter is set to its default value.</param>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> matches the <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an out parameter.</summary>
      <returns>true if match criterion of exactly one filter in the table is satisfied by the message; false if no filter is satisfied.</returns>
      <param name="buffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="filter">The out parameter that stores the filter that is satisfied by the <paramref name="messageBuffer" />.</param>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> matches the <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Returns a value that indicates whether the match criterion of an <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message, and adds the matching filters to a collection.</summary>
      <returns>true if match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by <paramref name="message" />; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="results">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">A filter attempted to examine the contents of the message body.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the matching filters from the highest priority set of filters in which at least one match is found to a collection. </summary>
      <returns>true if match criterion of at least one filter in the table is satisfied by <paramref name="message" />; false if no filter is satisfied.</returns>
      <param name="buffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="results">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message and adds the matching filter data to a collection.</summary>
      <returns>true if the match criterion of one filter in the table is satisfied by the message; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="data">The out parameter that stores the <paramref name="FilterData" /> that matches the <paramref name="message" />.</param>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="message" />.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">A filter attempted to examine the contents of the message body.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message and adds the matching filter data to a collection.</summary>
      <returns>true if the match criterion of one filter in the table is satisfied by the buffered message; false if no filter is satisfied.</returns>
      <param name="buffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="data">The out parameter that stores the <paramref name="FilterData" /> that matches the <paramref name="messageBuffer" />.</param>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
      <summary>Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</summary>
      <returns>true if match criterion of exactly one filter in the table is satisfied by the message; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="results">The reference parameter that stores the <paramref name="FilterData" /> of the matching action filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">A filter attempted to examine the contents of the message body.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message buffer and adds the <paramref name="FilterData" /> of the matching filters to the <paramref name="results" /> collection.</summary>
      <returns>true if the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> in the table is satisfied by the buffered message; false if no filter is satisfied.</returns>
      <param name="buffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="results">The reference parameter that stores the filter data of the filters that are satisfied by the <paramref name="messageBuffer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Returns the priority of a given filter in the table.</summary>
      <returns>The priority of the <paramref name="filter" />.</returns>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> contained in the filter table created.</param>
      <exception cref="T:System.InvalidOperationException">The specified filter does not exist in the filter table.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly">
      <summary>Gets a value that indicates whether the filter table is read-only.</summary>
      <returns>false for all filter tables.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Gets or sets the filter data associated with the specified <paramref name="filter" />.</summary>
      <returns>The filter data associated with the <paramref name="filter" />. If the specified <paramref name="filter" /> is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new filter data element with the specified <paramref name="filter" /> as the key.</returns>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associated with the filter data to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved, and the <paramref name="filter" /> is not in the table.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys">
      <summary>Gets a collection of all the filters contained in the filter table.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the filters contained in the filter table.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Removes a specified filter/<paramref name="FilterData" /> pair from the filter table.</summary>
      <returns>true if the filter/<paramref name="FilterData" /> pair was found and removed; false if it was not found.</returns>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <paramref name="FilterData" />&gt; to remove from the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Removes a filter and its associated <paramref name="FilterData" /> from the filter table.</summary>
      <returns>true if the filter was found and removed; false if it was not found.</returns>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the filter table.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the filter table.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)">
      <summary>Checks whether a filter is stored in the filter table.</summary>
      <returns>true if there is a filter in the filter table that has data associated with it; otherwise false.</returns>
      <param name="filter">The <paramref name="filter" /> that is used as a key to retrieve the data.</param>
      <param name="data">The <paramref name="data" /> associated with the <paramref name="filter" />.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Values">
      <summary>Gets a collection of all the <paramref name="FilterData" /> contained in the filter table.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <paramref name="FilterData" /> contained in the filter table.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
      <summary>The exception that is thrown when multiple filters match, but only one was expected.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> class with a specified error message and a collection of filters. </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="filters">A collection of message filters.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> class. </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> class with a specified error message, an exception, and a collection of filters.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
      <param name="filters">A collection of message filters.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.Filters">
      <summary>Gets the collection of filters that caused the exception to be thrown.</summary>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> that contains the filters that caused the exception to be thrown.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException">
      <summary>The exception that is thrown when an <see cref="T:System.Xml.XPath.XPathNavigator" /> is directed to examine the body of an unbuffered message.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" /> class with a specified error message and the inner exception that caused the current exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
      <summary>Represents a query that tests whether a message matches an EndpointAddress using a Longest-Prefix Match for the URI component.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class. </summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class. </summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</param>
      <param name="includeHostNameInComparison">true if the host name is included in the endpoint address comparison; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address">
      <summary>Gets the Endpoint Address that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1">
      <summary>Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</summary>
      <returns>An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />. </returns>
      <typeparam name="FilterData">Data associated with the filters in the table.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison">
      <summary>Gets a value that indicates whether the host name is included in the endpoint address comparison.</summary>
      <returns>true if the host name is included in the endpoint address comparison; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Tests whether a message satisfies the specified endpoint address.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, false. </returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Tests whether a buffered message satisfies the specified endpoint address.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, false. </returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBuffer" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator">
      <summary>Provides read-only, random access to data contained in XML documents and enables efficient querying for specified nodes.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition(System.Int64,System.Int64)">
      <summary>When overridden in a derived class, returns a value that describes the document order of the two specified positions.</summary>
      <returns>One of the <see cref="T:System.Xml.XmlNodeOrder" /> values that describes the relation of <paramref name="firstPosition" /> to <paramref name="secondPosition" /> in the document.</returns>
      <param name="firstPosition">The first position in the comparison.</param>
      <param name="secondPosition">The second position in the comparison.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPosition" /> or <paramref name="secondPosition" /> is not valid.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.SeekableXPathNavigator.CurrentPosition">
      <summary>When overridden in a derived class, gets or sets a value associated with the node in the data where the XPath navigator is positioned.</summary>
      <returns>A value that is associated with the navigator’s current position. </returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetLocalName(System.Int64)">
      <summary>When overridden in a derived class, returns the local name of the node at the position specified.</summary>
      <returns>The local name of the node at the specified position. <see cref="F:System.String.Empty" /> is returned if the node does not have a local name, for example if the current position references a text node.</returns>
      <param name="nodePosition">The position of the node whose local name is being retrieved.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="nodePosition" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetName(System.Int64)">
      <summary>When overridden in a derived class, returns the name of the node at the specified position.</summary>
      <returns>The name of the node at <paramref name="nodePosition" />. <see cref="F:System.String.Empty" /> is returned if the node does not have a name.</returns>
      <param name="nodePosition">The position of the node whose name is being retrieved.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="nodePosition" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace(System.Int64)">
      <summary>When overridden in a derived class, returns the namespace of the node at the specified position.</summary>
      <returns>The namespace of the node at <paramref name="nodePosition" />. <see cref="F:System.String.Empty" /> is returned if the node does not have a namespace.</returns>
      <param name="nodePosition">The position of the node whose namespace is being retrieved.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="nodePosition" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNodeType(System.Int64)">
      <summary>When overridden in a derived class, returns the type of the node at the specified position.</summary>
      <returns>One of the <see cref="T:System.Xml.XPath.XPathNodeType" /> values that indicate the type of the XML node.</returns>
      <param name="nodePosition">The position of the node whose node type is being retrieved.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="nodePosition" /> is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetValue(System.Int64)">
      <summary>When overridden in a derived class, returns the text value of the node at the specified position.</summary>
      <returns>The text value of the node at <paramref name="nodePosition" />. <see cref="F:System.String.Empty" /> is returned if the node does not have a text value.</returns>
      <param name="nodePosition">The position of the node whose text value is being retrieved.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="nodePosition" /> is invalid.</exception>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ServiceThrottle">
      <summary>Controls the throughput of a service to optimize availability and performance.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls">
      <summary>Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <see cref="T:System.ServiceModel.ServiceHost" />.</summary>
      <returns>The upper limit of active messages in the service. The default is 16.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances">
      <summary>Gets or sets the maximum number of service objects that can execute at one time.</summary>
      <returns>The maximum number of <see cref="T:System.ServiceModel.InstanceContext" /> objects in the service at one time. The default is 26.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions">
      <summary>Gets or sets a value that specifies the maximum number of sessions a <see cref="T:System.ServiceModel.ServiceHost" /> object can accept at one time.</summary>
      <returns>The maximum number of sessions a service host accepts. The default is 10.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathMessageContext">
      <summary>Defines several XPath functions and namespace mappings commonly used when evaluating XPath expressions against SOAP documents.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor">
      <summary>Creates an instance of <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor(System.Xml.NameTable)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> class with the specified <see cref="T:System.Xml.NameTable" />.</summary>
      <param name="table">A <see cref="T:System.Xml.NameTable" /> class used internally to store strings.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.CompareDocument(System.String,System.String)">
      <summary>Compares the base Uniform Resource Identifiers (URIs) of two documents based upon the order the documents were loaded by the XSLT processor.</summary>
      <returns>Always returns 0.</returns>
      <param name="baseUri">The base URI of the first document to compare.</param>
      <param name="nextBaseUri">The base URI of the second document to compare.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>Evaluates whether to preserve white space nodes or strip them for the given context.</summary>
      <returns>Always returns false.</returns>
      <param name="node">The white space node that is to be preserved or stripped in the current context.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>Resolves a function reference and returns an T:System.Xml.Xsl.IXsltContextFunction that represents the function.</summary>
      <returns>An T:System.Xml.Xsl.IXsltContextFunction that represents the function.</returns>
      <param name="prefix">The prefix of the function as it appears in the XPath expression.</param>
      <param name="name">The name of the function.</param>
      <param name="argTypes">An array of argument types for the function being resolved. This allows you to select between methods with the same name (for example, overloaded methods).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argTypes" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveVariable(System.String,System.String)">
      <summary>Resolves a variable reference and returns an <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> that represents the variable.</summary>
      <returns>An <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> that represents the variable at runtime.</returns>
      <param name="prefix">The prefix of the variable as it appears in the XPath expression.</param>
      <param name="name">The name of the variable.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace">
      <summary>Gets a value that indicates whether to include white space nodes in the output.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathMessageFilter">
      <summary>Represents a query on an XML document defined by an XPath 1.0 expression.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class that matches all well-formed XML documents.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class using an XPath expression to specify query criteria for the filter.</summary>
      <param name="xpath">A <see cref="T:System.String" /> that contains an XPath 1.0 expression. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xpath" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class using the specified XPath expression and namespace manager.</summary>
      <param name="xpath">An XPath 1.0 expression. </param>
      <param name="namespaces">An <see cref="T:System.Xml.XmlNamespaceManager" /> that resolves any namespace prefixes in <paramref name="xpath" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xpath" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.Xsl.XsltContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class using a specified XPath expression and <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
      <param name="xpath">The XPath 1.0 expression for the filter. </param>
      <param name="context">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, custom functions or variables in <paramref name="xpath" />. </param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class by reading a streamed XPath with the specified XML reader.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read the streamed XPath expression. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class by reading in a streamed XPath with a specified XML reader and using the specified namespace manager.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read the streamed XPath expression. </param>
      <param name="namespaces">An <see cref="T:System.Xml.XmlNamespaceManager" /> that resolves any namespace prefixes in the XPath expression from <paramref name="reader" />. This can also be an <see cref="T:System.Xml.Xsl.XsltContext" /> that defines custom functions or variables. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> is not positioned on the starting element.</exception>
      <exception cref="T:System.InvalidOperationException">There were problems reading the dialect attribute, namespace URI, or duplicate attributes were found.</exception>
      <exception cref="T:System.InvalidOperationException">An invalid dialect attribute was read: it was not XPath.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.Xsl.XsltContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class by reading a streamed XPath with a specified XML reader and using the <see cref="T:System.Xml.Xsl.XsltContext" /> to resolve namespaces, custom functions, and variables.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read the streamed XPath expression. </param>
      <param name="context">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, functions, and variables in the XPath expression from <paramref name="reader" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.CreateFilterTable``1">
      <summary>Creates an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> that has a specified type of data associated with it.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</returns>
      <typeparam name="FilterData">Data associated with the filters in the table.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Tests whether a specified message satisfies the criteria of the XPath filter. This form is not allowed to access the body of the message.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.Message" /> satisfies the filter criteria; otherwise, false. </returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null. </exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">The XPath evaluation attempted to examine the body of the message.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A compiler error occurred. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Determines whether a buffered message satisfies the query criteria of the XPath filter.</summary>
      <returns>true if the <see cref="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.MessageBuffer)" /> satisfies the filter criteria; otherwise false. </returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null. </exception>
      <exception cref="T:System.Xml.XPath.XPathException">A compiler error occurred. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Dispatcher.SeekableXPathNavigator)">
      <summary>Determines whether the XML document provided by the specified optimized XPath navigator satisfies the query criteria of the XPath filter.</summary>
      <returns>true if the data from the <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> satisfies the filter criteria; otherwise, false. </returns>
      <param name="navigator">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> that provides data to test. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> is null. </exception>
      <exception cref="T:System.Xml.XPath.XPathException">A compiler error occurred. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.Xml.XPath.XPathNavigator)">
      <summary>Evaluates the filter over the specified XPath navigator.</summary>
      <returns>true if the data from the <see cref="T:System.Xml.XPath.XPathNavigator" /> satisfies the filter criteria; false otherwise. </returns>
      <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator" /> that provides data to test. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> is null. </exception>
      <exception cref="T:System.Xml.XPath.XPathException">A compiler error occurred. </exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces">
      <summary>Gets the manager that resolves namespace prefixes in the XPath expression that defines the filter.</summary>
      <returns>The <see cref="T:System.Xml.XmlNamespaceManager" /> for the current <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilter.NodeQuota">
      <summary>Gets or sets the maximum number of nodes that should be looked at during filter evaluation.</summary>
      <returns>The maximum number of nodes that should be looked at during filter evaluation.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The quota is zero or negative. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnGetSchema">
      <summary>Gets the schema for the current XML document.</summary>
      <returns>The <see cref="T:System.Xml.Schema.XmlSchema" /> that represents the current document.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnReadXml(System.Xml.XmlReader)">
      <summary>Reads the current XML node.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML document.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> is not positioned on the starting element.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> encountered an empty element.</exception>
      <exception cref="T:System.InvalidOperationException">Content of a node is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnWriteXml(System.Xml.XmlWriter)">
      <summary>Writes a node using <paramref name="writer" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the node.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.ReadXPath(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)">
      <summary>Initializes the current instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> with an XPath obtained from a specified XML reader using a specified namespace manager.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to deserialize the XPath filter.</param>
      <param name="namespaces">The <see cref="T:System.Xml.XmlNamespaceManager" /> used to manage the namespaces being read from.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.StaticGetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gets the type of XML schema used to serialize the XPath filter.</summary>
      <returns>The <see cref="T:System.Xml.Schema.XmLSchemaType" /> used to serialize the XPath filter.</returns>
      <param name="schemas">The <see cref="T:System.Xml.Schema.XmLSchemaSet" /> that contains the cache of XML Schema definition language (XSD) schemas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemas" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>An explicit interface implementation that gets the current schema.</summary>
      <returns>The <see cref="T:System.Xml.Schema.XmlSchema" /> that represents the current document.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>An explicit interface implementation that reads the current XML node.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML document.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>An explicit interface implementation that writes an XML node using <paramref name="writer" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the node.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.TrimToSize">
      <summary>Compacts the XPath filter, which releases all unused memory.</summary>
      <exception cref="T:System.NotImplementedException">In all cases. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPath(System.Xml.XmlWriter,System.Xml.IXmlNamespaceResolver)">
      <summary>Serializes the XPath filter to an <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to serialize the XPath filter.</param>
      <param name="resolver">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> used to resolve any namespace conflict for the XPath filter.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo(System.Xml.XmlWriter,System.String,System.String,System.String,System.Boolean)">
      <summary>Writes the XML XPath element with a specified XML writer.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />. </param>
      <param name="prefix">The namespace prefix of the XPath XML element. </param>
      <param name="localName">The local name of the XPath XML element. </param>
      <param name="ns">The namespace URI to associate with the XML element. </param>
      <param name="writeNamespaces">true if namespaces should be serialized out separately as attributes; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> has length = 0. </exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilter.XPath">
      <summary>Gets the XPath expression that defines the query criteria for the filter.</summary>
      <returns>The XPath expression for the filter.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1">
      <summary>Holds a collection of filter/data pairs for efficient matching.</summary>
      <typeparam name="TFilterData">The type of the filter data associated with each filter in the table.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</summary>
      <param name="capacity">Initial capacity of the table.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Adds a filter/<paramref name="FilterData" /> (key/value) pair to the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</summary>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <paramref name="FilterData" />&gt; to add to the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A compiler error occurred. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)">
      <summary>Adds a filter/data pair to the filter table.</summary>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added. Must be an instance of <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</param>
      <param name="data">The <paramref name="FilterData" /> associated with the filter used as the value of the pair added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="filter" /> is not an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A compiler error occurred. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)">
      <summary>Adds a filter/data pair to the filter table.</summary>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> used as the key of the pair added.</param>
      <param name="data">The <paramref name="FilterData" /> associated with the filter; used as the value of the pair added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A compiler error occurred. </exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear">
      <summary>Removes all filter/data pairs from the filter table.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Determines whether the filter table contains a specified filter and its associated <paramref name="FilterData" />.</summary>
      <returns>true if the filter/FilterData pair is contained in the filter table; otherwise false.</returns>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <paramref name="FilterData" />&gt; to find in the table.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Determines whether the filter table contains a specified filter.</summary>
      <returns>true if the <paramref name="filter" /> is contained in the filter table; otherwise false.</returns>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> being tested for.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)">
      <summary>Copies the filter/<paramref name="FilterData" /> pairs to an array that starts at a specified index.</summary>
      <param name="array">The array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <paramref name="FilterData" />&gt; to which the pairs are being copied.</param>
      <param name="arrayIndex">The index at which to begin copying.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count">
      <summary>Gets the number of filter/data pairs currently in the filter table.</summary>
      <returns>The number of filter/data pairs currently in the filter table.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the filter table.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an out parameter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the message; or null if no filters are found to match.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="filter">The out parameter that stores the filter that is satisfied by the <paramref name="message" />. If no filter was found, the parameter is set to its default value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="message" />.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">A filter attempted to examine the contents of the message body.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an out parameter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the buffered message; or null if no filters are found to match.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="filter">The out parameter that stores the filter that is satisfied by the <paramref name="message" />. If no filter was found, the parameter is set to its default value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBuffer" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the specified message or buffered message and returns that filter in an out parameter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the navigator; or null if no filters are found to match.</returns>
      <param name="navigator">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</param>
      <param name="filter">The out parameter that stores the filter that is satisfied by the <paramref name="message" />. If no filter was found, the parameter is set to its default value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="navigator" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the specified message or buffered message and returns that filter in an out parameter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the navigator; or null if no filters are found to match.</returns>
      <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</param>
      <param name="filter">The out parameter that stores the filter that is satisfied by the <paramref name="navigator" />. If no filter was found, the parameter is set to its default value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="navigator" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified message and adds the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="results">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">A filter attempted to examine the contents of the message body.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; false if no filter is satisfied.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="results">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; false if no filter is satisfied.</returns>
      <param name="navigator">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</param>
      <param name="results">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <summary>Returns a value that indicates whether the match criterion of at least one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; false if no filter is satisfied.</returns>
      <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</param>
      <param name="results">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matches" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified message and returns the matching filter data.</summary>
      <returns>true if the match criterion of one filter in the table is satisfied by the message; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="data">The out parameter that stores the <paramref name="FilterData" /> for the filter that matches the <paramref name="message" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="message" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified buffered message and returns the matching filter data.</summary>
      <returns>true if the match criterion of one filter in the table is satisfied by the buffered message; false if no filter is satisfied.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="data">The out parameter that stores the <paramref name="FilterData" /> for the filter that matches the <paramref name="messageBuffer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="messageBuffer" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and returns the filter data of the matching filter in an out parameter.</summary>
      <returns>true if the match criterion of exactly one filter in the table is satisfied by the <paramref name="navigator" />; false if no filter is satisfied.</returns>
      <param name="navigator">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</param>
      <param name="data">The out parameter that stores the <paramref name="FilterData" /> that matches the <paramref name="navigator" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="navigator" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)">
      <summary>Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.Xml.Xpath.XPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and returns the filter data of the matching filter in an out parameter.</summary>
      <returns>true if the match criterion of exactly one filter in the table is satisfied by the <paramref name="navigator" />; false if no filter is satisfied.</returns>
      <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</param>
      <param name="data">The out parameter that stores the <paramref name="FilterData" /> that matches the <paramref name="navigator" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">More than one filter matches the <paramref name="navigator" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
      <summary>Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message and adds the filter data of the matching filters to a collection.</summary>
      <returns>true if match criterion of at least one filter in the table is satisfied by <paramref name="message" />; false if no filter is satisfied.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</param>
      <param name="results">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
      <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">A filter attempted to examine the contents of the message body.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
      <summary>Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the filter data of the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; false if no filter is satisfied.</returns>
      <param name="messageBuffer">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</param>
      <param name="results">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})">
      <summary>Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and adds the filter data of the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by the <paramref name="navigator" />; false if no filter is satisfied.</returns>
      <param name="navigator">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</param>
      <param name="results">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})">
      <summary>Returns a value that indicates whether the match criterion of at least one <see cref="T:System.Xml.Xpath.XPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and adds the filter data of the matching filters to a collection.</summary>
      <returns>true if the match criterion of at least one filter in the table is satisfied by the <paramref name="navigator" />; false if no filter is satisfied.</returns>
      <param name="navigator">The <see cref="T:System.Xml.Xpath.XPathNavigator" /> to test.</param>
      <param name="results">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<paramref name="FilterData" />&gt;.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="results" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly">
      <summary>The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> is not read-only.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Gets or sets the filter data associated with the specified <paramref name="filter" />.</summary>
      <returns>The filter data associated with the <paramref name="filter" />. If the specified <paramref name="filter" /> is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" /> and a set operation creates a new filter data element with the specified <paramref name="filter" /> as key.</returns>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associated with the filter data to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">A compiler error occurred. </exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and the <paramref name="filter" /> is not in the table.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys">
      <summary>Gets a collection of all the filters contained in the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />s contained in the filter table.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota">
      <summary>Gets or sets the maximum number of XML document nodes that can be examined by the individual filters during a single call to a Match method. This value applies for each filter.</summary>
      <returns>The number of nodes that can be examined.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <summary>Removes a filter and its associated filter data from the filter table.</summary>
      <returns>true if the filter/<paramref name="FilterData" /> pair was found and removed; false if it was not found.</returns>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <paramref name="FilterData" />&gt; to remove from the table.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)">
      <summary>Removes a filter and its associated filter data from the filter table.</summary>
      <returns>true if the filter was found and removed; otherwise, false. </returns>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="filter" /> is not a <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)">
      <summary>Removes an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> and its associated filter data from the filter table.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> was found and removed; otherwise, false.</returns>
      <param name="filter">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filter" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="filter" /> is not an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through the filter table.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize">
      <summary>Compacts the filter table, purging any excess allocations or buffers.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)">
      <summary>Checks whether a filter is stored in the filter table.</summary>
      <returns>true if the <paramref name="filter" /> is present in the filter table; false otherwise.</returns>
      <param name="filter">A key to retrieve the data.</param>
      <param name="data">The <paramref name="data" /> associated with the <paramref name="filter" /> when this method returns true; otherwise, the default value for the type of the <paramref name="data" /> parameter.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values">
      <summary>Gets a collection of all the <paramref name="FilterData" /> contained in the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <paramref name="FilterData" /> contained in the filter table.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.XPathNavigatorException">
      <summary>The exception that is thrown when the quota of nodes allowed to be inspected by an XPathNavigator is exceeded.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathNavigatorException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathNavigatorException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathNavigatorException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathNavigatorException" /> class with a specified error message and the inner exception that caused the current exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding">
      <summary>The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> class maps Microsoft Message Queuing (MSMQ) messages to Windows Communication Foundation (WCF) messages.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.#ctor(System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> class by using the specified <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" />.</summary>
      <param name="securityMode">The security mode supported by the Message Queuing (MSMQ) integration channel</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not within the range of <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" /> values.</exception>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> class from the settings of a specified configuration binding element.</summary>
      <param name="configurationName">The value of the configurationName attribute that identifies the binding element whose settings are used to initialize the binding.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.CreateBindingElements">
      <summary>Returns the binding elements in the basic profile stack.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the stack of binding elements in the basic profile stack.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.Security">
      <summary>Gets the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity" /> that is associated with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity" /> that is associated with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding.SerializationFormat">
      <summary>Gets or sets the serialization format to be used to serialize or deserialize the message.</summary>
      <returns>A <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> object that represents the type of serialization to use.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement">
      <summary>This binding element can be used to enable Windows Communication Foundation (WCF) applications to send messages to and receive messages from existing MSMQ applications that use either COM, MSMQ native APIs, or the APIs in <see cref="N:System.Messaging" />. Use this class to send and receive messages from MSMQ-based messaging applications.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds a channel factory using the context provided.</summary>
      <returns>An MSMQ integration channel factory that can be used to create channels to send messages to existing MSMQ applications.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</param>
      <typeparam name="TChannel">The type of channel.</typeparam>
      <exception cref="T:System.ArgumentNullException">The context value is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="TChannel" /> is not IOutputChannel.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="ExactlyOnce" /> is true and <paramref name="Durable" /> is false.</exception>
      <exception cref="T:System.InvalidOperationException">CustomDeadLetterQueue is not null and DeadLetterQueue is not Custom.</exception>
      <exception cref="T:System.InvalidOperationException">DeadLetterQueue is set to Custom on Windows 2003/XP.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is false and DeadLetterQueue is Custom.</exception>
      <exception cref="T:System.InvalidOperationException">CustomDeadLetterQueue is set and if there is no write permission to write to queue or if queue does not exist.</exception>
      <exception cref="T:System.InvalidOperationException">If CustomDeadLetterQueue is non-transactional.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is set to WindowsDomain and if MSMQ is installed without Active Directory integration.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is None and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is not None.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is Certificate or WindowsDomain and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is None.</exception>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds a channel listener using the context provided.</summary>
      <returns>An MSMQ integration channel listener that can be used to create channels to receive messages from existing MSMQ applications.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</param>
      <typeparam name="TChannel">The type of channel.</typeparam>
      <exception cref="T:System.ArgumentNullException">The context value is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="TChannel" /> is not IInputChannel.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is true and Durable is false.</exception>
      <exception cref="T:System.InvalidOperationException">Queue not readable.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is true and queue is non-transactional.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is false and queue is transactional.</exception>
      <exception cref="T:System.InvalidOperationException">ReceiveErrorHandling is set to Move and queue name contains a ";" in Windows Vista.</exception>
      <exception cref="T:System.InvalidOperationException">ExactlyOnce is set to true and cannot open retry sub-queue in Windows Vista.</exception>
      <exception cref="T:System.InvalidOperationException">ReceiveErrorHandling is set to Reject or Move and the platform is Windows Vista.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is set to WindowsDomain and if MSMQ is installed without Active Directory integration.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is None and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is not None.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> is Certificate or WindowsDomain and <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> is None.</exception>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether you can build a channel factory with the context provided.</summary>
      <returns>true if you can build a channel factory with the context provided; otherwise, false. This method returns true only if <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</param>
      <typeparam name="TChannel">The type of channel.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether you can build a channel listener with the context provided.</summary>
      <returns>true if you can build a channel listener with the context provided; otherwise, false.This method returns true only if <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</param>
      <typeparam name="TChannel">The type of channel.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Clone">
      <summary>Returns a clone of the binding element.</summary>
      <returns>A clone of the binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property of the requested type from the specified BindingContext.</summary>
      <returns>An object of type <paramref name="T" />.</returns>
      <param name="context">The binding context.</param>
      <typeparam name="T">The type of property.</typeparam>
      <exception cref="T:System.ArgumentNullException">Context is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Scheme">
      <summary>Gets a <see cref="T:System.String" /> that contains the scheme used by the binding element.</summary>
      <returns>The <see cref="T:System.String" /> that contains the scheme used by the binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.SerializationFormat">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing MSMQ messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> to be used when serializing MSMQ messages.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not within the values of <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes">
      <summary>Gets or sets an array of <see cref="T:System.Type" /> objects that contain the types to which messages should be deserialized.</summary>
      <returns>An array of <see cref="T:System.Type" /> that contains the types to which messages should be deserialized.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty">
      <summary>Represents the Message Queuing (MSMQ) integration properties for a message.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.AcknowledgeType">
      <summary>Gets or sets the acknowledgment type to return to the sending application.</summary>
      <returns>The acknowledgment type to return to the sending application.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Acknowledgment">
      <summary>Gets the acknowledgment message that Message Queuing (MSMQ) generates.</summary>
      <returns>The acknowledgment message that Message Queuing generates.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.AdministrationQueue">
      <summary>Gets or sets the queue that receives the acknowledgment messages that Message Queuing (MSMQ) generates.</summary>
      <returns>The queue that receives the acknowledgment messages that Message Queuing generates.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.AppSpecific">
      <summary>Specifies additional application-specific information.</summary>
      <returns>An integer value that represents additional application-specific information.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.ArrivedTime">
      <summary>Gets or sets the time that the message arrived in the destination queue.</summary>
      <returns>The time that the message arrived in the destination queue.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Authenticated">
      <summary>Gets or sets whether the message was authenticated.</summary>
      <returns>true if the message was authenticated; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Body">
      <summary>Gets or sets the content of the message.</summary>
      <returns>The content of the MSMQ message body.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.BodyType">
      <summary>Gets or sets the type of data that the message body contains.</summary>
      <returns>The type of data that the message body contains.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.CorrelationId">
      <summary>Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</summary>
      <returns>The message identifier used by acknowledgment, report, and response messages to reference the original message.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.DestinationQueue">
      <summary>Gets or sets the intended destination queue for the message.</summary>
      <returns>The intended destination queue for the message.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Extension">
      <summary>Gets or sets additional, application-defined information associated with the message.</summary>
      <returns>A byte array that contains additional, application-defined information associated with the message.</returns>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Get(System.ServiceModel.Channels.Message)">
      <summary>Gets the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty" /> for a given message.</summary>
      <returns>A <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty" /> object that contains the Message Queuing integration properties for the specified message.</returns>
      <param name="message">The message for which the Message Queuing (MSMQ) integration message properties are to be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">The message is null.</exception>
      <exception cref="T:System.ArgumentNullException">The property collection on the message is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Id">
      <summary>Gets the message's identifier.</summary>
      <returns>The message's identifier.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Label">
      <summary>Gets or sets an application-defined Unicode string that describes the message.</summary>
      <returns>An application-defined Unicode string that describes the message.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.MessageType">
      <summary>Gets the message type: Normal, Acknowledgment, or Report.</summary>
      <returns>The message type: Normal, Acknowledgment, or Report.</returns>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Name">
      <summary>The constant value "MsmqIntegrationMessageProperty".</summary>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.Priority">
      <summary>Gets or sets the message priority, which determines where in the queue the message is placed.</summary>
      <returns>The message priority. The values are defined by <see cref="T:System.Messaging.MessagePriority" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value is not null and is not within the range of <see cref="T:System.Messaging.MessagePriority" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.ResponseQueue">
      <summary>Gets or sets the queue that receives application-generated response messages.</summary>
      <returns>The URI for the queue that receives application-generated response messages.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.SenderId">
      <summary>Gets the identifier of the sending user.</summary>
      <returns>The identifier of the sending user.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.SentTime">
      <summary>Gets the date and time on the sending computer that the message was sent by the source queue manager.</summary>
      <returns>The date and time on the sending computer that the message was sent by the source queue manager.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationMessageProperty.TimeToReachQueue">
      <summary>Gets or sets the maximum amount of time for the message to reach the queue.</summary>
      <returns>The maximum amount of time for the message to reach the queue.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not null and is less than zero.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not infinite and is greater than Int32.MaxValue milliseconds.</exception>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity">
      <summary>The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity" /> class encapsulates the transport security settings for the Message Queuing (MSMQ) integration channel.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity" />.</summary>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity.Mode">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" /> that is associated with the Message Queuing (MSMQ) integration channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" /> that is associated with the Message Queuing integration channel.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurity.Transport">
      <summary>Gets the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with the Message Queuing (MSMQ) integration channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with the Message Queuing integration channel.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode">
      <summary>
        <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode" /> is an enumeration that specifies the security modes supported by the MSMQ integration channel.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode.None">
      <summary>No security.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqIntegrationSecurityMode.Transport">
      <summary>Use the MSMQ transport security.</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1">
      <summary>The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> class encapsulates aMessage Queuing (MSMQ) message that is sent and received, over a Message Queuing integration channel, to and from an existing Message Queuing application.</summary>
      <typeparam name="T">Represents the message body.</typeparam>
      <exception cref="T:System.ArgumentNullException">Message body is null.</exception>
    </member>
    <member name="M:System.ServiceModel.MsmqIntegration.MsmqMessage`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> class with the provided message body.</summary>
      <param name="body">The message body with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> class.</param>
      <exception cref="T:System.ArgumentNullException">Message body is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AcknowledgeType">
      <summary>Gets or sets the <see cref="T:System.Messaging.AcknowledgeTypes" /> that is associated with this message.</summary>
      <returns>The <see cref="T:System.Messaging.AcknowledgeTypes" /> that is associated with this message. May be null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Acknowledgment">
      <summary>Gets the <see cref="T:System.Messaging.Acknowledgment" /> that is associated with this message.</summary>
      <returns>The <see cref="T:System.Messaging.Acknowledgment" /> that is associated with this message. The default value is Acknowledgement.None.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AdministrationQueue">
      <summary>Gets or sets the <see cref="T:System.Uri" /> of the administration queue that is associated with this message.</summary>
      <returns>The <see cref="T:System.Uri" /> of the administration queue that is associated with this message. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AppSpecific">
      <summary>Gets or sets an <see cref="T:System.Int32" /> value that represents any additional application-specific information that is associated with this message.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents any additional application-specific information that is associated with this message. The default value is null when accessed by the sending application and 0 when accessed by the receiving application.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.ArrivedTime">
      <summary>Gets or sets a <see cref="T:System.DateTime" /> that indicates when the message arrived in the destination queue.</summary>
      <returns>A <see cref="T:System.DateTime" /> that indicates when the message arrived in the destination queue.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Authenticated">
      <summary>Gets a Boolean value that indicates whether the message is authenticated.</summary>
      <returns>true if the message is authenticated; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Body">
      <summary>Gets or sets the body of the message.</summary>
      <returns>The body of the message.</returns>
      <exception cref="T:System.ArgumentNullException">Message body is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.BodyType">
      <summary>Gets or sets an <see cref="T:System.Int32" /> value that indicates the type of the body of the message.</summary>
      <returns>An <see cref="T:System.Int32" /> value that indicates the type of the body of the message. May be null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.CorrelationId">
      <summary>Gets or sets a <see cref="T:System.String" /> that contains the correlation identifier for this message.</summary>
      <returns>A <see cref="T:System.String" /> that contains the correlation identifier for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.DestinationQueue">
      <summary>Gets the <see cref="T:System.Uri" /> of the destination queue for this message.</summary>
      <returns>The <see cref="T:System.Uri" /> of the destination queue for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Extension">
      <summary>Gets or sets an array of <see cref="T:System.Byte" /> that contains any additional, application-defined information that is associated with this message.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains any additional, application-defined information that is associated with this message.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Id">
      <summary>Gets a <see cref="T:System.String" /> that contains the message identifier for this message.</summary>
      <returns>A <see cref="T:System.String" /> that contains the message identifier for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Label">
      <summary>Gets or sets a <see cref="T:System.String" /> that contains the message label.</summary>
      <returns>A <see cref="T:System.String" /> that contains the message label.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.MessageType">
      <summary>Gets the <see cref="T:System.Messaging.MessageType" /> that is associated with this message.</summary>
      <returns>The <see cref="T:System.Messaging.MessageType" /> that is associated with this message. May be null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Priority">
      <summary>Gets or sets the <see cref="T:System.Messaging.MessagePriority" /> that is associated with this message.</summary>
      <returns>The <see cref="T:System.Messaging.MessagePriority" /> that is associated with this message. May be null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.ResponseQueue">
      <summary>Gets or sets the <see cref="T:System.Uri" /> of the message queue that receives response messages from the receiving application.</summary>
      <returns>This property defaults to null.This property identifies the queue that receives response messages that the receiving application returns to the sending application. The sending application specifies the response queue when it sends messages to the receiving application. The sending application can specify any available queue as the response queue.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.SenderId">
      <summary>Gets an array of <see cref="T:System.Byte" /> that contains the sender identifier of the sending application.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the sender identifier of the sending application.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.SentTime">
      <summary>Gets a <see cref="T:System.DateTime" /> that indicates when the message was sent by the queue manager of the sending application's computer.</summary>
      <returns>A <see cref="T:System.DateTime" /> that indicates when the message was sent by the queue manager of the sending application's computer. May be null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.TimeToReachQueue">
      <summary>Gets or sets a <see cref="T:System.TimeSpan" /> that indicates the maximum amount of time allowed for the message to reach the destination queue.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that indicates the maximum amount of time allowed for the message to reach the destination queue. May be null.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat">
      <summary>Indicates the formatter that is used to serialize objects that are sent as the body of an MSMQ message.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.Xml">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> is used to serialize the object.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.Binary">
      <summary>The <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> is used to serialize the object.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.ActiveX">
      <summary>The ActiveX formatter is used to serialize the object.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.ByteArray">
      <summary>Serializes the object to an array of bytes.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat.Stream">
      <summary>Serializes the object to a stream.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService">
      <summary>Provides a basic implementation of a custom peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval">
      <summary>Gets or sets the recurring length of time after which stale entries are deleted from the peer resolver service's registration lookup table.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> that specifies the time interval after which stale entries are deleted from the peer resolver service's registration lookup table.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The interval is either zero or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt to set the property was made after a call to <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Close">
      <summary>Closes the peer resolver service.</summary>
      <exception cref="T:System.InvalidOperationException">The service has been closed by a previous call to this method.</exception>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape">
      <summary>Gets or sets whether referrals are shared by the peer resolver service.</summary>
      <returns>True if referrals are shared by the peer resolver service; false if they are not.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.GetServiceSettings">
      <summary>Obtains the specific response settings for the peer resolver service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" /> that contains the specific response settings for the custom peer resolver service, including cleanup and refresh interval settings.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open">
      <summary>Opens the peer resolver service.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" /> or <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" /> are set to a time span interval of 0.</exception>
      <exception cref="T:System.InvalidOperationException">The service has been started by a previous call to this method.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)">
      <summary>Refreshes the expiry of an entry in the peer resolver service's registration lookup table.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" /> that contains the newly refreshed registration entry.</returns>
      <param name="refreshInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" /> object that contains the mesh ID and the registration ID of the entry to refresh in the peer resolver service's registration lookup table.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="refreshInfo" /> is set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The custom peer resolver service has not been started with a previous call to <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval">
      <summary>Gets or sets the length of time that entries remain valid in a peer resolver service's registration lookup table.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> that specifies the length of time that entries remain valid in a peer resolver service's registration lookup table.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The interval is either zero or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt to set the property was made after a call to <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)">
      <summary>Adds a new entry to the registration lookup table of the peer resolver service.</summary>
      <returns>A <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> that contains a copy of the entry added to the peer resolver service's registration lookup table.</returns>
      <param name="clientId">A <see cref="T:System.Guid" /> that specifies a unique identifier for the registration entry to register with the resolver service.</param>
      <param name="meshId">A <see cref="T:System.String" /> that specifies the mesh ID of the peer mesh in which the registration entry participates.</param>
      <param name="address">A <see cref="T:System.ServiceModel.PeerNodeAddress" /> that contains the endpoint address of the registration entry.</param>
      <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> object supplied to this method was either null or not correctly formed.</exception>
      <exception cref="T:System.ArgumentNullException">The MeshId and/or the RegistrationId property of object supplied to the <paramref name="refreshInfo" /> parameter was null.</exception>
      <exception cref="T:System.NullReferenceException">The MeshId property of the object supplied to the <paramref name="refreshInfo" /> parameter is unknown.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)">
      <summary>Adds a new entry to the registration lookup table of the peer resolver service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> that contains a copy of the entry added to the peer resolver service's registration lookup table.</returns>
      <param name="registerInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />  that contains information about the registration entry to register with the peer resolver service.</param>
      <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> object supplied to this method was either null or not correctly formed.</exception>
      <exception cref="T:System.NullReferenceException">The AddressInfo property of the object supplied to the <paramref name="registerInfo" /> parameter was null.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="meshId" /> value supplied to this method is set to null.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)">
      <summary>Returns a list of known endpoints for a registration entry.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" /> that contains the endpoints for the registration entry in the lookup table that matches the information supplied in the <paramref name="resolveInfo" /> parameter. </returns>
      <param name="resolveInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> that contains information on the registration entry for which endpoints, if known, are to be looked up by the peer resolver service.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> object is null or is not correctly formed.</exception>
      <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)">
      <summary>Removes a specific entry from the registration lookup table of the peer resolver service.</summary>
      <param name="unregisterInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> that contains the information used to uniquely identify the registration entry to remove from the registration lookup table.</param>
      <exception cref="T:System.ArgumentException">An entry for the specified registration entry could not be found, or the supplied <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> object is null or not correctly formed.</exception>
      <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Update(System.ServiceModel.PeerResolvers.UpdateInfo)">
      <summary>Updates an existing registration entry entry in the registration lookup table of the peer resolver service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> that contains a copy of the updated registration entry entry.</returns>
      <param name="updateInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> that uniquely identifies a specific registration entry and provides updated information for it.</param>
      <exception cref="T:System.ArgumentException">An entry for the specified registration entry could not be found, or the supplied <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> object was not correctly formed.</exception>
      <exception cref="T:System.InvalidOperationException">A registration entry with the same GUID already exists in the lookup table, or the custom peer resolver service has not been started with a previous call to <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.IPeerResolverContract">
      <summary>Defines a contract for the basic operations of a peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings">
      <summary>Obtains the settings for a peer resolver service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" /> that contains information about the peer resolver service.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)">
      <summary>Refreshes the expiry for an entry in the peer resolver service's registration lookup table.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" /> that contains the newly refreshed registration entry.</returns>
      <param name="refreshInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" /> object that contains the mesh ID and the registration ID of the entry to refresh in the peer resolver service's registration lookup table.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)">
      <summary>Registers a peer node with the custom peer resolver service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> that contains a copy of the entry added to the peer resolver service's registration lookup table.</returns>
      <param name="registerInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />  that contains information about the peer node to register with the peer resolver service.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)">
      <summary>Returns a list of known endpoints for a registration entry.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" /> that contains the endpoints for the registration entry in the lookup table that matches the information supplied in the <paramref name="resolveInfo" /> parameter. </returns>
      <param name="resolveInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> that contains information on the peer node for which endpoints, if known, are to be looked up by the peer resolver service.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)">
      <summary>Removes a registration from the lookup table for a peer resolver service.</summary>
      <param name="unregisterInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> that contains the information used to uniquely identify the peer node to remove from the registration lookup table.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)">
      <summary>Updates the entry for a specific peer node in the peer resolver service's lookup table.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> that contains a copy of the updated peer node entry.</returns>
      <param name="updateInfo">
        <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> that uniquely identifies a specific peer node entry and provides updated information for it.</param>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings">
      <summary>Contains the specific settings for an instance of a custom peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Address">
      <summary>Gets or sets the endpoint address of the peer node hosting the custom peer resolver service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EndpointAddress" /> that contains the endpoint address of the peer node running the custom peer resolver service.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding">
      <summary>Gets or sets the channel binding used by the custom peer resolver service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.Binding" /> that contains the binding settings for this service.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.IsBindingSpecified">
      <summary>Gets whether the <see cref="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding" /> property is set.</summary>
      <returns>True if the <see cref="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding" /> property is set; false if it is not. </returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Resolver">
      <summary>Gets or sets the custom peer resolver instance for this service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolver" /> instance used by the service.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy">
      <summary>Specifies the policy on sharing referrals between peers.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.Service">
      <summary>Referral policy is determined by the resolver service.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.Share">
      <summary>Referrals are shared.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.DoNotShare">
      <summary>Referrals are not shared.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.PeerResolverMode">
      <summary>Determines the type of peer resolver being used.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Auto">
      <summary>Automatically determines the type of resolver to use from the information set on the binding. </summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Pnrp">
      <summary>The PNRP resolver is used.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Custom">
      <summary>A custom resolver is used.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.PeerResolverSettings">
      <summary>Defines the settings for a peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.PeerResolverSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Custom">
      <summary>Gets the specific settings for a custom peer resolver.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" /> that contains the settings and resolver instance for the associated custom peer resolver service.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Mode">
      <summary>Gets or sets whether the peer resolver instance associated with this service is either PNRP-specific, a custom resolver, or automatically determined.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.PeerResolverMode" /> enumeration value that specifies the mode of the peer resolver service.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.ReferralPolicy">
      <summary>Gets or sets the specific referral policy used by the peer resolver service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies whether peer referrals are shared or not.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RefreshInfo">
      <summary>Defines the information for the refresh of a registration entry by a peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor(System.String,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" /> class with the provided mesh ID and unique registration ID.</summary>
      <param name="meshId">A <see cref="T:System.String" /> that identifies the mesh in which the peer node participates.</param>
      <param name="regId">A <see cref="T:System.Guid" /> that uniquely identifies the registration entry for the peer node.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshInfo.HasBody">
      <summary>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</summary>
      <returns>True if the refresh information message body is correctly formed by the sender (the service client); false if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RefreshInfo.MeshId">
      <summary>Gets the mesh ID of the registration entry to refresh.</summary>
      <returns>
        <see cref="T:System.String" /> that contains the mesh ID of the registration entry that will be refreshed in the peer resolver registration lookup table.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RefreshInfo.RegistrationId">
      <summary>Gets the unique registration ID of the registration entry to refresh.</summary>
      <returns>
        <see cref="T:System.Guid" /> that contains the registration ID of the peer node whose entry will be refreshed in the peer resolver registration lookup table.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo">
      <summary>Contains response information returned as a result of a registration lookup table refresh operation on the peer resolver.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor(System.TimeSpan,System.ServiceModel.PeerResolvers.RefreshResult)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" /> class with the provided registration lifetime and refresh results.</summary>
      <param name="registrationLifetime">
        <see cref="T:System.TimeSpan" /> that specifies the new lifetime of the peer's registration.</param>
      <param name="result">
        <see cref="T:System.ServiceModel.PeerResolvers.RefreshResult" /> that specifies the result of the refresh.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.HasBody">
      <summary>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</summary>
      <returns>True if the refresh response information body is correctly-formed by the sender; false if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.RegistrationLifetime">
      <summary>Gets or sets amount of time before a registration expires and is removed by the resolver service. </summary>
      <returns>
        <see cref="T:System.TimeSpan" /> that specifies the new amount of time before the registration entry expires and is removed by the resolver service. </returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.Result">
      <summary>Gets or sets the result of a refresh operation.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerResolvers.RefreshResult" /> enumeration value that indicates the result of a refresh operation on the peer resolver.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RefreshResult">
      <summary>Specifies the results of an attempt to update the expiry of a registration entry in a running peer resolver service.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.RefreshResult.Success">
      <summary>Registration entry was successfully refreshed.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerResolvers.RefreshResult.RegistrationNotFound">
      <summary>Registration entry was not found.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RegisterInfo">
      <summary>Defines the  peer registration information to be supplied to a peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> class with the supplied client ID, mesh ID, and endpoint address(es).</summary>
      <param name="client">
        <see cref="T:System.Guid" /> that uniquely identifies the peer node to be registered.</param>
      <param name="meshId">
        <see cref="T:System.String" /> that specifies the ID of the mesh in which the peer node participates.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.PeerNodeAddress" /> that specifies the endpoint address(es) of the peer node to be registered.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterInfo.ClientId">
      <summary>Gets a <see cref="T:System.Guid" /> that uniquely identifies the registration entry for a peer node.</summary>
      <returns>
        <see cref="T:System.Guid" /> that uniquely identifies the registration entry of a peer node.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterInfo.HasBody">
      <summary>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</summary>
      <returns>True if the registration information body is correctly-formed by the sender; false if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterInfo.MeshId">
      <summary>Gets a mesh ID associated with the registration entry.</summary>
      <returns>
        <see cref="T:System.String" /> that contains the mesh ID (or mesh name) associated with the registration entry.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterInfo.NodeAddress">
      <summary>Gets the endpoint address(es) to associate with the node that is registering with the resolver service.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerNodeAddress" /> that contains the endpoint address(es) to associate with the node that is registering with the resolver service. The address or addresses contained in this instance can be used to connect with the peer node within the mesh.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo">
      <summary>Contains response information returned by a peer resolver as the result of a registration operation.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor(System.Guid,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> class with the supplied registration ID and lifetime.</summary>
      <param name="registrationId">
        <see cref="T:System.Guid" /> that uniquely identifies the newly-registered peer.</param>
      <param name="registrationLifetime">
        <see cref="T:System.TimeSpan" /> that specifies the lifetime of the peer's registration.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.HasBody">
      <summary>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</summary>
      <returns>True if the registration response information body is correctly-formed by the sender; false if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationId">
      <summary>Gets or sets a GUID that uniquely identifies the newly-registered peer.</summary>
      <returns>
        <see cref="T:System.Guid" /> that uniquely identifies the newly-registered peer.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationLifetime">
      <summary>Gets or sets the amount of time before a registration expires and is removed by the resolver service. </summary>
      <returns>
        <see cref="T:System.TimeSpan" /> that specifies the lifetime of the peer's registration.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.ResolveInfo">
      <summary>Defines the information for the endpoint resolution of a registration entry by a peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor(System.Guid,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> class with the provided client ID and mesh ID, as well as the maximum number of endpoint addresses to return.</summary>
      <param name="clientId">
        <see cref="T:System.Guid" /> that contains a unique ID for the client for which endpoints are to be resolved.</param>
      <param name="meshId">
        <see cref="T:System.String" /> that contains the ID of the mesh in which the client is participating.</param>
      <param name="maxAddresses">
        <see cref="T:System.Int32" /> that contains the maximum number of client endpoint addresses to be returned by the resolve operation.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ResolveInfo.ClientId">
      <summary>Gets the ID for the registration entry to resolve.</summary>
      <returns>
        <see cref="T:System.Guid" /> that contains the unique ID for a registration entry.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveInfo.HasBody">
      <summary>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</summary>
      <returns>True if the resolve request information message body is correctly formed by the sender (the service client); false if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses">
      <summary>Gets the maximum number of client endpoint addresses to be returned by the resolve operation.</summary>
      <returns>
        <see cref="T:System.Int32" /> that contains the maximum number of client endpoint addresses to be returned by the resolve operation.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ResolveInfo.MeshId">
      <summary>Gets the mesh ID for the entry whose endpoint addresses will be resolved.</summary>
      <returns>
        <see cref="T:System.String" /> that contains the ID of the mesh in which the client is participating.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo">
      <summary>Contains response information returned as a result of a peer endpoint resolution operation on the peer resolver.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor(System.ServiceModel.PeerNodeAddress[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" /> class with the provided set of peer endpoint addresses.</summary>
      <param name="addresses">Array of <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects that contain the endpoint addresses registered to the peer whose endpoints were requested in a previous resolution operation.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ResolveResponseInfo.Addresses">
      <summary>Gets or sets a collection of peer node addresses.</summary>
      <returns>Generic list &lt;IList&gt; of <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects that contain the endpoint addresses registered to the peer whose endpoints were requested in a previous resolution operation.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.HasBody">
      <summary>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</summary>
      <returns>True if the resolution response information body is correctly-formed by the sender; false if it is not.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo">
      <summary>Contains the information returned when a peer requests the settings for a peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" /> class with the supplied referral policy value.</summary>
      <param name="control">
        <see cref="T:System.Boolean" /> that indicates whether referrals are passed by the resolver service.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.ControlMeshShape">
      <summary>Gets or sets whether referrals are passed by the resolver service.</summary>
      <returns>True if referrals from peers participating in the mesh are passed; false if they are ignored.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.HasBody">
      <summary>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</summary>
      <returns>True if the service settings response information body is correctly-formed by the sender; false if it is not.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.UnregisterInfo">
      <summary>Contains the information used to remove a registration entry from a peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor(System.String,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> class with mesh and registration ID of the peer to remove from the registration lookup table in the resolver service.</summary>
      <param name="meshId">
        <see cref="T:System.String" /> that specifies the mesh ID of the peer whose entry is to be removed.</param>
      <param name="registrationId">
        <see cref="T:System.Guid" /> that uniquely identifies the entry to remove from the lookup table of the resolver service.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UnregisterInfo.HasBody">
      <summary>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</summary>
      <returns>True if the registration removal information body is correctly-formed by the sender; false if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UnregisterInfo.MeshId">
      <summary>Gets the mesh ID of the peer whose entry is to be removed.</summary>
      <returns>
        <see cref="T:System.String" /> that specifies the mesh ID of the peer whose entry is to be removed.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UnregisterInfo.RegistrationId">
      <summary>Gets the unique ID of the entry to remove from the lookup table of the resolver service.</summary>
      <returns>
        <see cref="T:System.Guid" /> that uniquely identifies the entry to remove from the lookup table of the resolver service.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolvers.UpdateInfo">
      <summary>Contains the information used to update the endpoint address of a specific registration entry in the lookup table of a peer resolver service.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor(System.Guid,System.Guid,System.String,System.ServiceModel.PeerNodeAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> class with the supplied peer client ID, registration ID, peer mesh ID, and peer endpoint address.</summary>
      <param name="registrationId">
        <see cref="T:System.Guid" /> that specifies the unique ID of the registration entry to update.</param>
      <param name="client">
        <see cref="T:System.Guid" /> that specifies the unique ID of the peer client that submitted the updated registration entry information.</param>
      <param name="meshId">
        <see cref="T:System.String" /> that contains the mesh ID of the entry.</param>
      <param name="address">
        <see cref="T:System.ServiceModel.PeerNodeAddress" /> that contains the endpoint address to update for the registration entry.</param>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UpdateInfo.ClientId">
      <summary>Gets the unique ID of the peer client that submitted the updated registration entry information.</summary>
      <returns>
        <see cref="T:System.Guid" /> that specifies the unique ID of the peer client that submitted the updated registration entry information.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolvers.UpdateInfo.HasBody">
      <summary>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</summary>
      <returns>True if the registration update information body is correctly-formed by the sender; false if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UpdateInfo.MeshId">
      <summary>Gets the mesh ID of the registration entry.</summary>
      <returns>
        <see cref="T:System.String" /> that contains the mesh ID of the updated registration entry.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UpdateInfo.NodeAddress">
      <summary>Gets the endpoint address to update for the registration entry.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerNodeAddress" /> that contains the endpoint address to update for the registration entry.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerResolvers.UpdateInfo.RegistrationId">
      <summary>Gets the unique ID of the registration entry to update.</summary>
      <returns>
        <see cref="T:System.Guid" /> that specifies the unique ID of the registration entry to update.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.BasicSecurityProfileVersion">
      <summary>Provides a message version that corresponds to the Basic Security Profile specification.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.BasicSecurityProfileVersion.BasicSecurityProfile10">
      <summary>Provides a message version that corresponds to the Basic Security Profile specification.</summary>
      <returns>A class that has a ToString method that returns the version in text form.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause">
      <summary>Represents the key identifier clause in a binary secret security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" /> class. </summary>
      <param name="key">A <see cref="T:System.Byte" /> array that represents the key.</param>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" /> class. </summary>
      <param name="key">The key.</param>
      <param name="cloneBuffer">A value that specifies whether to clone the buffer.</param>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.#ctor(System.Byte[],System.Boolean,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" /> class. </summary>
      <param name="key">The key.</param>
      <param name="cloneBuffer">A value that specifies whether to clone the buffer.</param>
      <param name="derivationNonce">The "number used once" (nonce) used to derive the key.</param>
      <param name="derivationLength">Length of the key to be derived.</param>
    </member>
    <member name="P:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CanCreateKey">
      <summary>Gets a value that indicates whether this instance of the class can create a security key. </summary>
      <returns>Always true.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.CreateKey">
      <summary>Creates a security key.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.GetKeyBytes">
      <summary>Gets an array of bytes that represents the key.</summary>
      <returns>The key.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.BinarySecretKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Compares whether the key of a specified clause matches this instance's key.</summary>
      <returns>true if there is a match; otherwise, false. </returns>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to match.</param>
    </member>
    <member name="T:System.ServiceModel.Security.ChannelProtectionRequirements">
      <summary>Describes encryption and signature requirements that apply to different parts of messages that are transmitted on this channel.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> class from another instance of this class. </summary>
      <param name="other">The other instance of <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Adds the parts collections in the specified <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> to the current instance of this class.</summary>
      <param name="protectionRequirements">The specified <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)">
      <summary>Adds the various parts collections in the specified <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> to the current instance of this class.</summary>
      <param name="protectionRequirements">The specified <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
      <param name="channelScopeOnly">Specifies whether the scope is channel-only.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse">
      <summary>Creates a new instance of this class with incoming and outgoing parts reversed.</summary>
      <returns>A new instance of this class with incoming and outgoing parts reversed.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts">
      <summary>Gets a collection of message parts that are encrypted for messages from client to server.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts">
      <summary>Gets a collection of message parts that are signed for messages from client to server.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly">
      <summary>Gets a value that indicates whether this instance of the class is read-only. </summary>
      <returns>true if this instance of the class is read-only; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly">
      <summary>Sets this class and its part collections to read-only.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts">
      <summary>Gets a collection of message parts that are encrypted for messages from server to client.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts">
      <summary>Gets a collection of message parts that are signed for messages from server to client.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> collection.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder">
      <summary>Provides encoding and decoding mechanisms for the security state using the Windows DataProtection API functionality. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor">
      <summary>Initializes a new instance of this class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean)">
      <summary>Initializes a new instance of this class. </summary>
      <param name="useCurrentUserProtectionScope">Indicates whether to use the current user protection scope.</param>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.#ctor(System.Boolean,System.Byte[])">
      <summary>Initializes a new instance of this class. </summary>
      <param name="useCurrentUserProtectionScope">Indicates whether to use the current user protection scope.</param>
      <param name="entropy">A byte array that specifies the entropy, which indicates additional randomness that the encoder could use to encode the security state.</param>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.DecodeSecurityState(System.Byte[])">
      <summary>Decodes the security state.</summary>
      <returns>A byte array that represents the decoded security state.</returns>
      <param name="data">A byte array that represents the encoded security state.</param>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.EncodeSecurityState(System.Byte[])">
      <summary>Encodes the security state.</summary>
      <returns>A byte array that represents the encoded security state.</returns>
      <param name="data">A byte array representing the decoded security state.</param>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.GetEntropy">
      <summary>Indicates the randomness of this encoder.</summary>
      <returns>An array of type <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /> instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.DataProtectionSecurityStateEncoder.UseCurrentUserProtectionScope">
      <summary>Gets a value that indicates whether to use the current user protection scope. </summary>
      <returns>true if the current user protection scope will be used; otherwise, false. </returns>
    </member>
    <member name="T:System.ServiceModel.Security.ExpiredSecurityTokenException">
      <summary>Exception thrown when a CardSpace security token expires.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ExpiredSecurityTokenException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ExpiredSecurityTokenException" /> class. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ExpiredSecurityTokenException" /> class. </summary>
      <param name="message">The message to display.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ExpiredSecurityTokenException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ExpiredSecurityTokenException" /> class. </summary>
      <param name="message">The message to display.</param>
      <param name="innerException">The inner <see cref="T:System.Exception" /> for this instance.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ExpiredSecurityTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the SerializationInfo with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.Security.HttpDigestClientCredential">
      <summary>Used for digest authentication of HTTP clients.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel">
      <summary>Gets or sets the level of impersonation that the client allows with the client credential provided.</summary>
      <returns>The <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> that the client grants the server as part of HTTP digest authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential">
      <summary>Gets or sets the network credential to be used for digest-based authentication.</summary>
      <returns>The <see cref="T:System.Net.NetworkCredential" /> to be used for digest-based authentication.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.IdentityVerifier">
      <summary>An abstract base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.#ctor">
      <summary>Creates an instance of this class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)">
      <summary>Implements a method to verify an identity.</summary>
      <returns>true if the identity is verified; otherwise, false. The default is false.</returns>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> to verify.</param>
      <param name="authContext">The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> to test the <paramref name="identity" /> against.</param>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault">
      <summary>Creates a default instance of this class.</summary>
      <returns>A default instance of <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)">
      <summary>Tries to create an identity from an endpoint.</summary>
      <returns>true if the identity is returned; otherwise, false. The default is false. </returns>
      <param name="reference">The <see cref="T:System.ServiceModel.EndpointAddress" /> to use for creating the identity.</param>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> that is returned.</param>
    </member>
    <member name="T:System.ServiceModel.Security.IEndpointIdentityProvider">
      <summary>Provides the identity of an endpoint. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Gets the identity of the current endpoint, based on the security token requirements passed in.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> of the current endpoint.</returns>
      <param name="tokenRequirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> that describes security token requirements.</param>
    </member>
    <member name="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer">
      <summary>Initializes a CardSpace interactive channel.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.#ctor(System.ServiceModel.Description.ClientCredentials,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" /> class. </summary>
      <param name="credentials">The <see cref="T:System.ServiceModel.Description.ClientCredentials" /> from which this method is called.</param>
      <param name="binding">The binding on the service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
      <summary>Begins the asynchronous method to display the initialization user interface (UI).</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> from this method.</returns>
      <param name="channel">The channel.</param>
      <param name="callback">The asynchronous callback method called when this method completes.</param>
      <param name="state">Holds the current state.</param>
    </member>
    <member name="P:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.Binding">
      <summary>Gets the binding on the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> on the service endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.InfocardInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>The asynchronous callback method related to displaying the initialization user interface (UI).</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> from the corresponding Begin method.</param>
    </member>
    <member name="T:System.ServiceModel.Security.ISecureConversationSession">
      <summary>Represents a secure conversation security session. The communicating parties secure all messages on the session using a SecurityContextToken that is issued by the server as part of session establishment.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ISecureConversationSession.TryReadSessionTokenIdentifier(System.Xml.XmlReader)">
      <summary>Tries to read the session token identifier pointed to by the XML reader.</summary>
      <returns>true if the XML pointed to by the XML reader corresponds to a SecurityKeyIdentifierClause that matches the security session's token; otherwise, false.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> with which to try to read the token.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ISecureConversationSession.WriteSessionTokenIdentifier(System.Xml.XmlDictionaryWriter)">
      <summary>Tries to write the SecurityKeyIdentifierClause corresponding to the security session's token. This method is useful for sessions like WS-RM sessions that build on top of the security session and refer to the security session token's identifier as part of their session establishment protocol.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> with which to try to write the token.</param>
    </member>
    <member name="T:System.ServiceModel.Security.ISecuritySession">
      <summary>Represents a kind of ISession that enforces the requirement that all messages exchanged on the session are between the same communicating parties that established the session.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.ISecuritySession.RemoteIdentity">
      <summary>Gets the identity of the remote principal.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> of the remote principal.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.IssuedTokenClientCredential">
      <summary>Represents information used to obtain an issued token from a security token service.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.CacheIssuedTokens">
      <summary>Gets or sets a Boolean that specifies whether issued tokens are to be cached by the channel.</summary>
      <returns>true if tokens are to be cached; otherwise, false. The default value is true.</returns>
      <exception cref="T:System.InvalidOperationException">Attempt to set a read-only credential.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode">
      <summary>Gets or sets the default value of <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />. The default is <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set a read-only credential.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuedTokenRenewalThresholdPercentage">
      <summary>Gets or sets the renewal threshold percentage for issued tokens.</summary>
      <returns>The renewal threshold percentage for issued tokens. The default value is 60.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set a read-only credential.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuerChannelBehaviors">
      <summary>Gets a collection of issuer channel behaviors.</summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2" /> of <see cref="T:System.ServiceModel.Description.IEndpointBehavior" />s. </returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerAddress">
      <summary>Gets or sets the address of the local issuer.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the local issuer.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set a read-only credential.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerBinding">
      <summary>Gets or sets the binding of the local issuer.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> of the local issuer.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set a read-only credential.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerChannelBehaviors">
      <summary>Gets a collection of local issuer channel behaviors.</summary>
      <returns>A <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> of <see cref="T:System.ServiceModel.Description.IEndpointBehavior" />s.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenClientCredential.MaxIssuedTokenCachingTime">
      <summary>Gets or sets the maximum caching time for an issued token.</summary>
      <returns>A <see cref="T:System.Timespan" /> that represents the maximum caching time for an issued token. The default value is <see cref="F:System.TimeSpan.MaxValue" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of set is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set a read-only credential.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.IssuedTokenServiceCredential">
      <summary>Allows a service to configure properties associated with the federated credential presented by the client.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowUntrustedRsaIssuers">
      <summary>Gets or sets a value indicating whether to allow untrusted RSA token issuers. </summary>
      <returns>true if untrusted RSA token issuers are allowed; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">Trying to change a read-only token.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CertificateValidationMode">
      <summary>Gets or sets the certificate validation mode. </summary>
      <returns>A <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" /> enumeration entry that specifies how the certificate is to be validated.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.CustomCertificateValidator">
      <summary>Gets or sets a custom X.509 certificate validator. </summary>
      <returns>A custom <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.KnownCertificates">
      <summary>Gets a list of known certificates. </summary>
      <returns>A <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.RevocationMode">
      <summary>Gets or sets the revocation mode. </summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.SamlSerializer">
      <summary>Gets or sets the custom <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> for issued service credentials.</summary>
      <returns>The custom <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> for the service.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to set a read-only credential.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.TrustedStoreLocation">
      <summary>Gets or sets the trusted store location. </summary>
      <returns>A trusted <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.KeyNameIdentifierClause">
      <summary>Represents the key name identifier clause in a security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.KeyNameIdentifierClause.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.KeyNameIdentifierClause" /> class. </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:System.ServiceModel.Security.KeyNameIdentifierClause.KeyName">
      <summary>Gets the key name.</summary>
      <returns>The key name.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Checks whether a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> matches the current instance of this class.</summary>
      <returns>true if there is a match; otherwise, false. </returns>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />  that is to be compared.</param>
    </member>
    <member name="M:System.ServiceModel.Security.KeyNameIdentifierClause.Matches(System.String)">
      <summary>Checks whether the specified key name matches the current instance's key name.</summary>
      <returns>true if there is a match; otherwise, false. </returns>
      <param name="keyName">The security key name clause.</param>
    </member>
    <member name="M:System.ServiceModel.Security.KeyNameIdentifierClause.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current Object. (Inherited from <see cref="T:System.Object" />)</summary>
      <returns>The current Object.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.MessagePartSpecification">
      <summary>Specifies which parts are included in a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.#ctor">
      <summary>Initializes an empty <see cref="T:System.ServiceModel.Security.MessagePartSpecification" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> and specifies whether the message body is included.</summary>
      <param name="isBodyIncluded">Initializes whether the message body is included in the specification.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> with an array of message headers.  </summary>
      <param name="isBodyIncluded">Initializes whether the message body is included in the specification.</param>
      <param name="headerTypes">The array of header types to use.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> with an array of message headers.</summary>
      <param name="headerTypes">The array of header types to use.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.Clear">
      <summary>Clears the list of headers in this specification.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> is read only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.MessagePartSpecification.HeaderTypes">
      <summary>Gets the header types for this specification.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> that holds the header types for this message specification.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded">
      <summary>Gets or sets a value that indicates whether the message body is included in this specification.</summary>
      <returns>true if the message body is included in this specification; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> is read only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly">
      <summary>Gets a value that indicates whether the specification is read only.</summary>
      <returns>true if the specification is read only; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly">
      <summary>Sets the specification to read only.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.MessagePartSpecification.NoParts">
      <summary> Gets an empty instance of this class.</summary>
      <returns>An empty instance of this class. </returns>
    </member>
    <member name="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)">
      <summary>Merges two message part specifications.</summary>
      <param name="specification">The <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> to merge.</param>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> is read only.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="specification" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.MessageProtectionOrder">
      <summary>Specifies the order of operations that protect a message.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt">
      <summary>Specifies that a digital signature is generated for the SOAP message before any portion of the SOAP message is encrypted, but the digital signature is not encrypted.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature">
      <summary>Specifies that a digital signature is generated for the SOAP message before any portion of the SOAP message is encrypted, and the digital signature is encrypted.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign">
      <summary>Specifies that the SOAP message is encrypted before a digital signature is generated for the SOAP message.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Represents an exception that occurred when there is something wrong with the security applied on a message. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <summary>Initializes an empty instance of the <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information required to serialize the new <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> instance.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream associated with the new <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> class with an error string.</summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> class with an error string and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception reference.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />  that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.PeerCredential">
      <summary>Contains the credentials used when authenticating a peer node within a peer mesh.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.PeerCredential.Certificate">
      <summary>Gets or sets an X509 certificate for the peer.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X509 certificate for the peer.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.PeerCredential.MeshPassword">
      <summary>Gets or sets the password used by the peer to authenticate with the peer mesh.</summary>
      <returns>String value that specifies the password used by the peer to authenticate with the peer mesh.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication">
      <summary>Gets or sets the message sender authentication validator.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" /> that contains the message sender authentication validator.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.PeerCredential.PeerAuthentication">
      <summary>Gets or sets the peer authentication object.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.X509PeerCertificateAuthentication" /> that contains the peer authentication object.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Sets the certificate with specific search criteria.</summary>
      <param name="storeLocation">
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> that contains the location of the certificate store.</param>
      <param name="storeName">
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the certificate name.</param>
      <param name="findType">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> that contains the search criteria. </param>
      <param name="findValue">
        <see cref="T:System.Object" /> that contains the value to search on.</param>
    </member>
    <member name="M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Sets the certificate.</summary>
      <param name="subjectName">The subject name of the certificate.</param>
      <param name="storeLocation">
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> that contains the location of the certificate store.</param>
      <param name="storeName">
        <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> that contains the certificate name.</param>
    </member>
    <member name="T:System.ServiceModel.Security.ScopedMessagePartSpecification">
      <summary>Specifies which parts are included in a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> class from another instance of this class. </summary>
      <param name="other">The other <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.ScopedMessagePartSpecification.Actions">
      <summary>Gets a collection of action keys.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.String" /> that contains the keys of a collection of action parts.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)">
      <summary>Adds channel message parts to the collections in the instance of this class.</summary>
      <param name="parts">The <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> that contains the parts to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parts" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)">
      <summary>Adds message parts to the MessagePartSpecification that corresponds to the specified action.</summary>
      <param name="parts">The <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> that contains the parts to be added.</param>
      <param name="action">The action key to match to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parts" /> or <paramref name="action" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts">
      <summary>Gets a message part specification that contains the channel parts.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> that contains the channel parts.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly">
      <summary>Indicates whether the specification is read-only.</summary>
      <returns>true if the specification is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly">
      <summary>Sets the specification to read-only.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)">
      <summary>Checks whether there are parts that match a given action key.</summary>
      <returns>true if matching parts were found; otherwise, false.</returns>
      <param name="action">The action key.</param>
      <param name="excludeChannelScope">When true, restricts the parts to the current channel.</param>
      <param name="parts">When this method returns, contains a <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> that contains the parts found. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)">
      <summary>Checks whether there are parts that match a given action key.</summary>
      <returns>true if matching parts were found; otherwise, false. </returns>
      <param name="action">The action key.</param>
      <param name="parts">When this method returns, contains a <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> that contains the parts found. This parameter is passed uninitialized. </param>
    </member>
    <member name="T:System.ServiceModel.Security.SecureConversationServiceCredential">
      <summary>Provides credential settings for a secure conversation service.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
      <summary>Gets a collection of the <see cref="T:System.Type" /> claims for cookie serialization. </summary>
      <returns>A collection of the <see cref="T:System.Type" /> claims for cookie serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
      <summary>Gets or sets a customized <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> for encoding and decoding cookie serialization. </summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> object, which is a customization of <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Represents the security exception that is thrown when a security authorization request fails.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> class using the specified serialization information and context objects. </summary>
      <param name="info">Information relevant to the deserialization process.</param>
      <param name="context">The context of the deserialization process.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> class using the specified message. </summary>
      <param name="message">The description of the error condition.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> class using the specified message and the inner exception. </summary>
      <param name="message">The description of the error condition.</param>
      <param name="innerException">The inner exception to be used.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAlgorithmSuite">
      <summary>Specifies properties of algorithms. This is an abstract class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128">
      <summary>Gets the Basic128 algorithm suite.</summary>
      <returns>The 128-bit Basic <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15">
      <summary>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256">
      <summary>Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15">
      <summary>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192">
      <summary>Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> .</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15">
      <summary>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256">
      <summary>Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15">
      <summary>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> .</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256">
      <summary>Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15">
      <summary>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256">
      <summary>Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15">
      <summary>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default">
      <summary>Gets the default algorithm suite.</summary>
      <returns>The default <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <summary>Gets the default asymmetric key wrap algorithm as a string.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <summary>Gets the default asymmetric signature algorithm as a string.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <summary>Gets the default canonicalization algorithm as a string.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <summary>Gets the default digest algorithm as a string.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <summary>Gets the default encryption algorithm as a string.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <summary>Gets the default encryption key derivation length as an <see cref="T:System.Int32" /> value.</summary>
      <returns>An <see cref="T:System.Int32" /> value.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <summary>Gets the default signature key derivation length as an <see cref="T:System.Int32" /> value.</summary>
      <returns>An <see cref="T:System.Int32" /> value.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <summary>Gets the default symmetric key length as an <see cref="T:System.Int32" /> value.</summary>
      <returns>An <see cref="T:System.Int32" /> value.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <summary>Gets the default symmetric key wrap algorithm as a string.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <summary>Gets the default symmetric algorithm as a string.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <summary>Indicates whether a particular key length is supported by the asymmetric algorithm.</summary>
      <returns>true if the key length is supported by the asymmetric algorithm; otherwise, false.</returns>
      <param name="length">The key length to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)">
      <summary>Indicates whether an asymmetric key wrap algorithm is supported.</summary>
      <returns>true if the asymmetric key wrap algorithm is supported; otherwise, false.</returns>
      <param name="algorithm">The algorithm to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)">
      <summary>Indicates whether an asymmetric signature algorithm is supported.</summary>
      <returns>true if the asymmetric signature algorithm is supported; otherwise, false.</returns>
      <param name="algorithm">The algorithm name to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)">
      <summary>Indicates whether a canonicalization algorithm is supported.</summary>
      <returns>true if the canonicalization algorithm is supported; otherwise, false.</returns>
      <param name="algorithm">The algorithm name to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)">
      <summary>Indicates whether a digest algorithm is supported.</summary>
      <returns>true if the digest algorithm is supported; otherwise, false.</returns>
      <param name="algorithm">The algorithm name to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)">
      <summary>Indicates whether an encryption algorithm is supported.</summary>
      <returns>true if the encryption algorithm is supported; otherwise, false.</returns>
      <param name="algorithm">The algorithm name to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)">
      <summary>Indicates whether an encryption key derivation algorithm is supported.</summary>
      <returns>true if the encryption key derivation algorithm is supported; otherwise, false.</returns>
      <param name="algorithm">The algorithm name to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)">
      <summary>Indicates whether a signature key derivation algorithm is supported.</summary>
      <returns>true if the signature key derivation algorithm is supported; otherwise, false.</returns>
      <param name="algorithm">The algorithm name to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <summary>When overridden in a derived class, indicates whether a particular symmetric key length is supported.</summary>
      <returns>true if the symmetric key length is supported; otherwise, false.</returns>
      <param name="length">The key length to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)">
      <summary>Indicates whether a symmetric key wrap algorithm is supported.</summary>
      <returns>true if the symmetric key wrap algorithm is supported; otherwise, false.</returns>
      <param name="algorithm">The algorithm name to check.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)">
      <summary>Indicates whether a symmetric signature algorithm is supported.</summary>
      <returns>true if the symmetric signature algorithm is supported; otherwise, false.</returns>
      <param name="algorithm">The algorithm name to check.</param>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes">
      <summary>Gets the Triple Data Encryption Standard (DES) algorithm suite.</summary>
      <returns>The Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15">
      <summary>Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256">
      <summary>Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15">
      <summary>Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause">
      <summary>Represents the key identifier clause for a security context token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" /> class. </summary>
      <param name="contextId">A <see cref="T:System.Xml.UniqueId" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" /> class. </summary>
      <param name="contextId">A <see cref="T:System.Xml.UniqueId" /> that represents the Context ID of the security context.</param>
      <param name="generation">A <see cref="T:System.Xml.UniqueId" /> that refers to the Key generation of the Security Context Token.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.#ctor(System.Xml.UniqueId,System.Xml.UniqueId,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" /> class. </summary>
      <param name="contextId">The context ID part of the identifier clause.</param>
      <param name="generation">The generation part of the identifier clause.</param>
      <param name="derivationNonce">The nonce ("number used once") used to derive the token.</param>
      <param name="derivationLength">Length of the key being derived.</param>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ContextId">
      <summary>Gets the ID of the security context.</summary>
      <returns>A <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Generation">
      <summary>Gets the generation.</summary>
      <returns>A <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Compares a specified <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to the current instance of the <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" /> class.</summary>
      <returns>true if the two instances are equal; otherwise, false.</returns>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to be compared.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.Matches(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Compares a specified <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to the current instance of the <see cref="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" /> class.</summary>
      <returns>true if the two instances are equal; otherwise, false.</returns>
      <param name="contextId">The context ID part of the identifier clause.</param>
      <param name="generation">The generation part of the identifier clause.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityContextKeyIdentifierClause.ToString">
      <summary>Provides a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of the class.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityCredentialsManager">
      <summary>An abstract class that when implemented represents a security credentials manager.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityCredentialsManager.#ctor">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Security.SecurityCredentialsManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager">
      <summary>When overridden in a derived class, creates a new <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityKeyEntropyMode">
      <summary>Describes the source of entropy used for key generation.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ClientEntropy">
      <summary>The client provides the key used for the issued token.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ServerEntropy">
      <summary>The server provides the key for the issued token.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy">
      <summary>The client and server both provide entropy that is combined using the P-SHA1 function to derive the key of the issued token.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityMessageProperty">
      <summary>Contains security-related properties and is attached to a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.CreateCopy">
      <summary>Clones the current instance of this class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> cloned from the current instance of this class.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.Dispose">
      <summary>Disposes of the current instance of this class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies">
      <summary>Gets or sets a collection of external authorization policies. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)">
      <summary>Gets or creates an instance of this class from the specified message.</summary>
      <returns>An instance of <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens">
      <summary>Indicates whether the incoming message contains at least one supporting SecurityToken.</summary>
      <returns>true if <see cref="P:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens" /> contains at least one entry; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens">
      <summary>Gets or sets a collection of incoming supporting tokens. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> initiator token for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> initiator token for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> protection token for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> protection token for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.RecipientToken">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> recipient token for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> recipient token for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix">
      <summary>Gets or sets the sender ID prefix for this message.</summary>
      <returns>The sender ID prefix for this message.</returns>
      <exception cref="T:System.ArgumentNullException">The property value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of the property value is 0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The first character of the property value is not alphabetic and not equal to "_".</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">No character of the property value is alphabetic, numeric, or equal to "_", ".", or "-".</exception>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.ServiceSecurityContext" /> object for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.TransportToken">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> transport token for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> transport token for this message.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityNegotiationException">
      <summary>Indicates that an error occurred while negotiating the security context for a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> class with serialization information and inner exception specified.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityStateEncoder">
      <summary>An abstract class that can be implemented to encode the security state.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityStateEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityStateEncoder.DecodeSecurityState(System.Byte[])">
      <summary>Decodes the security state.</summary>
      <returns>A byte array that represents the security state.</returns>
      <param name="data">Security data.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityStateEncoder.EncodeSecurityState(System.Byte[])">
      <summary>Encodes the security state.</summary>
      <returns>A byte array that results from encoding the security state.</returns>
      <param name="data">The security state data.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityTokenAttachmentMode">
      <summary>An enumeration that lists the ways in which security tokens are attached.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Signed">
      <summary>The token is included in the message signature.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Endorsing">
      <summary>The token is used to sign the message signature.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEndorsing">
      <summary>The token is included in and signs the message signature.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEncrypted">
      <summary>The token is included in the message signature and is encrypted.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityTokenSpecification">
      <summary>Represents a security token and its authorization policies.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> class. </summary>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="tokenPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenPolicies" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityToken">
      <summary>Gets the security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityTokenPolicies">
      <summary>Get the collection of security token policies.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityVersion">
      <summary>Contains the set of supported WS-Security versions. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityVersion.WSSecurity10">
      <summary>Gets version 1.0 of WS-Security.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityVersion.WSSecurity11">
      <summary>Gets version 1.1 of WS-Security.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
      <summary>Represents a <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> implementation that provides security token serializers based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> configured on the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> class   based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> passed in.</summary>
      <param name="parent">The <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <summary>Creates a security token authenticator based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />.</returns>
      <param name="tokenRequirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <param name="outOfBandTokenResolver">When this method returns, contains a <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenRequirement" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">A security token authenticator cannot be created for the<paramref name=" tokenRequirement" /> that was passed in.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Creates a security token provider based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />.</returns>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requirement" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">A security token provider cannot be created for the <paramref name="requirement" /> that was passed in.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <summary>Creates a security token serializer based on the security token version passed in.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</returns>
      <param name="version">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /> of the security token.</param>
      <exception cref="T:System.NotSupportedException">A security token serializer cannot be created for the  <paramref name="version" /> that was passed in.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Gets the <see cref="T:System.ServiceModel.EndpointIdentity" /> based on the security token requirement. </summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> that corresponds to the <paramref name="tokenRequirement" />. null is returned if an identity cannot be created from the <paramref name="tokenRequirement" />.</returns>
      <param name="tokenRequirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenRequirement" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Determines whether the security token requirement is for an issued token.</summary>
      <returns>true if the security token requirement is for an issued token; otherwise, false. </returns>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials">
      <summary>Gets the service credentials used to construct this instance of this class.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceCredentials" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SspiSecurityTokenProvider">
      <summary>Represents a security token provider that provides an SSPI security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SspiSecurityTokenProvider" /> class. </summary>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that represents the server identity.</param>
      <param name="extractGroupsForWindowsAccounts">If true, expand users to include Windows Groups.</param>
      <param name="allowUnauthenticatedCallers">If true, allow unauthenticated callers.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SspiSecurityTokenProvider.#ctor(System.Net.NetworkCredential,System.Boolean,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SspiSecurityTokenProvider" /> class. </summary>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that represents the client identity.</param>
      <param name="allowNtlm">If true, allow NTLM authentication.</param>
      <param name="impersonationLevel">The <see cref="T:System.Security.Principal.TokenImpersonationLevel" />  granted to the server.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SspiSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Gets the security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</returns>
      <param name="timeout">A <see cref="T:System.Timespan" /> that represents the time-out interval.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SupportingTokenSpecification">
      <summary>Represents a supporting security token and its authorization policies.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" /> class. </summary>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="tokenPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</param>
      <param name="attachmentMode">The <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" />.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="attachmentMode" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.SupportingTokenSpecification.SecurityTokenAttachmentMode">
      <summary>Gets the security token attachment mode.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Represents a client credential based on user name and password.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Gets or sets the password.</summary>
      <returns>The password.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Gets or sets the user name.</summary>
      <returns>The user name.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordServiceCredential">
      <summary>This class is used to configure how the service authenticates users that use user name/password authentication and to configure the caching of logon tokens.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime">
      <summary>Gets or sets the maximum length of time that a token is cached. </summary>
      <returns>A <see cref="T:System.Timespan" /> that represents the maximum length of time that a token is cached. The default is 15 minutes.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens">
      <summary>Gets or sets a value that indicates whether logon tokens are cached. </summary>
      <returns>true if logon tokens are cached; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator">
      <summary>Gets or sets a custom user name and password validator.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups">
      <summary>Gets or sets a value that indicates whether Windows groups are included in the security context. </summary>
      <returns>true if Windows groups are included in the security context; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens">
      <summary>Gets or sets the maximum number of logon tokens to cache. </summary>
      <returns>The maximum number of logon tokens to cache.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider">
      <summary>Gets or sets the membership provider.</summary>
      <returns>The <see cref="T:System.Web.Security.MembershipProvider" /> for this service. The default is the <see cref="T:System.Web.Security.SqlMembershipProvider" />.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt is made to set this property when the credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode">
      <summary>Gets or sets the method of validating the user name and password. </summary>
      <returns>A value from the enumeration in <see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordValidationMode">
      <summary>Lists ways to validate in username/password mode.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows">
      <summary>Usernames are mapped to Windows users.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider">
      <summary>Provides password validation based on a configured <see cref="T:System.Web.Security.MembershipProvider" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom">
      <summary>Custom authentication based on a configured custom <see cref="T:System.IdentityModel.Selectors.UsernamePasswordValidator" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsClientCredential">
      <summary>Allows you to specify properties related to Windows credentials to be used to represent the client.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel">
      <summary>Gets or sets the allowed impersonation level. </summary>
      <returns>One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm">
      <summary>Gets or sets a value that indicates whether NTLM authentication should be allowed as Windows SSPI Negotiate authentication. </summary>
      <returns>true if NTLM authentication should be allowed as Windows SSPI Negotiate authentication, false otherwise. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential">
      <summary>Gets or sets the Windows client credential.</summary>
      <returns>The <see cref="T:System.Net.NetworkCredential" /> for the client.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsServiceCredential">
      <summary>Provides properties that describe the service credentials used for Windows authentication.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons">
      <summary>Gets or sets a value that indicates whether to allowanonymous users access (applies only to message-level security). </summary>
      <returns>true if anonymous users are allowed access; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups">
      <summary>Gets or sets a value that indicates whether the Windows groups that a client belongs to are included in the security context.</summary>
      <returns>true if Windows groups are included in the security context; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WSSecurityTokenSerializer">
      <summary>The class used for serializing and deserializing SecurityTokens, SecurityKeyIdentifiers, and SecurityKeyIdentifierClauses defined in the WS-Security, WS-Trust, and WS-SecureConversation security specifications.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" /> class. </summary>
      <param name="emitBspRequiredAttributes">The value to use for the <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" /> property. When true, this includes ValueType and EncodingType attributes where applicable during SecurityToken serialization.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" /> class. </summary>
      <param name="securityVersion">The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" /> class. </summary>
      <param name="securityVersion">The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</param>
      <param name="emitBspRequiredAttributes">The value to use for the <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" /> property.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" /> class. </summary>
      <param name="securityVersion">The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</param>
      <param name="emitBspRequiredAttributes">The value to use for the <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" /> property.</param>
      <param name="samlSerializer">The <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, which is the extensibility point used for serializing and deserializing SAML tokens.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" /> class.</summary>
      <param name="securityVersion">The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</param>
      <param name="emitBspRequiredAttributes">The value to use for the <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" /> property.</param>
      <param name="samlSerializer">The <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, which is the extensibility point used for serializing and deserializing SAML tokens.</param>
      <param name="securityStateEncoder">The <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />, which is used for encoding and decoding security state that is attached as a cookie to security context tokens.</param>
      <param name="knownTypes">A collection of known <see cref="T:System.Type" />s. These known types must be declared to include custom claims as part of the security context token's cookie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityVersion" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" /> class.</summary>
      <param name="securityVersion">The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</param>
      <param name="emitBspRequiredAttributes">The value to use for the <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" /> property.</param>
      <param name="samlSerializer">The <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, which is the extensibility point used for serializing and deserializing SAML tokens.</param>
      <param name="securityStateEncoder">The <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />, which is used for encoding and decoding security state that is attached as a cookie to security context tokens.</param>
      <param name="knownTypes">A collection of known <see cref="T:System.Type" />s. These known types must be declared to include custom claims as part of the security context token's cookie.</param>
      <param name="maximumKeyDerivationOffset">The maximum key derivation offset. This setting places a bound on the amount of processing the server does when deserializing Derived Key Tokens.</param>
      <param name="maximumKeyDerivationLabelLength">The maximum key derivation label length. This setting places a bound on the amount of processing the server does when deserializing Derived Key Tokens.</param>
      <param name="maximumKeyDerivationNonceLength">The maximum key derivation nonce length. This setting places a bound on the amount of processing the server does when deserializing Derived Key Tokens.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityVersion" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumKeyDerivationOffset" /> is less than 0, <paramref name="maximumKeyDerivationLabelLength" /> is less than 0, or <paramref name="maximumKeyDerivationNonceLength" /> is less than or equal to 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Gets a value that indicates whether the key identifier clause core can be read using the specified reader. </summary>
      <returns>true if the key identifier clause core can be read using the specified reader; otherwise, false. </returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Gets a value that indicates whether the key identifier core can be read using the specified reader.</summary>
      <returns>true if the key identifier core can be read using the specified reader; otherwise, false.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
      <summary>Gets a value that indicates whether the token core can be read using the specified reader.</summary>
      <returns>true if the token core can be read using the specified reader; otherwise, false.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Gets a value that indicates whether the key identifier clause core with a specified key identifier clause can be written.</summary>
      <returns>true if the key identifier clause core with the specified key identifier clause can be written; otherwise, false.</returns>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Gets a value that indicates whether the key identifier core with a specified key identifier clause can be written.</summary>
      <returns>true if the key identifier core with the specified key identifier clause can be written; otherwise, false.</returns>
      <param name="keyIdentifier">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value that indicates whether the token core with a specified security token can be written.</summary>
      <returns>true if the token core with the specified security token can be written; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.CreateKeyIdentifierClauseFromTokenXml(System.Xml.XmlElement,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause from a token expressed as XML.</summary>
      <returns>The created <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="element">The <see cref="T:System.Xml.XmlElement" /> that represents the security token.</param>
      <param name="tokenReferenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.Xml.XmlException">An error occurred when deserializing the key identifier clause, or the key identifier clause could not be read.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.DefaultInstance">
      <summary>Gets a default instance of this class.</summary>
      <returns>A default instance of this class.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes">
      <summary>Gets a value that indicates whether to emit BSP required attributes. </summary>
      <returns>true if BSP required attributes are to be emitted; otherwise, false. </returns>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.GetTokenTypeUri(System.Type)">
      <summary>Gets the URI of the security token of the specified type.</summary>
      <returns>The URI of the security token of the specified type.</returns>
      <param name="tokenType">The <see cref="T:System.Type" /> of the security token.</param>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationLabelLength">
      <summary>Gets the maximum key derivation label length.</summary>
      <returns>The maximum key derivation label length.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationNonceLength">
      <summary>Gets the maximum key derivation nonce length.</summary>
      <returns>The maximum key derivation nonce length.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.MaximumKeyDerivationOffset">
      <summary>Gets the maximum key derivation offset.</summary>
      <returns>The maximum key derivation offset.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Reads the key identifier clause core using the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that was read.</returns>
      <param name="reader">The specified <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.Xml.XmlException">An error occurred when deserializing the key identifier clause, or the key identifier clause could not be read.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Reads the key identifier core using the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that was read.</returns>
      <param name="reader">The specified <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.Xml.XmlException">An error occurred when deserializing the key identifier, or the key identifier could not be read.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the token core using the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that was read.</returns>
      <param name="reader">The specified <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="tokenResolver">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />. </param>
      <exception cref="T:System.Xml.XmlException">An error occurred when deserializing the token, or the token could not be read.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.WSSecurityTokenSerializer.SecurityVersion">
      <summary>Gets the security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Writes the key identifier clause core with a specified key identifier clause using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The specified <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</param>
      <exception cref="T:System.Xml.XmlException">An error occurred when serializing the key identifier clause.</exception>
      <exception cref="T:System.InvalidOperationException">The key identifier clause was not successfully written.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Writes the key identifier core with a specified key identifier clause using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The specified <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="keyIdentifier">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</param>
      <exception cref="T:System.Xml.XmlException">An error occurred when serializing the key identifier.</exception>
      <exception cref="T:System.InvalidOperationException">The key identifier was not successfully written.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Writes the token core with a specified security token using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The specified <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <exception cref="T:System.Xml.XmlException">An error occurred when serializing the security token.</exception>
      <exception cref="T:System.InvalidOperationException">The token was not successfully written.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential">
      <summary>Defines a certificate used by a client to identify itself.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate">
      <summary>Gets or sets the certificate to use to represent the service when communicating back to the client.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to use to represent the service when communicating back to the client.</returns>
      <exception cref="T:System.InvalidOperationException">A set method was used when the credential is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Allows you to specify the certificate to use to represent the client by specifying query parameters such as <paramref name="storeLocation" />, <paramref name="storeName" />, <paramref name="findType" /> and <paramref name="findValue" />.</summary>
      <param name="storeLocation">The location of the certificate store the client uses to obtain the client certificate.</param>
      <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
      <param name="findType">Defines the type of X.509 search to be executed.</param>
      <param name="findValue">The value to search for in the X.509 certificate store.</param>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Allows you to specify the certificate to use to represent the service by specifying the subject distinguished name.</summary>
      <param name="subjectName">Subject distinguished name.</param>
      <param name="storeLocation">The location of the certificate store the service uses to obtain the service certificate.</param>
      <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
      <summary>Represents the settings used by the service to validate the certificate presented by the clients. It also contains a certificate for the service to use for encrypting responses or callbacks for clients when MutualCertificateDuplex message security authentication mode is used.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication">
      <summary>Gets the settings used to validate the certificate presented by the client during authentication.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate">
      <summary>Gets or sets the certificate to use in MutualCertificateDuplex message security authentication mode. </summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to use to encrypt messages sent to the client by the service in the uncorrelated duplex transport case if the MutualCertificateDuplex message security authentication mode is used.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set a read-only credential.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Specifies the certificate to use for encrypting messages for the client. This setting is used only by bindings that are configured with the MutualCertificateDuplex message security authentication mode.</summary>
      <param name="storeLocation">The location of the certificate store that the service uses to obtain the certificate.</param>
      <param name="storeName">The name of the X.509 certificate store to open.</param>
      <param name="findType">The type of X.509 search to be executed.</param>
      <param name="findValue">The value to search for in the X.509 certificate store.</param>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Enables you to specify the certificate to use for encrypting messages for the client by specifying the subject distinguished name. This setting is used only by bindings that are configured with the MutualCertificateDuplex message security authentication mode.</summary>
      <param name="subjectName">Subject distinguished name.</param>
      <param name="storeLocation">The location of the certificate store that the service uses to obtain the certificate.</param>
      <param name="storeName">The name of the X.509 certificate store to open.</param>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential">
      <summary>Represents the settings used by the client to validate the certificate presented by the service using SSL authentication. It also contains any certificate for the service that is explicitly configured on the client to use for encrypting messages to the service using message security.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication">
      <summary>Gets the settings used to validate the service certificate obtained using SSL authentication.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate">
      <summary>Gets or sets the default certificate to use for the service. </summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to use to secure messages sent to the service.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates">
      <summary>Gets or sets a scoped certificate to use to represent the service that the client is communicating with. </summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to use to secure messages sent to the service.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Specifies the default certificate to use for the service. For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</summary>
      <param name="storeLocation">The location of the certificate store the service uses to obtain the service certificate.</param>
      <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
      <param name="findType">Defines the type of X.509 search to be executed.</param>
      <param name="findValue">The value to search for in the X.509 certificate store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findValue" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Specifies the default certificate to use for the service. For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</summary>
      <param name="subjectName">Subject distinguished name.</param>
      <param name="storeLocation">The location of the certificate store that the service uses to obtain the service certificate.</param>
      <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subjectName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)">
      <summary>Gets a certificate by certificate store location, certificate store name, type of X.509 search, and value to search for, and stores it in a collection to be used for the URL that sets the scope.</summary>
      <param name="storeLocation">The location of the certificate store that the service uses to obtain the service certificate.</param>
      <param name="storeName">The name of the X.509 certificate store to open.</param>
      <param name="findType">The type of X.509 search to be executed.</param>
      <param name="findValue">The value to search for in the X.509 certificate store.</param>
      <param name="targetService">The URL that sets the scope.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findValue" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetService" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)">
      <summary>Gets a certificate by subject name, certificate store location, and certificate store name, and stores it in a collection to be used for the URL that sets the scope.</summary>
      <param name="subjectName">The fully qualified subject name.</param>
      <param name="storeLocation">The location of the certificate store that the service uses to obtain the service certificate.</param>
      <param name="storeName">The name of the X.509 certificate store to open.</param>
      <param name="targetService">The URL that sets the scope.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subjectName" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetService" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential">
      <summary>Defines a certificate used by a service to identify itself.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.Certificate">
      <summary>Gets or sets the certificate to use for representing the service when communicating back to the client.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to use for representing the service when communicating back to the client.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to set when credential is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Specifies the certificate to use for representing the service by specifying query parameters such as <paramref name="storeLocation" />, <paramref name="storeName" />, <paramref name="findType" /> and <paramref name="findValue" />.</summary>
      <param name="storeLocation">The location of the certificate store the client uses to obtain the client certificate.</param>
      <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
      <param name="findType">Defines the type of X.509 search to be executed.</param>
      <param name="findValue">The value to search for in the X.509 certificate store.</param>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String)">
      <summary>Specifies the certificate to use for representing the service by specifying the subject distinguished name.</summary>
      <param name="subjectName">Subject distinguished name.</param>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Specifies the certificate to use for representing the service by specifying the subject distinguished name, the certificate store name and store location.</summary>
      <param name="subjectName">Subject distinguished name.</param>
      <param name="storeLocation">The location of the certificate store the service uses to obtain the service certificate.</param>
      <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateValidationMode">
      <summary>An enumeration that lists the ways of validating a certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.None">
      <summary>No validation of the certificate is done. </summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerTrust">
      <summary>The certificate is valid if it is in the trusted people store.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.ChainTrust">
      <summary>The certificate is valid if the chain builds to a certification authority in the trusted root store.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerOrChainTrust">
      <summary>The certificate is valid if it is in the trusted people store, or if the chain builds to a certification authority in the trusted root store.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.Custom">
      <summary>The user must plug in a custom <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> to validate the certificate.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.X509ClientCertificateAuthentication">
      <summary>Specifies authentication properties for validating the client certificate.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode">
      <summary>Gets the certificate validation mode.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" /> values.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator">
      <summary>Gets or sets a custom client certificate validator.</summary>
      <returns>The custom <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
      <exception cref="T:System.InvalidOperationException">set when credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.IncludeWindowsGroups">
      <summary>Gets or sets a value that indicates whether Windows groups are included in the authorization context.</summary>
      <returns>true if Windows groups are included in the authorization context; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount">
      <summary>Gets or sets a value that indicates whether the certificate is mapped to Windows accounts. </summary>
      <returns>true if the certificate is mapped to Windows accounts; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">set when credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.RevocationMode">
      <summary>Gets or sets the certificate revocation mode for ChainTrust and PeerOrChainTrust X.509 certificate validation.</summary>
      <returns>One of the values in <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />: NoCheck, Online, or Offline. The default is Online.</returns>
      <exception cref="T:System.InvalidOperationException">set when credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.TrustedStoreLocation">
      <summary>Gets or sets the trusted store location under which context the client certificate chain is validated.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
      <exception cref="T:System.InvalidOperationException">set when credential is read-only.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.X509PeerCertificateAuthentication">
      <summary>Specifies authentication properties for the peer certificate.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CertificateValidationMode">
      <summary>Gets the certificate validation mode.</summary>
      <returns>A value from the enumeration in <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.CustomCertificateValidator">
      <summary>Gets or sets a custom client certificate validator.</summary>
      <returns>The custom <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
      <exception cref="T:System.InvalidOperationException">Set when credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.RevocationMode">
      <summary>Gets or sets the certificate revocation mode.</summary>
      <returns>One of the values in <see cref="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.RevocationMode" />: None, Online, or Cached.</returns>
      <exception cref="T:System.InvalidOperationException">Set when credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509PeerCertificateAuthentication.TrustedStoreLocation">
      <summary>Gets or sets the trusted store location where the client certificate is validated.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
      <exception cref="T:System.InvalidOperationException">Set when credential is read-only.</exception>
    </member>
    <member name="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication">
      <summary>Represents the settings used by the client proxy to authenticate service certificates that are obtained using SSL/TLS negotiation.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode">
      <summary>Gets the certificate validation mode.</summary>
      <returns>A value from the enumeration in <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator">
      <summary>Gets or sets a custom client certificate validator.</summary>
      <returns>The custom <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to set when credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode">
      <summary>Gets or sets the certificate revocation mode for ChainTrust and PeerOrChainTrust X.509 certificate validation mode.</summary>
      <returns>One of the values in <see cref="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode" />: NoCheck, Online, or Offline.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to set when credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation">
      <summary>Gets or sets the trusted store location under which context the client certificate chain is validated.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" />.</returns>
      <exception cref="T:System.InvalidOperationException">Attempted to set when credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AllowedAudienceUris"></member>
    <member name="P:System.ServiceModel.Security.IssuedTokenServiceCredential.AudienceUriMode"></member>
    <member name="T:System.ServiceModel.Security.SecureConversationVersion">
      <summary>Contains the set of supported WS-SecureConversation versions. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.Default">
      <summary>Returns the default version.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecureConversationVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.Namespace">
      <summary>Returns the namespace for this WS-SecureConversation version.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.Prefix">
      <summary>Returns the prefix.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversation13">
      <summary>Gets version 1.3 of WS-SecureConversation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecureConversationVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversationFeb2005">
      <summary>Gets the February 2005 version of WS-SecureConversation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecureConversationVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityPolicyVersion">
      <summary>Contains the set of supported WS-SecurityPolicy versions. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.Namespace">
      <summary>Returns the namespace for this WS-SecurityPolicy version.</summary>
      <returns>The WS-SecurityPolicy version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.Prefix">
      <summary>Returns the prefix.</summary>
      <returns>The prefix.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11">
      <summary>Gets version 1.1 of WS-SecurityPolicy.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityPolicyVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy12">
      <summary>Gets version 1.2 of WS-SecurityPolicy.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityPolicyVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)"></member>
    <member name="T:System.ServiceModel.Security.TrustVersion">
      <summary>Contains the set of supported WS-Trust versions. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.Default">
      <summary>Returns the default version.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.TrustVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.Namespace">
      <summary>Returns the namespace for this trust version.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.Prefix">
      <summary>Returns the prefix.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryString" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.WSTrust13">
      <summary>Gets version 1.3 of WS-Trust.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.TrustVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.WSTrustFeb2005">
      <summary>Gets the February 2005 version of WS-Trust.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.TrustVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" /> class. </summary>
      <param name="securityVersion">The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</param>
      <param name="trustVersion">A <see cref="T:System.ServiceModel.Security.TrustVersion" /> that specifies the set of supported versions of the WS-Trust specification.</param>
      <param name="secureConversationVersion">A <see cref="T:System.ServiceModel.Security.SecureConversationVersion" /> that specifies the set of supported versions of the WS-SecureConversation specification.</param>
      <param name="emitBspRequiredAttributes">The value to use for the <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" /> property.</param>
      <param name="samlSerializer">The <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, which is the extensibility point used for serializing and deserializing SAML tokens.</param>
      <param name="securityStateEncoder">The <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />, which is used for encoding and decoding security state that is attached as a cookie to security context tokens.</param>
      <param name="knownTypes">A collection of known <see cref="T:System.Type" />s. These known types must be declared to include custom claims as part of the security context token's cookie.</param>
    </member>
    <member name="M:System.ServiceModel.Security.WSSecurityTokenSerializer.#ctor(System.ServiceModel.Security.SecurityVersion,System.ServiceModel.Security.TrustVersion,System.ServiceModel.Security.SecureConversationVersion,System.Boolean,System.IdentityModel.Tokens.SamlSerializer,System.ServiceModel.Security.SecurityStateEncoder,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.WSSecurityTokenSerializer" /> class. </summary>
      <param name="securityVersion">The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</param>
      <param name="trustVersion">A <see cref="T:System.ServiceModel.Security.TrustVersion" /> that specifies the set of supported versions of the WS-Trust specification.</param>
      <param name="secureConversationVersion">A <see cref="T:System.ServiceModel.Security.SecureConversationVersion" /> that specifies the set of supported versions of the WS-SecureConversation specification.</param>
      <param name="emitBspRequiredAttributes">The value to use for the <see cref="P:System.ServiceModel.Security.WSSecurityTokenSerializer.EmitBspRequiredAttributes" /> property.</param>
      <param name="samlSerializer">The <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, which is the extensibility point used for serializing and deserializing SAML tokens.</param>
      <param name="securityStateEncoder">The <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />, which is used for encoding and decoding security state that is attached as a cookie to security context tokens.</param>
      <param name="knownTypes">A collection of known <see cref="T:System.Type" />s. These known types must be declared to include custom claims as part of the security context token's cookie.</param>
      <param name="maximumKeyDerivationOffset">The maximum key derivation offset. This setting places a bound on the amount of processing the server does when deserializing Derived Key Tokens.</param>
      <param name="maximumKeyDerivationLabelLength">The maximum key derivation label length. This setting places a bound on the amount of processing the server does when deserializing Derived Key Tokens.</param>
      <param name="maximumKeyDerivationNonceLength">The maximum key derivation nonce length. This setting places a bound on the amount of processing the server does when deserializing Derived Key Tokens.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken">
      <summary>Represents a binary secret security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class. </summary>
      <param name="key">A byte-array that represents the key.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class. </summary>
      <param name="keySizeInBits">The key size in bits.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class. </summary>
      <param name="id">The token ID.</param>
      <param name="key">A byte-array that represents the key.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class. </summary>
      <param name="id">The token ID.</param>
      <param name="key">A byte-array that represents the key.</param>
      <param name="allowCrypto">A <see cref="T:System.Boolean" /> that indicates whether to allow cryptography.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class. </summary>
      <param name="id">The token ID.</param>
      <param name="keySizeInBits">The key size in bits.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Either <paramref name="keySizeInBits" /> is less than or equal to zero, or it is greater than or equal to 512, or it is not a multiple of 8.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class. </summary>
      <param name="id">The token ID.</param>
      <param name="keySizeInBits">The key size in bits.</param>
      <param name="allowCrypto">A <see cref="T:System.Boolean" /> that indicates whether to allow cryptography.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Either <paramref name="keySizeInBits" /> is less than or equal to zero, or it is greater than or equal to 512, or it is not a multiple of 8.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.GetKeyBytes">
      <summary>Gets the bytes that represent the key.</summary>
      <returns>The key.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.Id">
      <summary>Gets the token ID.</summary>
      <returns>The token ID.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.KeySize">
      <summary>Gets the token key size.</summary>
      <returns>The token key size.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.SecurityKeys">
      <summary>Gets a collection of security keys.</summary>
      <returns>A collection of  <see cref="T:System.IdentityModel.Tokens.SecurityKey" />s.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.ValidFrom">
      <summary>Gets the token effective start time.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the token effective start time. </returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.ValidTo">
      <summary>Gets the token effective start time.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the token effective start time.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
      <summary>Specifies the types of required and optional claims expected to appear in the federated credential.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> class for a required claim of the specified type. </summary>
      <param name="claimType">The claim type.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> class for a claim of the specified type. </summary>
      <param name="claimType">The claim type.</param>
      <param name="isOptional">If false, the claim is required; otherwise, it is optional.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType">
      <summary>Gets the claim type that was specified in the constructor.</summary>
      <returns>The claim type.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional">
      <summary>Gets a value that indicates whether the claim is optional.</summary>
      <returns>true if this instance of the class is for an optional claim; false if it specifies a required claim.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator">
      <summary>Specifies the contract that should be implemented by a custom security token authenticator that issues tokens to the client.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler">
      <summary>Gets or sets a handler for when the token is issued.</summary>
      <returns>A delegate that handles the event when a token is issued.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler">
      <summary>Gets or sets a handler for when the token is renewed.</summary>
      <returns>A delegate that handles the event when a token is renewed.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ILogonTokenCacheManager">
      <summary>This interface enables an application to clear the Windows token cache on demand.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache">
      <summary>Removes all tokens from the logon cache.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken(System.String)">
      <summary>Removes the specified token from the logon cache.</summary>
      <returns>true if the user's token was successfully removed; otherwise, false. </returns>
      <param name="username">The user name on the token to remove.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement">
      <summary>Specifies security property requirements specific to channel creation in the Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.TargetAddress">
      <summary>Gets and sets the target address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.ToString">
      <summary>Outputs a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of the class.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.Via">
      <summary>Gets and sets the Via.</summary>
      <returns>The <see cref="T:System.Uri" /> that represents the Via.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache">
      <summary>When implemented, this interface specifies a contract for a security context token cache.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)">
      <summary>Adds a security context security token to the token cache.</summary>
      <param name="token">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts">
      <summary>Clears the token cache of content.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)">
      <summary>Gets a collection of security context security token IDs that match a specified context ID.</summary>
      <returns>A generic collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />s.</returns>
      <param name="contextId">The specified security context ID.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Gets the security context security token ID that matches a specified context ID and generation.</summary>
      <returns>The matching <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</returns>
      <param name="contextId">The specified security context ID.</param>
      <param name="generation">A <see cref="T:System.Xml.UniqueId" /> that represents the generation.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)">
      <summary>Removes all tokens from the cache that match a given context ID.</summary>
      <param name="contextId">The specified security context ID.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Removes the token from the cache that matches a given context ID and generation.</summary>
      <param name="contextId">The specified security context ID.</param>
      <param name="generation">A <see cref="T:System.Xml.UniqueId" /> that represents the generation.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)">
      <summary>Tries to add a token to the cache.</summary>
      <returns>true if the token was added successfully to the cache; otherwise, false. </returns>
      <param name="token">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="token" /> date or time is outside limits.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)">
      <summary>Updates the expiration date for a token in the cache.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</param>
      <param name="expirationTime">The new expiration time and date.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler">
      <summary>This delegate points to a method that when implemented will be called by the Authenticators before the token is issued to the client.</summary>
      <param name="issuedToken">The token to be issued to the client.</param>
      <param name="tokenRequestor">The endpoint for which the token is requested. This is the endpoint to which the client will present the issued token.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters">
      <summary>Represents the parameters for a security token issued in a Federated security scenario.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class. </summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class. </summary>
      <param name="tokenType">The token type.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class. </summary>
      <param name="tokenType">The token type.</param>
      <param name="issuerAddress">The address of the endpoint that issues the token.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.String,System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class. </summary>
      <param name="tokenType">The token type.</param>
      <param name="issuerAddress">The address of the endpoint that issues the token.</param>
      <param name="issuerBinding">The binding of the issuer.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.AdditionalRequestParameters">
      <summary>A collection of additional request parameters</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.Xml.XmlElement" /> that holds the additional request parameters.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.ClaimTypeRequirements">
      <summary>Gets a collection of claim type requirements.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> that holds the additional claim type requirements.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> is not External or Internal.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.CreateRequestParameters(System.ServiceModel.MessageSecurityVersion,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Creates a collection of issued token request parameter XML elements that get included in the request sent by the client to the security token service.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> that contains <see cref="T:System.Xml.XmlElement" />s that represent the request parameters.</returns>
      <param name="messageSecurityVersion">The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</param>
      <param name="securityTokenSerializer">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the issued token has an asymmetric key.</summary>
      <returns>true if the token has an asymmetric key; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>When implemented, initializes a security token requirement based on the properties set on the IssuedSecurityTokenParameters.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.IssuerAddress">
      <summary>Gets or sets the token issuer's address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the token issuer.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.IssuerBinding">
      <summary>Gets or sets the token issuer's binding, to be used by the client.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> of the token issuer, to be used by the client.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.IssuerMetadataAddress">
      <summary>Gets or sets the token issuer's metadata address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the token issuer.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeySize">
      <summary>Gets or sets the issued token key size.</summary>
      <returns>The size of the token key.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">An attempt was made to set a value less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType">
      <summary>Gets or sets the issued token key type.</summary>
      <returns>One of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" /> values.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.SupportsClientAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports client authentication.</summary>
      <returns>true if the token supports client authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>true if the token supports a Windows identity for authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.SupportsServerAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>true if the token supports server authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.TokenType">
      <summary>Gets or sets the issued token type.</summary>
      <returns>The token type.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of this class.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider">
      <summary>Token provider for issued security tokens.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.#ctor">
      <summary>Creates a new instance of this class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Abort">
      <summary>Aborts the provider.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Asynchronously begins closing the provider.</summary>
      <returns>An <see cref="T:System.IAsyncResult" />.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">A <see cref="T:System.Object" /> that represents the state.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Asynchronously begins closing the provider.</summary>
      <returns>An <see cref="T:System.IAsyncResult" />.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> after which the call times out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">A <see cref="T:System.Object" /> that represents the state.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Asynchronously begins getting the token core.</summary>
      <returns>An <see cref="T:System.IAsyncResult" />.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> after which the call times out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">A <see cref="T:System.Object" /> that represents the state.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Asynchronously begins opening the provider.</summary>
      <returns>An <see cref="T:System.IAsyncResult" />.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">A <see cref="T:System.Object" /> that represents the state.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Asynchronously begins opening the provider.</summary>
      <returns>An <see cref="T:System.IAsyncResult" />.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> after which the call times out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">A <see cref="T:System.Object" /> that represents the state.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.CacheIssuedTokens">
      <summary>Gets or sets a value that indicates whether to cache issued tokens. </summary>
      <returns>true if issued tokens are cached; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Close">
      <summary>Closes the provider.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Close(System.TimeSpan)">
      <summary>Closes the provider.</summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> after which the call times out.</param>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Closed">
      <summary>Provides registration and deregistration for the Closed event.</summary>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Closing">
      <summary>Provides registration and deregistration for the Closing event.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.DefaultCloseTimeout">
      <summary>Gets the default time-out for closing the connection.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the default time-out for closing the connection.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.DefaultOpenTimeout">
      <summary>Gets the default time-out for opening the connection.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the default time-out for opening the connection.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Dispose">
      <summary>Disposes of this instance of the object.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.EndClose(System.IAsyncResult)">
      <summary>The asynchronous callback for closing the provider.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)">
      <summary>The asynchronous callback for getting the token core.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</returns>
      <param name="result">An <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.EndOpen(System.IAsyncResult)">
      <summary>The asynchronous callback for opening the provider.</summary>
      <param name="result">An <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Faulted">
      <summary>Provides registration and deregistration for the Faulted event.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Gets the token core.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the token core.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> after which the call times out.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IdentityVerifier">
      <summary>Gets or sets the identity verifier.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IssuedTokenRenewalThresholdPercentage">
      <summary>Gets or sets the issued token renewal threshold percentage.</summary>
      <returns>The issued token renewal threshold percentage.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IssuerAddress">
      <summary>Gets or sets the issuer address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IssuerBinding">
      <summary>Gets or sets the issuer binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.IssuerChannelBehaviors">
      <summary>Gets or sets the issuer channel behaviors.</summary>
      <returns>A <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> that contains the <see cref="T:System.ServiceModel.Description.IEndpointBehavior" />s for the issuer channel.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.KeyEntropyMode">
      <summary>Gets or sets the key entropy mode.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.MaxIssuedTokenCachingTime">
      <summary>Gets or sets the maximum time that an issued token will be cached.</summary>
      <returns>A <see cref="T:System.Timespan" /> that represents the maximum time that an issued token will be cached.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.MessageSecurityVersion">
      <summary>Gets or sets the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Open">
      <summary>Opens the provider.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Open(System.TimeSpan)">
      <summary>Opens the provider.</summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> after which the call times out.</param>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Opened">
      <summary>Provides registration and deregistration for the Opened event.</summary>
    </member>
    <member name="E:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.Opening">
      <summary>Provides registration and deregistration for the Opening event.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.SecurityAlgorithmSuite">
      <summary>Gets or sets the security algorithm suite.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.SecurityTokenSerializer">
      <summary>Gets or sets the security token serializer.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.State">
      <summary>Gets the communication state.</summary>
      <returns>The <see cref="T:System.ServiceModel.CommunicationState" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.SupportsTokenCancellation">
      <summary>Gets a value that indicates whether token cancellation is supported. </summary>
      <returns>true if token cancellation is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.TargetAddress">
      <summary>Gets or sets the target address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider.TokenRequestParameters">
      <summary>Gets the token request parameters.</summary>
      <returns>A collection of <see cref="T:System.Xml.XmlElement" />s that represent the token request parameters.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters">
      <summary>Represents the parameters for a Kerberos security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters" /> class.</summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the token has an asymmetric key.</summary>
      <returns>true if the token has an asymmetric key; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Initializes a security token requirement.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.SupportsClientAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports client authentication.</summary>
      <returns>true if the token supports client authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>true if the token supports a Windows identity for authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.KerberosSecurityTokenParameters.SupportsServerAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>true if the token supports server authentication; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement">
      <summary>Specifies security property requirements specific to the listener service in the Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.AuditLogLocation">
      <summary>Gets and sets the audit log location.</summary>
      <returns>The <see cref="T:System.ServiceModel.AuditLogLocation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.ListenUri">
      <summary>Gets and sets the listener URI.</summary>
      <returns>The listener <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.MessageAuthenticationAuditLevel">
      <summary>Gets and sets the message authentication audit level.</summary>
      <returns>The <see cref="T:System.ServiceModel.AuditLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.SuppressAuditFailure">
      <summary>Gets or sets a value that indicates whether to suppress an audit failure. </summary>
      <returns>true if audit failures are suppressed; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of the class.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler">
      <summary>The delegate when implemented is called before a renewed token is returned to the client. </summary>
      <param name="newSecurityToken">The renewed token.</param>
      <param name="oldSecurityToken">The expired security token.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters">
      <summary>Represents the parameters for an RSA security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters" /> class.</summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the token has an asymmetric key.</summary>
      <returns>true if the token has an asymmetric key; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Initializes a security token requirement.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.SupportsClientAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports client authentication.</summary>
      <returns>true if the token supports client authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>true if the token supports a Windows identity for authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.SupportsServerAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>true if the token supports server authentication; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters">
      <summary>Represents the parameters for a secure conversation security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class from the properties of a specified <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />. </summary>
      <param name="bootstrapSecurityBindingElement">The <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class from the properties of a specified <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />. </summary>
      <param name="bootstrapSecurityBindingElement">The <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <param name="requireCancellation">true if cancellation is required; otherwise, false. </param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class from the properties of a specified <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> with specified <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />. </summary>
      <param name="bootstrapSecurityBindingElement">The <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</param>
      <param name="requireCancellation">true if cancellation is required; otherwise, false. </param>
      <param name="bootstrapProtectionRequirements">The <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class from another instance of this class. </summary>
      <param name="other">Another instance of this class.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.BootstrapProtectionRequirements">
      <summary>Gets the bootstrap protection requirements.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />
      </returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.BootstrapSecurityBindingElement">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> is not External or Internal.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the security token has an asymmetric key. </summary>
      <returns>This property always returns false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Initializes a security token requirement.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.RequireCancellation">
      <summary>Gets or sets a value that indicates whether cancellation is required. </summary>
      <returns>true if cancellation is required; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.SupportsClientAuthentication">
      <summary>Gets a value that indicates whether the token supports client authentication.</summary>
      <returns>true if the token supports client authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>Gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>true if the token supports a Windows identity for authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.SupportsServerAuthentication">
      <summary>Gets a value that indicates whether the token supports server authentication.</summary>
      <returns>true if the token supports server authentication; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of this class.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken">
      <summary>Represents the token defined by the WS-SecureConversation specification.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" /> class. </summary>
      <param name="contextId">A <see cref="T:System.Xml.UniqueId" /> that represents the context id.</param>
      <param name="key">A byte array that represents the key.</param>
      <param name="validFrom">The effective start time.</param>
      <param name="validTo">The expiration time.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" /> class. </summary>
      <param name="contextId">A <see cref="T:System.Xml.UniqueId" /> that represents the context id.</param>
      <param name="id">The token id.</param>
      <param name="key">A byte array that represents the key.</param>
      <param name="validFrom">The effective start time.</param>
      <param name="validTo">The expiration time.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" /> class. </summary>
      <param name="contextId">A <see cref="T:System.Xml.UniqueId" /> that represents the context id.</param>
      <param name="id">The token id.</param>
      <param name="key">A byte array that represents the key.</param>
      <param name="validFrom">The effective start time.</param>
      <param name="validTo">The expiration time.</param>
      <param name="authorizationPolicies">A read-only collection of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> instances that represents the party to whom the token is issued.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" /> class. </summary>
      <param name="contextId">A <see cref="T:System.Xml.UniqueId" /> that represents the context id.</param>
      <param name="id">The token id.</param>
      <param name="key">A byte array that represents the key.</param>
      <param name="validFrom">The effective start time.</param>
      <param name="validTo">The expiration time.</param>
      <param name="keyGeneration">A <see cref="T:System.Xml.UniqueId" /> that represents the key generation.</param>
      <param name="keyEffectiveTime">The key effective start time.</param>
      <param name="keyExpirationTime">The key expiration time.</param>
      <param name="authorizationPolicies">A read-only collection of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />   instances that represents the party to whom the token is issued.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies">
      <summary>Gets a read-only collection of token authorization policies.</summary>
      <returns>A read-only collection of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> instances.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether a specified key identifier clause type can be created. </summary>
      <returns>true if the specified key identifier clause type can be created; otherwise, false.</returns>
      <typeparam name="T">The specified key identifier clause type.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ContextId">
      <summary>Gets the context id.</summary>
      <returns>A <see cref="T:System.Xml.UniqueId" /> that represents the context id.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)">
      <summary>Creates a security context token cookie.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</returns>
      <param name="contextId">A <see cref="T:System.Xml.UniqueId" /> that represents the context id.</param>
      <param name="id">The token id.</param>
      <param name="key">A byte array that represents the key.</param>
      <param name="validFrom">The effective start time.</param>
      <param name="validTo">The expiration time.</param>
      <param name="authorizationPolicies">A read-only collection of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> instances.</param>
      <param name="securityStateEncoder">The <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)">
      <summary>Creates a security context token cookie.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</returns>
      <param name="contextId">A <see cref="T:System.Xml.UniqueId" /> that represents the context id.</param>
      <param name="id">The token id.</param>
      <param name="key">A byte array that represents the key.</param>
      <param name="validFrom">The effective start time.</param>
      <param name="validTo">The expiration time.</param>
      <param name="keyGeneration">A <see cref="T:System.Xml.UniqueId" /> that represents the key generation.</param>
      <param name="keyEffectiveTime">The key effective start time.</param>
      <param name="keyExpirationTime">The key expiration time.</param>
      <param name="authorizationPolicies">A read-only collection of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> instances.</param>
      <param name="securityStateEncoder">The <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates a key identifier clause of a specified type.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> cast to type <paramref name="T" />.</returns>
      <typeparam name="T">The specified type.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Dispose">
      <summary>Releases unmanaged resources used by this instance of this object.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Id">
      <summary>Gets the token id.</summary>
      <returns>The token id.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime">
      <summary>Gets the key effective start time.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the key effective start time.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime">
      <summary>Gets the key expiration time.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the key expiration time.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyGeneration">
      <summary>Gets the key generation.</summary>
      <returns>A <see cref="T:System.Xml.UniqueId" /> that represents the key generation.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Gets a value that indicates whether the current token's key identifier clause matches a specified key identifier clause. </summary>
      <returns>true if the current token's key identifier clause matches a specified key identifier clause; otherwise, false. The default is false.</returns>
      <param name="keyIdentifierClause">The specified key identifier clause.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityKeys">
      <summary>Gets a read-only collection of security keys.</summary>
      <returns>A read-only collection of <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> instances.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ToString">
      <summary>Generates a text representation of the current instance of this object.</summary>
      <returns>A text representation of the current instance of this object.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidFrom">
      <summary>Gets the token effective start time.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the token effective start time.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidTo">
      <summary>Gets the token expiration time.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the token expiration time.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator">
      <summary>Validates tokens and extracts claims.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value that indicates whether a specified token can be validated. </summary>
      <returns>true if the specified token can be validated; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Validates a specified token.</summary>
      <returns>A collection of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> instances.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver">
      <summary>Resolves security context tokens.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> class. </summary>
      <param name="securityContextCacheCapacity">The size of the security context cache.</param>
      <param name="removeOldestTokensOnCacheFull">Set to true if the oldest tokens should be removed when the cache is full; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)">
      <summary>Adds a security context security token to the token cache.</summary>
      <param name="token">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</param>
      <exception cref="T:System.ServiceModel.QuotaExceededException">
        <see cref="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" /> is false and the cache capacity has been reached or exceeded.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts">
      <summary>Clears the token cache of content.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts(System.Xml.UniqueId)">
      <summary>Gets a collection of security context security token IDs that match a specified context ID.</summary>
      <returns>A generic collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />s.</returns>
      <param name="contextId">The specified security context ID.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Gets the security context security token ID that matches a specified context ID and generation.</summary>
      <returns>The matching <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</returns>
      <param name="contextId">The specified security context ID.</param>
      <param name="generation">A <see cref="T:System.Xml.UniqueId" /> that represents the generation.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts(System.Xml.UniqueId)">
      <summary>Removes all tokens from the cache that match a given context ID.</summary>
      <param name="contextId">The specified security context ID.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Removes the token from the cache that matches a given context ID and generation.</summary>
      <param name="contextId">The specified security context ID.</param>
      <param name="generation">A <see cref="T:System.Xml.UniqueId" /> that represents the generation.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull">
      <summary>Gets a value that indicates whether the oldest tokens should be removed when the cache is full. </summary>
      <returns>true if the oldest tokens should be removed when the cache is full; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity">
      <summary>Gets the security context token cache size.</summary>
      <returns>The security context token cache size.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)">
      <summary>Tries to add a token to the cache.</summary>
      <returns>true if the token was added successfully to the cache; otherwise, false. </returns>
      <param name="token">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="token" /> date or time is outside limits.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <summary>Tries to resolve the security key core, given a specified key identifier clause.</summary>
      <returns>true if the key core was successfully resolved; otherwise, false.</returns>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</param>
      <param name="key">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that is the resolved key core. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>Tries to resolve the token, given a specified key identifier.</summary>
      <returns>true if the key token was successfully resolved; otherwise, false.</returns>
      <param name="keyIdentifier">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />.</param>
      <param name="token">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that is the resolved key core. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>Tries to resolve the token, given a specified key identifier clause.</summary>
      <returns>true if the key token was successfully resolved; otherwise, false.</returns>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</param>
      <param name="token">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that is the resolved key core. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)">
      <summary>Updates the expiration date for a token in the cache.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />.</param>
      <param name="expirationTime">The new expiration time and date.</param>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode">
      <summary>A list of token inclusion requirements for messages.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient">
      <summary>Token is always included in messages to the recipient and never to the initiator.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never">
      <summary>The token is never included in messages but is referenced. The token must be known to the recipient out of band. The option does not work out of the box. You need to include custom credentials for this to work.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once">
      <summary>Token is included once.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator">
      <summary>Token is always included in messages to the initiator and never to the recipient.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters">
      <summary>An abstract class that when implemented represents security token parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> class from another instance.</summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
      <exception cref="T:System.InvalidOperationException">Unable to clone this instance of the class.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey">
      <summary>When implemented, gets a value that indicates whether the token has an asymmetric key. </summary>
      <returns>true if the token has an asymmetric key; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode">
      <summary>Gets or sets the token inclusion requirements.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>When implemented, initializes a security token requirement.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Gets a value that indicates whether a token matches a key identifier clause.</summary>
      <returns>true if the token matches the key identifier clause; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</param>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> is not <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.External" /> or <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.Internal" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle">
      <summary>Gets or sets the token reference style.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" /> for the token.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">An invalid token reference style was set.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys">
      <summary>Gets or sets a value that indicates whether keys can be derived from the original proof keys. </summary>
      <returns>true if keys need to be derived from the token's key; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports client authentication. </summary>
      <returns>true if the token supports client authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>true if the token supports a Windows identity for authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>true if the token supports server authentication; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of this class.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle">
      <summary>This enumeration sets the desired referencing style that is used to generate security token references (STR) to the security tokens from the signature and encryption elements in the message.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.Internal">
      <summary>The generated STR will reference the token as if it were included in the message.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.External">
      <summary>The generated STR will reference the token as if it were not attached to the message itself.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement">
      <summary>An abstract class that when implemented specifies security property requirements of the token being requested or authenticated that are specific to Windows Communication Foundation (WCF). The security token manager constructs security token providers and security token authenticators that are used by the WCF security processor based on the token requirement.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.AuditLogLocationProperty">
      <summary>Gets the token requirement property name whose value is the location of the audit log to use when recording the results of the authentication (service only).</summary>
      <returns>The key for the AuditLogLocation in the token requirement's Properties dictionary.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ChannelParametersCollectionProperty">
      <summary>Gets the token requirement property name whose value is the channel parameters collection (client only).</summary>
      <returns>The key for the ChannelParametersCollection in the token requirement's Properties dictionary.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.DuplexClientLocalAddressProperty">
      <summary>Gets a value that specifies the name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the DuplexClientLocalAddress property.</summary>
      <returns>The name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the DuplexClientLocalAddress property.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.EndpointFilterTableProperty">
      <summary>Gets the key for the token requirement property whose value is the endpoint filter table that contains the filters for messages that a service endpoint accepts. This is a service property.</summary>
      <returns>The key for the endpoint filter table property of the token requirement.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.HttpAuthenticationSchemeProperty">
      <summary>Gets the key of the token requirement property whose value is the HTTP authentication scheme if this request is for a token provider or token authenticator to be used in HTTP authentication.</summary>
      <returns>The key of the token requirement's HTTP authentication scheme property.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IsInitiator">
      <summary>Gets a value that indicates whether the endpoint that is creating the security token requirement is an initiator or a recipient. </summary>
      <returns>true if the request is made by the initiator of the channel; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IsInitiatorProperty">
      <summary>Gets the key for the token requirement property whose value indicates whether the request is made by the initiator of the channel or the recipient of the channel.</summary>
      <returns>The key for the token requirement property whose value indicates whether the endpoint that creates the requirement is the initiator or recipient.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IsOutOfBandTokenProperty">
      <summary>Gets the key for the token requirement property whose value indicates whether this is the request for a token that is configured on the client or service.</summary>
      <returns>The key for the token requirement property whose value indicates whether this is the request for a token that is configured on the client or service.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuedSecurityTokenParametersProperty">
      <summary>Gets the key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> that contains information about the token if the requirement is for an issued token.</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> that contains information about the token if the requirement is for an issued token.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerAddress">
      <summary>If the token requirement is for an issued token, this property contains the endpoint address of the issuer.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> for the token issuer. This is used for issued token types.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerAddressProperty">
      <summary>Gets the key for the token requirement property whose value is the <see cref="T:System.ServiceModel.EndpointAddress" /> of the issuing party if the requirement is for an issued token.</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.EndpointAddress" /> of the issuing party.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerBinding">
      <summary>If the token requirement is for an issued token, this property contains the binding to use to communicate with the issuer.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerBindingContextProperty">
      <summary>Gets the key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Channels.BindingContext" /> to use to talk to the issuing party if the requirement is for an issued token.</summary>
      <returns>The key for the token requirement property whose value is <see cref="T:System.ServiceModel.Channels.BindingContext" /> to use to talk to the issuing party.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerBindingProperty">
      <summary>Gets the key for the token requirement property whose value is the binding to use to talk to the issuing party when the requirement is for an issued token.</summary>
      <returns>The key for the token requirement property whose value is the binding to use to talk to the issuing party.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ListenUriProperty">
      <summary>Gets the key for the token requirement property whose value is the URI that the service endpoint making the request is listening at (service only).</summary>
      <returns>The key for the token requirement property whose value is the URI that the service endpoint making the request is listening at.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageAuthenticationAuditLevelProperty">
      <summary>Gets the key for the token requirement property whose value is the audit level to use when recording the results of the authentication (service only).</summary>
      <returns>Gets the key for the token requirement property whose value is the audit level to use when recording the results of the authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageDirectionProperty">
      <summary>Gets the key for the token requirement property whose value is the member of the <see cref="T:System.ServiceModel.Description.MessageDirection" /> enumeration to use and that indicates whether the token provider is needed for messages sent from client to server or server to client. </summary>
      <returns>Gets the key for the token requirement property whose value is the member of the <see cref="T:System.ServiceModel.Description.MessageDirection" /> enumeration to use.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageSecurityVersion">
      <summary>Gets or sets the message security version to be used (if necessary).</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageSecurityVersionProperty">
      <summary>Gets the key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that the channel is configured with.</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that the channel is configured with.</returns>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.Namespace">
      <summary>A constant that represents the current namespace.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.PrivacyNoticeUriProperty">
      <summary>Gets the key for the token requirement property whose value is the link to the URI that points to the service's privacy policy if the service has one.</summary>
      <returns>The key for the token requirement property whose value is a link to the URI that points to the service's privacy policy.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.PrivacyNoticeVersionProperty">
      <summary>Gets the key for the token requirement property whose value is a string that represents the privacy notice version.</summary>
      <returns>The key for the token requirement property whose value represents the privacy notice version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecureConversationSecurityBindingElement">
      <summary>Gets or sets a security binding element used for securing the secure conversation bootstrap messages. </summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecureConversationSecurityBindingElementProperty">
      <summary>Gets the key for the token requirement property whose value is the security binding element used to secure the secure conversation bootstrap messages.</summary>
      <returns>The key for the token requirement property whose value represents the security binding element to be used for securing the secure conversation bootstrap messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityAlgorithmSuite">
      <summary>Gets or sets the security algorithm suite to be used (if necessary).</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityAlgorithmSuiteProperty">
      <summary>Gets the key for the token requirement property whose value is the algorithm suite that the channel uses to perform message security.</summary>
      <returns>The key for the token requirement property whose value is <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityBindingElement">
      <summary>Gets or sets the security binding element.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityBindingElementProperty">
      <summary>Gets the key for the token requirement property whose value is the security binding element used to create the channel.</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> used to create the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SupportingTokenAttachmentModeProperty">
      <summary>Gets the key for the token requirement property whose value is the associated <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" /> enumeration member if the request is for a supporting token. </summary>
      <returns>The key for the token requirement property whose value is the associated <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" /> enumeration member.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SupportSecurityContextCancellationProperty">
      <summary>Gets the key for the token requirement property whose value indicates whether the secure conversation token is for a security session (in which case its lifetime is tied to the lifetime of the user’s channel) or for a datagram security channel.</summary>
      <returns>The key for the token requirement property whose value indicates whether the secure conversation token should be cancelable.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SuppressAuditFailureProperty">
      <summary>Gets the key for the token requirement property whose value indicates whether to ignore errors that occur when recording the results of the authentication (service only).</summary>
      <returns>The key for the token requirement property whose value indicates whether to ignore errors that occur when recording the results of the authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.TargetAddressProperty">
      <summary>Gets the key for the token requirement property whose value is the endpoint address that the channel is talking to (client only).</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.EndpointAddress" /> that the channel is talking to.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.TransportScheme">
      <summary>Gets or sets the transport scheme.</summary>
      <returns>The transport scheme.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.TransportSchemeProperty">
      <summary>If the request is made for a token provider/authenticator to be used with transport security, this string is the key for the token requirement property whose value is the transport scheme.</summary>
      <returns>The key for the token requirement property whose value is the transport scheme.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ViaProperty">
      <summary>Gets the key for the token requirement property whose value is the Via URI that the channel is connecting to (client only).</summary>
      <returns>The key for the token requirement property whose value is the Via URI that the channel is connecting to.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes">
      <summary>Represents the types of security tokens recognized by WCF.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.AnonymousSslnego">
      <summary>Gets a string that indicates that the initiator is anonymous but the responder certificate is available as part of a SOAP SSL negotiation.</summary>
      <returns>A string that indicates that the initiator is anonymous but the responder certificate is available as part of a SOAP SSL negotiation.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.MutualSslnego">
      <summary>Gets a string that indicates that the initiator and responder mutually authenticate each other using X.509 certificates.</summary>
      <returns>A string that indicates that the initiator and responder mutually authenticate each other using X.509 certificates.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.SecureConversation">
      <summary>Gets a string that indicates whether the service uses WS-SecureConversation authentication.</summary>
      <returns>A string that indicates whether the service uses WS-SecureConversation authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.SecurityContext">
      <summary>Gets a string that indicates whether the service uses SOAP SecurityContext authentication.</summary>
      <returns>A string that indicates whether the service uses SOAP SecurityContext authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.Spnego">
      <summary>Gets a string that indicates whether authentication is done via the Windows Services SP Negotiation (SPNEGO) protocol.</summary>
      <returns>A string that indicates whether authentication is done via the Windows Services SPNEGO protocol.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.SspiCredential">
      <summary>Gets a string that indicates whether client authentication is by means of a Windows credential.</summary>
      <returns>A string that indicates whether client authentication is by means of a Windows credential.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters">
      <summary>Represents the parameters for an SSL security token that is obtained when doing the SOAP-level SSL protocol with the server.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters" /> class. </summary>
      <param name="requireClientCertificate">A <see cref="T:System.Boolean" /> that determines whether a client certificate is required.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters" /> class. </summary>
      <param name="requireClientCertificate">A <see cref="T:System.Boolean" /> that determines whether a client certificate is required.</param>
      <param name="requireCancellation">A <see cref="T:System.Boolean" /> that determines whether cancellation is required.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SslSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters" /> class. </summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> is not External or Internal.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the token has an asymmetric key.</summary>
      <returns>true if the token has an asymmetric key; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Initializes a security token requirement.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation">
      <summary>Gets or sets a value that indicates whether cancellation is required. </summary>
      <returns>true if cancellation is required; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate">
      <summary>Gets or sets a value that indicates whether a client certificate is required.</summary>
      <returns>true if a client certificate is required; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports client authentication.</summary>
      <returns>true if the token supports client authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>true if the token supports a Windows identity for authentication; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsServerAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>true if the token supports server authentication; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of the class.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SspiSecurityToken">
      <summary>Represents an SSPI security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" /> class. </summary>
      <param name="networkCredential">The <see cref="T:System.Net.NetworkCredential" />.</param>
      <param name="extractGroupsForWindowsAccounts">true if the groups to which the Windows accounts belong are extracted; otherwise, false.</param>
      <param name="allowUnauthenticatedCallers">true if unauthenticated (anonymous) callers are allowed; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Security.Principal.TokenImpersonationLevel,System.Boolean,System.Net.NetworkCredential)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" /> class. </summary>
      <param name="impersonationLevel">The <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</param>
      <param name="allowNtlm">true if NTLM authentication is allowed; otherwise, false.</param>
      <param name="networkCredential">The <see cref="T:System.Net.NetworkCredential" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm">
      <summary>Gets a value that indicates whether to allow NTLM authentication. </summary>
      <returns>true if NTLM authentication is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers">
      <summary>Gets a value that indicates whether to allow anonymous callers. </summary>
      <returns>true if anonymous callers are allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts">
      <summary>Gets a value that indicates whether to extract the groups to which the Windows accounts belong. </summary>
      <returns>true if the groups to which the Windows accounts belong are extracted; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.Id">
      <summary>Gets the token ID.</summary>
      <returns>The token ID.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel">
      <summary>Gets the token impersonation level.</summary>
      <returns>The <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential">
      <summary>Gets the network credential.</summary>
      <returns>The <see cref="T:System.Net.NetworkCredential" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys">
      <summary>Gets a collection of security keys.</summary>
      <returns>A collection of <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom">
      <summary>Gets the starting effective date for the token.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the starting effective date for the token.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo">
      <summary>Gets the expiration date for the token.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the expiration date for the token.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters">
      <summary>Represents the parameters for an SSPI security token that is obtained during the SOAP-level SPNEGO protocol with the server.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters" /> class.</summary>
      <param name="requireCancellation">Whether the token requires cancellation.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters" /> class.</summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the token has an asymmetric key.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Initializes a security token requirement.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.RequireCancellation">
      <summary>Gets or sets a value that indicates whether the token requires cancellation. </summary>
      <returns>true if the token requires cancellation; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.SupportsClientAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports client authentication.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.SupportsServerAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of this class.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters">
      <summary>Represents the parameters for supporting security tokens required by the security binding element.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Clone">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Endorsing">
      <summary>Gets a collection of security token parameters for endorsing supporting tokens required by the security binding element.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SetKeyDerivation(System.Boolean)">
      <summary>Sets a value that indicates whether all endorsing or signed endorsing token parameters require derived keys. </summary>
      <param name="requireDerivedKeys">A <see cref="T:System.Boolean" /> that determines whether parameters require derived keys.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Signed">
      <summary>Gets a collection of security token parameters for signed supporting tokens required by the security binding element</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEncrypted">
      <summary>Gets a collection of security token parameters for signed and encrypted supporting tokens required by the security binding element.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEndorsing">
      <summary>Gets a collection of security token parameters for signed and endorsing supporting tokens required by the security binding element.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of this class.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters">
      <summary>Represents the parameters for a user name security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters" /> class.</summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> is not External or Internal.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the token has an asymmetric key.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Initializes a security token requirement.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.SupportsClientAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports client authentication.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.SupportsServerAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken">
      <summary>Represents a security token whose key is wrapped inside another token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken" /> class. </summary>
      <param name="id">The ID of the key token.</param>
      <param name="keyToWrap">The key to be wrapped.</param>
      <param name="wrappingAlgorithm">The algorithm used to do the wrapping.</param>
      <param name="wrappingToken">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the wrapping token.</param>
      <param name="wrappingTokenReference">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents a reference to the wrapping token.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether the token can create a key identifier clause.</summary>
      <returns>true if the token can create a key identifier clause; otherwise, false. The default is false.</returns>
      <typeparam name="T">The type of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1">
      <summary>Create a key identifier clause.</summary>
      <returns>The type of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <typeparam name="T">The type of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey">
      <summary>Gets the wrapped key.</summary>
      <returns>The wrapped key.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id">
      <summary>Gets the token ID.</summary>
      <returns>The token ID.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Compares the current security key identifier clause to a specified one for equality.</summary>
      <returns>true if the current security key identifier clause equals the specified one; otherwise, false. The default is false.</returns>
      <param name="keyIdentifierClause">The specified security key identifier clause.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys">
      <summary>Gets a collection of security keys.</summary>
      <returns>A collection of <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom">
      <summary>Gets the token effective start date.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the token effective start date.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo">
      <summary>Gets the token expiration date.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the token expiration date.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm">
      <summary>Gets the wrapping algorithm.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the wrapping algorithm or the algorithm used to encrypt the symmetric key.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken">
      <summary>Gets the wrapping token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the wrapping token.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference">
      <summary>Gets the wrapping token reference.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents a reference to the wrapping token.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType">
      <summary>An enumeration listing the possible types of X.509 key identifier clauses.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.Any">
      <summary>
        <see cref="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.SubjectKeyIdentifier" /> is used if present in the X.509 certificate, otherwise <see cref="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.IssuerSerial" /> is used.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.Thumbprint">
      <summary>The X.509 Thumbprint is used.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.IssuerSerial">
      <summary>The IssuerSerial reference is used: the issuer identifier plus a serial number that is unique for an issuer.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.SubjectKeyIdentifier">
      <summary>Reference is based on the subject key identifier extension of an X.509 certificate (not all certificates have one, it is an optional property).</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType.RawDataKeyIdentifier">
      <summary>The reference contains the raw data for the entire X.509 certificate.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters">
      <summary>Represents the parameters for an X.509 security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters" /> class.</summary>
      <param name="x509ReferenceStyle">An <see cref="T:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType,System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters" /> class.</summary>
      <param name="x509ReferenceStyle">An <see cref="T:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType" />.</param>
      <param name="inclusionMode">A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.X509SecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters" /> class.</summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />.</returns>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the token has an asymmetric key.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Initializes a security token requirement.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.SupportsClientAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports client authentication.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.SupportsServerAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of this class.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.X509SecurityTokenParameters.X509ReferenceStyle">
      <summary>Gets and set the X.509 reference style.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.Tokens.X509KeyIdentifierClauseType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.DefaultMessageSecurityVersion">
      <summary>Gets the default set of security specifications versions.</summary>
      <returns>A <see cref="T:System.ServiceModel.MessageSecurityVersion" /> that represents the default set of security specifications versions.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty"></member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.IsCookieMode"></member>
  </members>
</doc>